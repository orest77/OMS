[2018-05-29 16:51:00,393]DEBUG 41712[main] - org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:353) - Resolved location pattern [classpath*:com/softserveinc/edu/oms/persistence/dao/concrete/**/*.class] to resources [file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class], file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]]
[2018-05-29 16:51:00,789]DEBUG 42108[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CreditCardTypeDao.class]
[2018-05-29 16:51:00,898]DEBUG 42217[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderItemDao.class]
[2018-05-29 16:51:00,911]DEBUG 42230[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/CustomerTypeDao.class]
[2018-05-29 16:51:00,927]DEBUG 42246[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RegionDao.class]
[2018-05-29 16:51:00,929]DEBUG 42248[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/RoleDao.class]
[2018-05-29 16:51:00,946]DEBUG 42265[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/DimensionDao.class]
[2018-05-29 16:51:01,019]DEBUG 42338[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderDao.class]
[2018-05-29 16:51:01,026]DEBUG 42345[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/UserDao.class]
[2018-05-29 16:51:01,056]DEBUG 42375[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/ProductDao.class]
[2018-05-29 16:51:01,064]DEBUG 42383[main] - org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:220) - Identified candidate component class: file [/root/OMS/target/generated-classes/emma/classes/com/softserveinc/edu/oms/persistence/dao/concrete/OrderStatusDao.class]
[2018-05-29 16:51:01,294] INFO 42613[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:618) - Overriding bean definition for bean 'sessionFactory': replacing [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]] with [Generic bean: class [org.springframework.orm.hibernate3.LocalSessionFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [testApplicationContex.xml]]
[2018-05-29 16:51:01,296]DEBUG 42615[main] - org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:185) - Loaded 0 bean definitions from location pattern [classpath:testApplicationContex.xml]
[2018-05-29 16:51:01,298] INFO 42617[main] - org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:456) - Refreshing org.springframework.context.support.GenericApplicationContext@2fdab8e4: startup date [Tue May 29 16:51:01 EDT 2018]; root of context hierarchy
[2018-05-29 16:51:01,298]DEBUG 42617[main] - org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:470) - Bean factory for org.springframework.context.support.GenericApplicationContext@2fdab8e4: org.springframework.beans.factory.support.DefaultListableBeanFactory@70ec9e80: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-29 16:51:01,359]DEBUG 42678[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2018-05-29 16:51:01,360]DEBUG 42679[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2018-05-29 16:51:01,361]DEBUG 42680[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
[2018-05-29 16:51:01,362]DEBUG 42681[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2018-05-29 16:51:02,107]DEBUG 43426[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2018-05-29 16:51:02,107]DEBUG 43426[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2018-05-29 16:51:02,108] INFO 43427[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:137) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
[2018-05-29 16:51:02,109]DEBUG 43428[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
[2018-05-29 16:51:02,109]DEBUG 43428[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2018-05-29 16:51:02,110]DEBUG 43429[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2018-05-29 16:51:02,111]DEBUG 43430[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2018-05-29 16:51:02,111]DEBUG 43430[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
[2018-05-29 16:51:02,112]DEBUG 43431[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2018-05-29 16:51:02,112]DEBUG 43431[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2018-05-29 16:51:02,113]DEBUG 43432[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2018-05-29 16:51:02,203]DEBUG 43522[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
[2018-05-29 16:51:02,204]DEBUG 43523[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2018-05-29 16:51:02,204]DEBUG 43523[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2018-05-29 16:51:02,205]DEBUG 43524[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2018-05-29 16:51:02,205]DEBUG 43524[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
[2018-05-29 16:51:02,206]DEBUG 43525[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2018-05-29 16:51:02,206]DEBUG 43525[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2018-05-29 16:51:02,207]DEBUG 43526[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2018-05-29 16:51:02,259]DEBUG 43578[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
[2018-05-29 16:51:02,286]DEBUG 43605[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2018-05-29 16:51:02,315]DEBUG 43634[main] - org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:776) - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1455ce1e]
[2018-05-29 16:51:02,316]DEBUG 43635[main] - org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:800) - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@453a98d3]
[2018-05-29 16:51:02,319] INFO 43638[main] - org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:555) - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@70ec9e80: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-29 16:51:02,320]DEBUG 43639[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'transactionManager'
[2018-05-29 16:51:02,320]DEBUG 43639[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'transactionManager'
[2018-05-29 16:51:02,355]DEBUG 43674[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
[2018-05-29 16:51:02,538]DEBUG 43857[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:02,539]DEBUG 43858[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'sessionFactory'
[2018-05-29 16:51:02,678]DEBUG 43997[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
[2018-05-29 16:51:02,679]DEBUG 43998[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'sessionFactory'
[2018-05-29 16:51:02,839]DEBUG 44158[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:02,841]DEBUG 44160[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:02,842]DEBUG 44161[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:02,853]DEBUG 44172[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ff4f9bf
[2018-05-29 16:51:02,874]DEBUG 44193[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a85f01
[2018-05-29 16:51:02,875]DEBUG 44194[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@57931be2
[2018-05-29 16:51:02,876]DEBUG 44195[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:02,877]DEBUG 44196[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:02,877]DEBUG 44196[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:02,973]DEBUG 44292[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:02,974]DEBUG 44293[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:02,975]DEBUG 44294[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:02,976]DEBUG 44295[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:02,977]DEBUG 44296[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:02,978]DEBUG 44297[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:02,983]DEBUG 44302[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:02,984]DEBUG 44303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:02,984]DEBUG 44303[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:02,985]DEBUG 44304[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:02,986]DEBUG 44305[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:02,987]DEBUG 44306[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:02,988]DEBUG 44307[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:02,989]DEBUG 44308[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:02,990]DEBUG 44309[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:03,138]DEBUG 44457[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:03,139]DEBUG 44458[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:03,517]DEBUG 44836[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:03,518]DEBUG 44837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@774140b3
[2018-05-29 16:51:03,518]DEBUG 44837[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@774140b3
[2018-05-29 16:51:03,527]DEBUG 44846[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2db493c7
[2018-05-29 16:51:03,528]DEBUG 44847[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2db493c7
[2018-05-29 16:51:03,529]DEBUG 44848[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@76f294c5
[2018-05-29 16:51:03,530]DEBUG 44849[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@76f294c5
[2018-05-29 16:51:03,578]DEBUG 44897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@693e6031
[2018-05-29 16:51:03,579]DEBUG 44898[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@693e6031
[2018-05-29 16:51:03,702]DEBUG 45021[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@2083f3ec
[2018-05-29 16:51:03,703]DEBUG 45022[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2083f3ec
[2018-05-29 16:51:03,704]DEBUG 45023[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@70aa628f
[2018-05-29 16:51:03,705]DEBUG 45024[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70aa628f
[2018-05-29 16:51:03,706]DEBUG 45025[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:03,707]DEBUG 45026[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:03,708]DEBUG 45027[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:03,708]DEBUG 45027[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@38e53797
[2018-05-29 16:51:03,709]DEBUG 45028[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:03,710]DEBUG 45029[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:03,711]DEBUG 45030[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:03,713]DEBUG 45032[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d867496
[2018-05-29 16:51:03,714]DEBUG 45033[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@39e7e257
[2018-05-29 16:51:03,715]DEBUG 45034[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39e7e257
[2018-05-29 16:51:03,716]DEBUG 45035[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@cbf5e35
[2018-05-29 16:51:03,717]DEBUG 45036[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@cbf5e35
[2018-05-29 16:51:03,718]DEBUG 45037[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bd7a97b
[2018-05-29 16:51:03,719]DEBUG 45038[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bd7a97b
[2018-05-29 16:51:03,720]DEBUG 45039[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@31237b70
[2018-05-29 16:51:03,720]DEBUG 45039[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31237b70
[2018-05-29 16:51:03,721]DEBUG 45040[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2286fd2f
[2018-05-29 16:51:03,722]DEBUG 45041[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2286fd2f
[2018-05-29 16:51:03,723]DEBUG 45042[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e12f6d
[2018-05-29 16:51:03,725]DEBUG 45044[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c970086
[2018-05-29 16:51:03,726]DEBUG 45045[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:03,728]DEBUG 45047[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:03,730]DEBUG 45049[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:03,731]DEBUG 45050[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:03,732]DEBUG 45051[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:03,732]DEBUG 45051[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:03,747]DEBUG 45066[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@3e873630
[2018-05-29 16:51:03,748]DEBUG 45067[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:03,749]DEBUG 45068[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:03,749]DEBUG 45068[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:03,749]DEBUG 45068[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:03,750]DEBUG 45069[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:03,750]DEBUG 45069[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:03,750]DEBUG 45069[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@7ac38fd3
[2018-05-29 16:51:03,751]DEBUG 45070[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:03,751]DEBUG 45070[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:03,752]DEBUG 45071[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fa6aa24
[2018-05-29 16:51:03,753]DEBUG 45072[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@36583eaf
[2018-05-29 16:51:03,753]DEBUG 45072[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:03,754]DEBUG 45073[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:03,755]DEBUG 45074[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2aaf39e8
[2018-05-29 16:51:03,883]DEBUG 45202[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@5bb4930a
[2018-05-29 16:51:03,884]DEBUG 45203[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@540adf14
[2018-05-29 16:51:03,885]DEBUG 45204[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3b889277
[2018-05-29 16:51:03,886]DEBUG 45205[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@1b77eafe
[2018-05-29 16:51:03,887]DEBUG 45206[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b77eafe
[2018-05-29 16:51:03,887]DEBUG 45206[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43f51c52
[2018-05-29 16:51:03,888]DEBUG 45207[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@57a69dd2
[2018-05-29 16:51:03,889]DEBUG 45208[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5cafad58
[2018-05-29 16:51:03,889]DEBUG 45208[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@26935e7
[2018-05-29 16:51:03,890]DEBUG 45209[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1aad4436
[2018-05-29 16:51:03,891]DEBUG 45210[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4737c153
[2018-05-29 16:51:03,892]DEBUG 45211[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@209f750
[2018-05-29 16:51:03,892]DEBUG 45211[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6a8e9ad3
[2018-05-29 16:51:03,959]DEBUG 45278[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
[2018-05-29 16:51:03,960]DEBUG 45279[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
[2018-05-29 16:51:03,961]DEBUG 45280[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
[2018-05-29 16:51:03,962]DEBUG 45281[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
[2018-05-29 16:51:03,964]DEBUG 45283[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
[2018-05-29 16:51:03,964]DEBUG 45283[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
[2018-05-29 16:51:03,965]DEBUG 45284[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
[2018-05-29 16:51:03,966]DEBUG 45285[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
[2018-05-29 16:51:03,967]DEBUG 45286[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
[2018-05-29 16:51:03,968]DEBUG 45287[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
[2018-05-29 16:51:03,969]DEBUG 45288[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
[2018-05-29 16:51:03,970]DEBUG 45289[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
[2018-05-29 16:51:03,971]DEBUG 45290[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
[2018-05-29 16:51:03,971]DEBUG 45290[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
[2018-05-29 16:51:03,972]DEBUG 45291[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:100) - Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
[2018-05-29 16:51:03,973] INFO 45292[main] - org.hibernate.cfg.Configuration.configure(Configuration.java:2192) - configuring from url: file:/root/OMS/target/test-classes/hibernate_test.cfg.xml
[2018-05-29 16:51:04,024]DEBUG 45343[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:67) - trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd]
[2018-05-29 16:51:04,040] WARN 45359[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:73) - recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
[2018-05-29 16:51:04,040]DEBUG 45359[main] - org.hibernate.util.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:77) - attempting to resolve on classpath under org/hibernate/
[2018-05-29 16:51:04,079]DEBUG 45398[main] - org.hibernate.util.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:109) - located [http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd] in classpath
[2018-05-29 16:51:04,091]DEBUG 45410[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.driver_class=com.mysql.jdbc.Driver
[2018-05-29 16:51:04,091]DEBUG 45410[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.dialect=org.hibernate.dialect.MySQLDialect
[2018-05-29 16:51:04,092]DEBUG 45411[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.url=jdbc:mysql://192.168.0.109:3306/oms
[2018-05-29 16:51:04,092]DEBUG 45411[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.username=user_db
[2018-05-29 16:51:04,093]DEBUG 45412[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.connection.password=123pass
[2018-05-29 16:51:04,093]DEBUG 45412[main] - org.hibernate.cfg.Configuration.addProperties(Configuration.java:2118) - hibernate.hbm2ddl.auto=create-drop
[2018-05-29 16:51:04,094]DEBUG 45413[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Role] for mapping
[2018-05-29 16:51:04,124]DEBUG 45443[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Region] for mapping
[2018-05-29 16:51:04,125]DEBUG 45444[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CustomerType] for mapping
[2018-05-29 16:51:04,125]DEBUG 45444[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.User] for mapping
[2018-05-29 16:51:04,126]DEBUG 45445[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderStatus] for mapping
[2018-05-29 16:51:04,126]DEBUG 45445[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Order] for mapping
[2018-05-29 16:51:04,127]DEBUG 45446[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Product] for mapping
[2018-05-29 16:51:04,127]DEBUG 45446[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.Dimension] for mapping
[2018-05-29 16:51:04,128]DEBUG 45447[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.OrderItem] for mapping
[2018-05-29 16:51:04,128]DEBUG 45447[main] - org.hibernate.cfg.Configuration.parseMappingElement(Configuration.java:2363) - session-factory config [null] named class [com.softserveinc.edu.oms.domain.entities.CreditCardType] for mapping
[2018-05-29 16:51:04,128] INFO 45447[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2297) - Configured SessionFactory: null
[2018-05-29 16:51:04,129]DEBUG 45448[main] - org.hibernate.cfg.Configuration.doConfigure(Configuration.java:2298) - properties: {hibernate.connection.password=123pass, java.runtime.name=OpenJDK Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/amd64, java.vm.version=24.181-b00, hibernate.connection.username=user_db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/root/OMS, java.runtime.version=1.7.0_181-mockbuild_2018_05_22_00_09-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/root/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/root/OMS/target/surefire/surefirebooter2777316200759370921.jar, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/root/OMS/target/test-classes:/root/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-862.el7.x86_64, user.home=/root, user.timezone=America/New_York, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.class.path=/root/OMS/target/test-classes:/root/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, user.name=root, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.java.command=/root/OMS/target/surefire/surefirebooter2777316200759370921.jar /root/OMS/target/surefire 2018-05-29T16-50-11_150-jvmRun1 surefire3401462582085145035tmp surefire_0695136141501379920tmp, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre, sun.arch.data.model=64, hibernate.connection.url=jdbc:mysql://192.168.0.109:3306/oms, hibernate.dialect=org.hibernate.dialect.MySQLDialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_181, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, hibernate.hbm2ddl.auto=create-drop, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.cpu.isalist=}
[2018-05-29 16:51:04,175]DEBUG 45494[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:04,176]DEBUG 45495[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:04,220] INFO 45539[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:04,244]DEBUG 45563[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,262]DEBUG 45581[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,263]DEBUG 45582[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Role
[2018-05-29 16:51:04,264] INFO 45583[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Role on table Roles
[2018-05-29 16:51:04,268]DEBUG 45587[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,269]DEBUG 45588[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,269]DEBUG 45588[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,271]DEBUG 45590[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,272]DEBUG 45591[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Roles), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,272]DEBUG 45591[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property roleName with lazy=false
[2018-05-29 16:51:04,273]DEBUG 45592[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for roleName
[2018-05-29 16:51:04,273]DEBUG 45592[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property roleName
[2018-05-29 16:51:04,274] INFO 45593[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:04,274]DEBUG 45593[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,275]DEBUG 45594[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,275]DEBUG 45594[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Region
[2018-05-29 16:51:04,276] INFO 45595[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Region on table Regions
[2018-05-29 16:51:04,278]DEBUG 45597[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,279]DEBUG 45598[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,280]DEBUG 45599[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,280]DEBUG 45599[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,281]DEBUG 45600[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Regions), mappingColumn=RegionName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,281]DEBUG 45600[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property regionName with lazy=false
[2018-05-29 16:51:04,282]DEBUG 45601[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for regionName
[2018-05-29 16:51:04,282]DEBUG 45601[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property regionName
[2018-05-29 16:51:04,283] INFO 45602[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:04,283]DEBUG 45602[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,284]DEBUG 45603[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,284]DEBUG 45603[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CustomerType
[2018-05-29 16:51:04,285] INFO 45604[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CustomerType on table CustomerTypes
[2018-05-29 16:51:04,287]DEBUG 45606[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,288]DEBUG 45607[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,289]DEBUG 45608[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,289]DEBUG 45608[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,290]DEBUG 45609[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=Discount, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,291]DEBUG 45610[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property discount with lazy=false
[2018-05-29 16:51:04,291]DEBUG 45610[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for discount
[2018-05-29 16:51:04,292]DEBUG 45611[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property discount
[2018-05-29 16:51:04,292]DEBUG 45611[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MaxRange, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,293]DEBUG 45612[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxRange with lazy=false
[2018-05-29 16:51:04,293]DEBUG 45612[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxRange
[2018-05-29 16:51:04,294]DEBUG 45613[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxRange
[2018-05-29 16:51:04,295]DEBUG 45614[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=MinRange, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,295]DEBUG 45614[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property minRange with lazy=false
[2018-05-29 16:51:04,296]DEBUG 45615[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for minRange
[2018-05-29 16:51:04,296]DEBUG 45615[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property minRange
[2018-05-29 16:51:04,297]DEBUG 45616[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CustomerTypes), mappingColumn=TypeName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,297]DEBUG 45616[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property typeName with lazy=false
[2018-05-29 16:51:04,298]DEBUG 45617[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for typeName
[2018-05-29 16:51:04,298]DEBUG 45617[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property typeName
[2018-05-29 16:51:04,299] INFO 45618[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:04,331]DEBUG 45650[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,331]DEBUG 45650[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,332]DEBUG 45651[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name User
[2018-05-29 16:51:04,333] INFO 45652[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.User on table Users
[2018-05-29 16:51:04,336]DEBUG 45655[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,337]DEBUG 45656[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,338]DEBUG 45657[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,338]DEBUG 45657[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,339]DEBUG 45658[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=IsUserActive, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,339]DEBUG 45658[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2018-05-29 16:51:04,340]DEBUG 45659[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2018-05-29 16:51:04,340]DEBUG 45659[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2018-05-29 16:51:04,341]DEBUG 45660[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Balance, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,342]DEBUG 45661[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property balance with lazy=false
[2018-05-29 16:51:04,342]DEBUG 45661[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for balance
[2018-05-29 16:51:04,343]DEBUG 45662[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property balance
[2018-05-29 16:51:04,343]DEBUG 45662[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='CustomerTypeRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,344]DEBUG 45663[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=customerType, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,344]DEBUG 45663[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customerType
[2018-05-29 16:51:04,345]DEBUG 45664[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,346]DEBUG 45665[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property email with lazy=false
[2018-05-29 16:51:04,346]DEBUG 45665[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for email
[2018-05-29 16:51:04,347]DEBUG 45666[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property email
[2018-05-29 16:51:04,347]DEBUG 45666[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=FirstName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,348]DEBUG 45667[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property firstName with lazy=false
[2018-05-29 16:51:04,348]DEBUG 45667[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for firstName
[2018-05-29 16:51:04,348]DEBUG 45667[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property firstName
[2018-05-29 16:51:04,349]DEBUG 45668[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=LastName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,349]DEBUG 45668[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property lastName with lazy=false
[2018-05-29 16:51:04,349]DEBUG 45668[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for lastName
[2018-05-29 16:51:04,349]DEBUG 45668[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property lastName
[2018-05-29 16:51:04,350]DEBUG 45669[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Login, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,350]DEBUG 45669[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property login with lazy=false
[2018-05-29 16:51:04,350]DEBUG 45669[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for login
[2018-05-29 16:51:04,351]DEBUG 45670[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property login
[2018-05-29 16:51:04,351]DEBUG 45670[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,351]DEBUG 45670[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property password with lazy=false
[2018-05-29 16:51:04,351]DEBUG 45670[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for password
[2018-05-29 16:51:04,352]DEBUG 45671[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property password
[2018-05-29 16:51:04,352]DEBUG 45671[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RegionRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,352]DEBUG 45671[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=region, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,353]DEBUG 45672[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property region
[2018-05-29 16:51:04,356]DEBUG 45675[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='RoleRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,357]DEBUG 45676[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Users), mappingColumn=role, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,357]DEBUG 45676[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property role
[2018-05-29 16:51:04,357] INFO 45676[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:04,358]DEBUG 45677[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,358]DEBUG 45677[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,358]DEBUG 45677[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderStatus
[2018-05-29 16:51:04,359] INFO 45678[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderStatus on table OrderStatuses
[2018-05-29 16:51:04,359]DEBUG 45678[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,360]DEBUG 45679[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,360]DEBUG 45679[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,360]DEBUG 45679[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,365]DEBUG 45684[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderStatuses), mappingColumn=OrederStatusName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,365]DEBUG 45684[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderStatusName with lazy=false
[2018-05-29 16:51:04,366]DEBUG 45685[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderStatusName
[2018-05-29 16:51:04,366]DEBUG 45685[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatusName
[2018-05-29 16:51:04,366] INFO 45685[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:04,367]DEBUG 45686[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,367]DEBUG 45686[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,367]DEBUG 45686[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Order
[2018-05-29 16:51:04,367] INFO 45686[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Order on table Orders
[2018-05-29 16:51:04,370]DEBUG 45689[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,370]DEBUG 45689[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,370]DEBUG 45689[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,371]DEBUG 45690[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,371]DEBUG 45690[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Assigne', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,371]DEBUG 45690[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=assigne, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,372]DEBUG 45691[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property assigne
[2018-05-29 16:51:04,372]DEBUG 45691[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='Customer', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,372]DEBUG 45691[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=customer, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,373]DEBUG 45692[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property customer
[2018-05-29 16:51:04,373]DEBUG 45692[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=DeliveryDate, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,373]DEBUG 45692[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property deliveryDate with lazy=false
[2018-05-29 16:51:04,374]DEBUG 45693[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for deliveryDate
[2018-05-29 16:51:04,374]DEBUG 45693[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property deliveryDate
[2018-05-29 16:51:04,374]DEBUG 45693[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=IsGift, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,375]DEBUG 45694[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property isGift with lazy=false
[2018-05-29 16:51:04,375]DEBUG 45694[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for isGift
[2018-05-29 16:51:04,375]DEBUG 45694[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property isGift
[2018-05-29 16:51:04,375]DEBUG 45694[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=MaxDiscount, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,376]DEBUG 45695[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property maxDiscount with lazy=false
[2018-05-29 16:51:04,376]DEBUG 45695[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for maxDiscount
[2018-05-29 16:51:04,376]DEBUG 45695[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property maxDiscount
[2018-05-29 16:51:04,377]DEBUG 45696[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderDate, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,377]DEBUG 45696[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderDate with lazy=false
[2018-05-29 16:51:04,377]DEBUG 45696[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderDate
[2018-05-29 16:51:04,378]DEBUG 45697[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderDate
[2018-05-29 16:51:04,378]DEBUG 45697[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,378]DEBUG 45697[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderName with lazy=false
[2018-05-29 16:51:04,379]DEBUG 45698[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderName
[2018-05-29 16:51:04,379]DEBUG 45698[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderName
[2018-05-29 16:51:04,379]DEBUG 45698[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=OrderNumber, insertable=true, updatable=true, unique=true}
[2018-05-29 16:51:04,380]DEBUG 45699[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property orderNumber with lazy=false
[2018-05-29 16:51:04,380]DEBUG 45699[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for orderNumber
[2018-05-29 16:51:04,380]DEBUG 45699[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderNumber
[2018-05-29 16:51:04,381]DEBUG 45700[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderStatusRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,381]DEBUG 45700[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=orderStatus, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,381]DEBUG 45700[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property orderStatus
[2018-05-29 16:51:04,382]DEBUG 45701[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=PreferableDeliveryDate, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,382]DEBUG 45701[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property preferableDeliveryDate with lazy=false
[2018-05-29 16:51:04,382]DEBUG 45701[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for preferableDeliveryDate
[2018-05-29 16:51:04,383]DEBUG 45702[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property preferableDeliveryDate
[2018-05-29 16:51:04,383]DEBUG 45702[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Orders), mappingColumn=TotalPrice, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,383]DEBUG 45702[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property totalPrice with lazy=false
[2018-05-29 16:51:04,383]DEBUG 45702[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for totalPrice
[2018-05-29 16:51:04,384]DEBUG 45703[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property totalPrice
[2018-05-29 16:51:04,386] INFO 45705[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:04,386]DEBUG 45705[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,387]DEBUG 45706[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,387]DEBUG 45706[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Product
[2018-05-29 16:51:04,387] INFO 45706[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Product on table Products
[2018-05-29 16:51:04,389]DEBUG 45708[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,389]DEBUG 45708[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,390]DEBUG 45709[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,390]DEBUG 45709[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,390]DEBUG 45709[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=IsProductActive, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,391]DEBUG 45710[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property active with lazy=false
[2018-05-29 16:51:04,391]DEBUG 45710[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for active
[2018-05-29 16:51:04,391]DEBUG 45710[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property active
[2018-05-29 16:51:04,392]DEBUG 45711[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductDescription, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,392]DEBUG 45711[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productDescription with lazy=false
[2018-05-29 16:51:04,392]DEBUG 45711[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productDescription
[2018-05-29 16:51:04,393]DEBUG 45712[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productDescription
[2018-05-29 16:51:04,393]DEBUG 45712[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,393]DEBUG 45712[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productName with lazy=false
[2018-05-29 16:51:04,393]DEBUG 45712[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productName
[2018-05-29 16:51:04,394]DEBUG 45713[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productName
[2018-05-29 16:51:04,394]DEBUG 45713[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Products), mappingColumn=ProductPrice, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,394]DEBUG 45713[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property productPrice with lazy=false
[2018-05-29 16:51:04,395]DEBUG 45714[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for productPrice
[2018-05-29 16:51:04,395]DEBUG 45714[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property productPrice
[2018-05-29 16:51:04,395] INFO 45714[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:04,395]DEBUG 45714[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,396]DEBUG 45715[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,396]DEBUG 45715[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name Dimension
[2018-05-29 16:51:04,396] INFO 45715[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.Dimension on table Dimensions
[2018-05-29 16:51:04,397]DEBUG 45716[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,398]DEBUG 45717[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,398]DEBUG 45717[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,399]DEBUG 45718[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,399]DEBUG 45718[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=DimensionName, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,399]DEBUG 45718[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property dimensionName with lazy=false
[2018-05-29 16:51:04,400]DEBUG 45719[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for dimensionName
[2018-05-29 16:51:04,400]DEBUG 45719[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimensionName
[2018-05-29 16:51:04,400]DEBUG 45719[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Dimensions), mappingColumn=NumberOfProducts, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,400]DEBUG 45719[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property numberOfProduct with lazy=false
[2018-05-29 16:51:04,401]DEBUG 45720[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for numberOfProduct
[2018-05-29 16:51:04,401]DEBUG 45720[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property numberOfProduct
[2018-05-29 16:51:04,401] INFO 45720[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.OrderItem
[2018-05-29 16:51:04,402]DEBUG 45721[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,402]DEBUG 45721[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,402]DEBUG 45721[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name OrderItem
[2018-05-29 16:51:04,402] INFO 45721[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.OrderItem on table OrderItems
[2018-05-29 16:51:04,404]DEBUG 45723[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,405]DEBUG 45724[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,405]DEBUG 45724[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,405]DEBUG 45724[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,405]DEBUG 45724[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Cost, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,406]DEBUG 45725[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cost with lazy=false
[2018-05-29 16:51:04,406]DEBUG 45725[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cost
[2018-05-29 16:51:04,406]DEBUG 45725[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cost
[2018-05-29 16:51:04,409]DEBUG 45728[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='DimensionRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,409]DEBUG 45728[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=dimension, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,410]DEBUG 45729[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property dimension
[2018-05-29 16:51:04,410]DEBUG 45729[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=ItemPrice, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,410]DEBUG 45729[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property itemPrice with lazy=false
[2018-05-29 16:51:04,411]DEBUG 45730[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for itemPrice
[2018-05-29 16:51:04,411]DEBUG 45730[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property itemPrice
[2018-05-29 16:51:04,411]DEBUG 45730[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='OrderRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,411]DEBUG 45730[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=order, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,412]DEBUG 45731[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property order
[2018-05-29 16:51:04,412]DEBUG 45731[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3JoinColumn{logicalColumnName='ProductRef', referencedColumn='', mappedBy=''}
[2018-05-29 16:51:04,412]DEBUG 45731[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=product, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,413]DEBUG 45732[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property product
[2018-05-29 16:51:04,413]DEBUG 45732[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OrderItems), mappingColumn=Quantity, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,414]DEBUG 45733[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property quantity with lazy=false
[2018-05-29 16:51:04,414]DEBUG 45733[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for quantity
[2018-05-29 16:51:04,414]DEBUG 45733[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property quantity
[2018-05-29 16:51:04,414] INFO 45733[main] - org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:532) - Binding entity from annotated class: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2018-05-29 16:51:04,415]DEBUG 45734[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2018-05-29 16:51:04,415]DEBUG 45734[main] - org.hibernate.cfg.AnnotationBinder.determineSharedCacheMode(AnnotationBinder.java:1019) - no value specified for 'javax.persistence.sharedCache.mode'; using UNSPECIFIED
[2018-05-29 16:51:04,415]DEBUG 45734[main] - org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:364) - Import with entity name CreditCardType
[2018-05-29 16:51:04,416] INFO 45735[main] - org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:530) - Bind entity com.softserveinc.edu.oms.domain.entities.CreditCardType on table CardType
[2018-05-29 16:51:04,417]DEBUG 45736[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=ID, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,418]DEBUG 45737[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property id with lazy=false
[2018-05-29 16:51:04,418]DEBUG 45737[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for id
[2018-05-29 16:51:04,418]DEBUG 45737[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property id
[2018-05-29 16:51:04,419]DEBUG 45738[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardType, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,419]DEBUG 45738[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cardType with lazy=false
[2018-05-29 16:51:04,419]DEBUG 45738[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cardType
[2018-05-29 16:51:04,420]DEBUG 45739[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cardType
[2018-05-29 16:51:04,420]DEBUG 45739[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardNumber, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,420]DEBUG 45739[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property creditCardNumber with lazy=false
[2018-05-29 16:51:04,421]DEBUG 45740[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for creditCardNumber
[2018-05-29 16:51:04,421]DEBUG 45740[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property creditCardNumber
[2018-05-29 16:51:04,421]DEBUG 45740[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=CardCvv2, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,421]DEBUG 45740[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property cvv2 with lazy=false
[2018-05-29 16:51:04,422]DEBUG 45741[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for cvv2
[2018-05-29 16:51:04,422]DEBUG 45741[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property cvv2
[2018-05-29 16:51:04,422]DEBUG 45741[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=Expiration_Date, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,423]DEBUG 45742[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property expDate with lazy=false
[2018-05-29 16:51:04,423]DEBUG 45742[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for expDate
[2018-05-29 16:51:04,423]DEBUG 45742[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property expDate
[2018-05-29 16:51:04,424]DEBUG 45743[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueDate, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,424]DEBUG 45743[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueDate with lazy=false
[2018-05-29 16:51:04,424]DEBUG 45743[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueDate
[2018-05-29 16:51:04,424]DEBUG 45743[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueDate
[2018-05-29 16:51:04,425]DEBUG 45744[main] - org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:192) - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(CardType), mappingColumn=IssueNumber, insertable=true, updatable=true, unique=false}
[2018-05-29 16:51:04,425]DEBUG 45744[main] - org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175) - binding property issueNumber with lazy=false
[2018-05-29 16:51:04,425]DEBUG 45744[main] - org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:303) - building SimpleValue for issueNumber
[2018-05-29 16:51:04,426]DEBUG 45745[main] - org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:255) - Building property issueNumber
[2018-05-29 16:51:04,426]DEBUG 45745[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,426]DEBUG 45745[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for roleName
[2018-05-29 16:51:04,426]DEBUG 45745[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,427]DEBUG 45746[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for regionName
[2018-05-29 16:51:04,427]DEBUG 45746[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,433]DEBUG 45752[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for discount
[2018-05-29 16:51:04,433]DEBUG 45752[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxRange
[2018-05-29 16:51:04,433]DEBUG 45752[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for minRange
[2018-05-29 16:51:04,433]DEBUG 45752[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for typeName
[2018-05-29 16:51:04,433]DEBUG 45752[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,434]DEBUG 45753[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2018-05-29 16:51:04,434]DEBUG 45753[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for balance
[2018-05-29 16:51:04,434]DEBUG 45753[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for email
[2018-05-29 16:51:04,434]DEBUG 45753[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for firstName
[2018-05-29 16:51:04,435]DEBUG 45754[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for lastName
[2018-05-29 16:51:04,435]DEBUG 45754[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for login
[2018-05-29 16:51:04,435]DEBUG 45754[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for password
[2018-05-29 16:51:04,435]DEBUG 45754[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,435]DEBUG 45754[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderStatusName
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for deliveryDate
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for isGift
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for maxDiscount
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderDate
[2018-05-29 16:51:04,436]DEBUG 45755[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderName
[2018-05-29 16:51:04,437]DEBUG 45756[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for orderNumber
[2018-05-29 16:51:04,437]DEBUG 45756[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for preferableDeliveryDate
[2018-05-29 16:51:04,437]DEBUG 45756[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for totalPrice
[2018-05-29 16:51:04,437]DEBUG 45756[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,437]DEBUG 45756[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for active
[2018-05-29 16:51:04,438]DEBUG 45757[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productDescription
[2018-05-29 16:51:04,438]DEBUG 45757[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productName
[2018-05-29 16:51:04,438]DEBUG 45757[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for productPrice
[2018-05-29 16:51:04,438]DEBUG 45757[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,439]DEBUG 45758[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for dimensionName
[2018-05-29 16:51:04,439]DEBUG 45758[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for numberOfProduct
[2018-05-29 16:51:04,439]DEBUG 45758[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,439]DEBUG 45758[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cost
[2018-05-29 16:51:04,439]DEBUG 45758[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for itemPrice
[2018-05-29 16:51:04,440]DEBUG 45759[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for quantity
[2018-05-29 16:51:04,440]DEBUG 45759[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for id
[2018-05-29 16:51:04,440]DEBUG 45759[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cardType
[2018-05-29 16:51:04,440]DEBUG 45759[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for creditCardNumber
[2018-05-29 16:51:04,440]DEBUG 45759[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for cvv2
[2018-05-29 16:51:04,441]DEBUG 45760[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for expDate
[2018-05-29 16:51:04,441]DEBUG 45760[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueDate
[2018-05-29 16:51:04,441]DEBUG 45760[main] - org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:341) - Setting SimpleValue typeName for issueNumber
[2018-05-29 16:51:04,441]DEBUG 45760[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:04,443]DEBUG 45762[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:04,443]DEBUG 45762[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:04,443]DEBUG 45762[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:04,444]DEBUG 45763[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:04,444]DEBUG 45763[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:04,444]DEBUG 45763[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:04,444]DEBUG 45763[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:04,445]DEBUG 45764[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:04,445]DEBUG 45764[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:04,445]DEBUG 45764[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:04,445]DEBUG 45764[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:04,445]DEBUG 45764[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:04,446]DEBUG 45765[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:04,446]DEBUG 45765[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:04,446]DEBUG 45765[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:04,449] INFO 45768[main] - org.hibernate.cfg.Configuration.applyHibernateValidatorLegacyConstraintsOnDDL(Configuration.java:1676) - Hibernate Validator not found: ignoring
[2018-05-29 16:51:04,450]DEBUG 45769[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:04,450]DEBUG 45769[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:04,451]DEBUG 45770[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:04,452]DEBUG 45771[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:04,465] INFO 45784[main] - org.springframework.orm.hibernate3.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:777) - Building new Hibernate SessionFactory
[2018-05-29 16:51:04,465]DEBUG 45784[main] - org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1854) - Preparing to build session factory with filters : {}
[2018-05-29 16:51:04,465]DEBUG 45784[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:04,466]DEBUG 45785[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:04,466]DEBUG 45785[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:04,466]DEBUG 45785[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:04,466]DEBUG 45785[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:04,466]DEBUG 45785[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:04,467]DEBUG 45786[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:04,467]DEBUG 45786[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:04,467]DEBUG 45786[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:04,467]DEBUG 45786[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:04,467]DEBUG 45786[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:04,468]DEBUG 45787[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:04,468]DEBUG 45787[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:04,468]DEBUG 45787[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:04,468]DEBUG 45787[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:04,468]DEBUG 45787[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:04,469]DEBUG 45788[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:04,469]DEBUG 45788[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:04,469]DEBUG 45788[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:04,470]DEBUG 45789[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:04,470]DEBUG 45789[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:04,470]DEBUG 45789[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:04,483]DEBUG 45802[main] - org.hibernate.cfg.Configuration.enableLegacyHibernateValidator(Configuration.java:1896) - Legacy Validator not present in classpath, ignoring event listener registration
[2018-05-29 16:51:04,483]DEBUG 45802[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:04,484]DEBUG 45803[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:04,484]DEBUG 45803[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:04,485]DEBUG 45804[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:04,487]DEBUG 45806[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener(HibernateSearchEventListenerRegister.java:231) - Search not present in classpath, ignoring event listener registration.
[2018-05-29 16:51:04,488] INFO 45807[main] - org.hibernate.cfg.search.HibernateSearchEventListenerRegister.enableHibernateSearch(HibernateSearchEventListenerRegister.java:75) - Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
[2018-05-29 16:51:04,498] INFO 45817[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:64) - Using Hibernate built-in connection pool (not for production use!)
[2018-05-29 16:51:04,499] INFO 45818[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:65) - Hibernate connection pool size: 20
[2018-05-29 16:51:04,499] INFO 45818[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:68) - autocommit mode: false
[2018-05-29 16:51:04,500] INFO 45819[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:103) - using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://192.168.0.109:3306/oms
[2018-05-29 16:51:04,500] INFO 45819[main] - org.hibernate.connection.DriverManagerConnectionProvider.configure(DriverManagerConnectionProvider.java:106) - connection properties: {user=user_db, password=123pass}
[2018-05-29 16:51:04,500]DEBUG 45819[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:132) - opening new JDBC connection
[2018-05-29 16:51:04,534]DEBUG 45853[main] - org.hibernate.connection.DriverManagerConnectionProvider.getConnection(DriverManagerConnectionProvider.java:138) - created connection to: jdbc:mysql://192.168.0.109:3306/oms, Isolation Level: 4
[2018-05-29 16:51:04,535] INFO 45854[main] - org.hibernate.dialect.Dialect.<init>(Dialect.java:135) - Using dialect: org.hibernate.dialect.MySQLDialect
[2018-05-29 16:51:04,536] INFO 45855[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:126) - Database ->
       name : MySQL
    version : 5.5.56-MariaDB
      major : 5
      minor : 5
[2018-05-29 16:51:04,536] INFO 45855[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:132) - Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.17 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[2018-05-29 16:51:04,536] INFO 45855[main] - org.hibernate.transaction.TransactionFactoryFactory.buildTransactionFactory(TransactionFactoryFactory.java:65) - Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
[2018-05-29 16:51:04,536] INFO 45855[main] - org.hibernate.transaction.TransactionManagerLookupFactory.getTransactionManagerLookup(TransactionManagerLookupFactory.java:83) - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
[2018-05-29 16:51:04,536] INFO 45855[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:179) - Automatic flush during beforeCompletion(): disabled
[2018-05-29 16:51:04,537] INFO 45856[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:183) - Automatic session close at end of transaction: disabled
[2018-05-29 16:51:04,537] INFO 45856[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:190) - JDBC batch size: 15
[2018-05-29 16:51:04,537] INFO 45856[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:193) - JDBC batch updates for versioned data: disabled
[2018-05-29 16:51:04,537] INFO 45856[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:198) - Scrollable result sets: enabled
[2018-05-29 16:51:04,537]DEBUG 45856[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:202) - Wrap result sets: disabled
[2018-05-29 16:51:04,538] INFO 45857[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:206) - JDBC3 getGeneratedKeys(): enabled
[2018-05-29 16:51:04,538] INFO 45857[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:214) - Connection release mode: auto
[2018-05-29 16:51:04,538] INFO 45857[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:238) - Maximum outer join fetch depth: 2
[2018-05-29 16:51:04,538] INFO 45857[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:241) - Default batch fetch size: 1
[2018-05-29 16:51:04,539] INFO 45858[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:245) - Generate SQL with comments: disabled
[2018-05-29 16:51:04,539] INFO 45858[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:249) - Order SQL updates by primary key: disabled
[2018-05-29 16:51:04,539] INFO 45858[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:253) - Order SQL inserts for batching: disabled
[2018-05-29 16:51:04,539] INFO 45858[main] - org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:431) - Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
[2018-05-29 16:51:04,539] INFO 45858[main] - org.hibernate.hql.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:47) - Using ASTQueryTranslatorFactory
[2018-05-29 16:51:04,540] INFO 45859[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:261) - Query language substitutions: {}
[2018-05-29 16:51:04,540] INFO 45859[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) - JPA-QL strict compliance: disabled
[2018-05-29 16:51:04,540] INFO 45859[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:271) - Second-level cache: enabled
[2018-05-29 16:51:04,541] INFO 45860[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:275) - Query cache: disabled
[2018-05-29 16:51:04,541] INFO 45860[main] - org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:406) - Cache region factory : org.hibernate.cache.impl.NoCachingRegionFactory
[2018-05-29 16:51:04,541] INFO 45860[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:285) - Optimize cache for minimal puts: disabled
[2018-05-29 16:51:04,541] INFO 45860[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:294) - Structured second-level cache entries: disabled
[2018-05-29 16:51:04,542] INFO 45861[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:323) - Statistics: disabled
[2018-05-29 16:51:04,542] INFO 45861[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:327) - Deleted entity synthetic identifier rollback: disabled
[2018-05-29 16:51:04,542] INFO 45861[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:343) - Default entity-mode: pojo
[2018-05-29 16:51:04,542] INFO 45861[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:347) - Named query checking : enabled
[2018-05-29 16:51:04,543] INFO 45862[main] - org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:351) - Check Nullability in Core (should be disabled when Bean Validation is on): disabled
[2018-05-29 16:51:04,548] INFO 45867[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:202) - building session factory
[2018-05-29 16:51:04,551]DEBUG 45870[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:206) - Statistics initialized [enabled=false]}
[2018-05-29 16:51:04,552]DEBUG 45871[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:04,552]DEBUG 45871[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:04,552]DEBUG 45871[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@51966f6c
[2018-05-29 16:51:04,553]DEBUG 45872[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5ff4f9bf
[2018-05-29 16:51:04,553]DEBUG 45872[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration true_false -> org.hibernate.type.TrueFalseType@50a85f01
[2018-05-29 16:51:04,553]DEBUG 45872[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration yes_no -> org.hibernate.type.YesNoType@57931be2
[2018-05-29 16:51:04,553]DEBUG 45872[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:04,553]DEBUG 45872[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:04,557]DEBUG 45876[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@332933cb
[2018-05-29 16:51:04,557]DEBUG 45876[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration character -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:04,557]DEBUG 45876[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:04,557]DEBUG 45876[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4139feec
[2018-05-29 16:51:04,557]DEBUG 45876[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:04,558]DEBUG 45877[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:04,558]DEBUG 45877[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3f3a1398
[2018-05-29 16:51:04,558]DEBUG 45877[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration integer -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:04,558]DEBUG 45877[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration int -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:04,558]DEBUG 45877[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65b5ba4c
[2018-05-29 16:51:04,559]DEBUG 45878[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:04,559]DEBUG 45878[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:04,559]DEBUG 45878[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5c74b704
[2018-05-29 16:51:04,559]DEBUG 45878[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:04,560]DEBUG 45879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:04,560]DEBUG 45879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@50f36fcb
[2018-05-29 16:51:04,560]DEBUG 45879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:04,560]DEBUG 45879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:04,560]DEBUG 45879[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@48bdd8f7
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@774140b3
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@774140b3
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2db493c7
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2db493c7
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration string -> org.hibernate.type.StringType@76f294c5
[2018-05-29 16:51:04,561]DEBUG 45880[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.String -> org.hibernate.type.StringType@76f294c5
[2018-05-29 16:51:04,562]DEBUG 45881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration url -> org.hibernate.type.UrlType@693e6031
[2018-05-29 16:51:04,562]DEBUG 45881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.net.URL -> org.hibernate.type.UrlType@693e6031
[2018-05-29 16:51:04,562]DEBUG 45881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration date -> org.hibernate.type.DateType@2083f3ec
[2018-05-29 16:51:04,562]DEBUG 45881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2083f3ec
[2018-05-29 16:51:04,562]DEBUG 45881[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration time -> org.hibernate.type.TimeType@70aa628f
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70aa628f
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timestamp -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6eb54678
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@38e53797
[2018-05-29 16:51:04,563]DEBUG 45882[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5f6434a8
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d867496
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration locale -> org.hibernate.type.LocaleType@39e7e257
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@39e7e257
[2018-05-29 16:51:04,564]DEBUG 45883[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration currency -> org.hibernate.type.CurrencyType@cbf5e35
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@cbf5e35
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5bd7a97b
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5bd7a97b
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration class -> org.hibernate.type.ClassType@31237b70
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@31237b70
[2018-05-29 16:51:04,565]DEBUG 45884[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2286fd2f
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2286fd2f
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6e12f6d
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6c970086
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration binary -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration byte[] -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:04,566]DEBUG 45885[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [B -> org.hibernate.type.BinaryType@1d9cfc59
[2018-05-29 16:51:04,567]DEBUG 45886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:04,567]DEBUG 45886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:04,567]DEBUG 45886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1e059ae6
[2018-05-29 16:51:04,567]DEBUG 45886[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration image -> org.hibernate.type.ImageType@3e873630
[2018-05-29 16:51:04,570]DEBUG 45889[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:04,570]DEBUG 45889[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration char[] -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:04,570]DEBUG 45889[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [C -> org.hibernate.type.CharArrayType@6eadc941
[2018-05-29 16:51:04,570]DEBUG 45889[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ee9f7c1
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration text -> org.hibernate.type.TextType@7ac38fd3
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:04,571]DEBUG 45890[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3fa6aa24
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@36583eaf
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2aaf39e8
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@5bb4930a
[2018-05-29 16:51:04,572]DEBUG 45891[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@540adf14
[2018-05-29 16:51:04,573]DEBUG 45892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration serializable -> org.hibernate.type.SerializableType@3b889277
[2018-05-29 16:51:04,573]DEBUG 45892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration object -> org.hibernate.type.ObjectType@1b77eafe
[2018-05-29 16:51:04,573]DEBUG 45892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1b77eafe
[2018-05-29 16:51:04,573]DEBUG 45892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32885115
[2018-05-29 16:51:04,573]DEBUG 45892[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12e6b414
[2018-05-29 16:51:04,574]DEBUG 45893[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5b3087bf
[2018-05-29 16:51:04,574]DEBUG 45893[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4d19c0e7
[2018-05-29 16:51:04,574]DEBUG 45893[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@26313223
[2018-05-29 16:51:04,574]DEBUG 45893[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@37f4330d
[2018-05-29 16:51:04,575]DEBUG 45894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4af2da8
[2018-05-29 16:51:04,575]DEBUG 45894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@444fc7e5
[2018-05-29 16:51:04,575]DEBUG 45894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5c10826c
[2018-05-29 16:51:04,575] INFO 45894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3fa6aa24
[2018-05-29 16:51:04,575]DEBUG 45894[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration blob -> org.hibernate.type.BlobType@2e85f2f0
[2018-05-29 16:51:04,576] INFO 45895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [blob] overrides previous : org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:04,576]DEBUG 45895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e85f2f0
[2018-05-29 16:51:04,576] INFO 45895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@776f844a
[2018-05-29 16:51:04,576]DEBUG 45895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration clob -> org.hibernate.type.ClobType@3b7b65f8
[2018-05-29 16:51:04,576] INFO 45895[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [clob] overrides previous : org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:04,577]DEBUG 45896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b7b65f8
[2018-05-29 16:51:04,577] INFO 45896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@5a5e3da
[2018-05-29 16:51:04,577]DEBUG 45896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6555f670
[2018-05-29 16:51:04,577] INFO 45896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@540adf14
[2018-05-29 16:51:04,577]DEBUG 45896[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@396828e9
[2018-05-29 16:51:04,578] INFO 45897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@5bb4930a
[2018-05-29 16:51:04,578]DEBUG 45897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3fe2afac
[2018-05-29 16:51:04,578] INFO 45897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@36583eaf
[2018-05-29 16:51:04,578]DEBUG 45897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:147) - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22639b4a
[2018-05-29 16:51:04,578] INFO 45897[main] - org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:150) - Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@2aaf39e8
[2018-05-29 16:51:04,579]DEBUG 45898[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:228) - Session factory constructed with filter configurations : {}
[2018-05-29 16:51:04,579]DEBUG 45898[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:232) - instantiating session factory with properties: {java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.password=123pass, sun.boot.library.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/amd64, java.vm.version=24.181-b00, hibernate.connection.username=user_db, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, java.vm.name=OpenJDK 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/root/OMS, java.runtime.version=1.7.0_181-mockbuild_2018_05_22_00_09-b00, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, basedir=/root/OMS, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/root/OMS/target/surefire/surefirebooter2777316200759370921.jar, hibernate.check_nullability=false, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/root/OMS/target/test-classes:/root/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=3.10.0-862.el7.x86_64, user.home=/root, user.timezone=America/New_York, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=root, java.class.path=/root/OMS/target/test-classes:/root/OMS/target/generated-classes/emma/classes:/root/.m2/repository/org/springframework/spring-context/3.0.5.RELEASE/spring-context-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-aop/3.0.5.RELEASE/spring-aop-3.0.5.RELEASE.jar:/root/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/root/.m2/repository/org/springframework/spring-beans/3.0.5.RELEASE/spring-beans-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-core/3.0.5.RELEASE/spring-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-expression/3.0.5.RELEASE/spring-expression-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-asm/3.0.5.RELEASE/spring-asm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-webmvc/3.0.5.RELEASE/spring-webmvc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-context-support/3.0.5.RELEASE/spring-context-support-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-web/3.0.5.RELEASE/spring-web-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/roo/org.springframework.roo.annotations/1.0.2.RELEASE/org.springframework.roo.annotations-1.0.2.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjrt/1.6.9/aspectjrt-1.6.9.jar:/root/.m2/repository/org/slf4j/slf4j-api/1.5.10/slf4j-api-1.5.10.jar:/root/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.10/jcl-over-slf4j-1.5.10.jar:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.5.10/slf4j-log4j12-1.5.10.jar:/root/.m2/repository/log4j/log4j/1.2.15/log4j-1.2.15.jar:/root/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/root/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/root/.m2/repository/junit/junit/4.7/junit-4.7.jar:/root/.m2/repository/org/hibernate/hibernate-core/3.6.5.Final/hibernate-core-3.6.5.Final.jar:/root/.m2/repository/antlr/antlr/2.7.6/antlr-2.7.6.jar:/root/.m2/repository/commons-collections/commons-collections/3.1/commons-collections-3.1.jar:/root/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/root/.m2/repository/org/hibernate/hibernate-commons-annotations/3.2.0.Final/hibernate-commons-annotations-3.2.0.Final.jar:/root/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.0-api/1.0.0.Final/hibernate-jpa-2.0-api-1.0.0.Final.jar:/root/.m2/repository/javax/transaction/jta/1.1/jta-1.1.jar:/root/.m2/repository/net/sourceforge/jtds/jtds/1.2.4/jtds-1.2.4.jar:/root/.m2/repository/javassist/javassist/3.12.1.GA/javassist-3.12.1.GA.jar:/root/.m2/repository/org/springframework/spring-orm/3.0.5.RELEASE/spring-orm-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-jdbc/3.0.5.RELEASE/spring-jdbc-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/spring-tx/3.0.5.RELEASE/spring-tx-3.0.5.RELEASE.jar:/root/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/root/.m2/repository/org/springframework/spring-test/3.0.5.RELEASE/spring-test-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-core/3.0.5.RELEASE/spring-security-core-3.0.5.RELEASE.jar:/root/.m2/repository/org/aspectj/aspectjweaver/1.6.8/aspectjweaver-1.6.8.jar:/root/.m2/repository/org/springframework/security/spring-security-config/3.0.5.RELEASE/spring-security-config-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-web/3.0.5.RELEASE/spring-security-web-3.0.5.RELEASE.jar:/root/.m2/repository/cglib/cglib/2.2.2/cglib-2.2.2.jar:/root/.m2/repository/asm/asm/3.3.1/asm-3.3.1.jar:/root/.m2/repository/mysql/mysql-connector-java/5.1.17/mysql-connector-java-5.1.17.jar:/root/.m2/repository/org/hibernate/hibernate-validator/4.2.0.Final/hibernate-validator-4.2.0.Final.jar:/root/.m2/repository/javax/validation/validation-api/1.0.0.GA/validation-api-1.0.0.GA.jar:/root/.m2/repository/org/apache/tiles/tiles-jsp/2.2.2/tiles-jsp-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-servlet/2.2.2/tiles-servlet-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-core/2.2.2/tiles-core-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-template/2.2.2/tiles-template-2.2.2.jar:/root/.m2/repository/org/apache/tiles/tiles-api/2.2.2/tiles-api-2.2.2.jar:/root/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.8.3/jackson-mapper-asl-1.8.3.jar:/root/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.8.3/jackson-core-asl-1.8.3.jar:/root/.m2/repository/net/sf/jasperreports/jasperreports/4.0.1/jasperreports-4.0.1.jar:/root/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/root/.m2/repository/commons-digester/commons-digester/1.7/commons-digester-1.7.jar:/root/.m2/repository/commons-logging/commons-logging/1.0.2/commons-logging-1.0.2.jar:/root/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/root/.m2/repository/bouncycastle/bcmail-jdk14/138/bcmail-jdk14-138.jar:/root/.m2/repository/bouncycastle/bcprov-jdk14/138/bcprov-jdk14-138.jar:/root/.m2/repository/org/bouncycastle/bctsp-jdk14/1.38/bctsp-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcprov-jdk14/1.38/bcprov-jdk14-1.38.jar:/root/.m2/repository/org/bouncycastle/bcmail-jdk14/1.38/bcmail-jdk14-1.38.jar:/root/.m2/repository/jfree/jcommon/1.0.15/jcommon-1.0.15.jar:/root/.m2/repository/jfree/jfreechart/1.0.12/jfreechart-1.0.12.jar:/root/.m2/repository/xml-apis/xml-apis/1.3.02/xml-apis-1.3.02.jar:/root/.m2/repository/eclipse/jdtcore/3.1.0/jdtcore-3.1.0.jar:/root/.m2/repository/org/springframework/security/spring-security-taglibs/3.0.5.RELEASE/spring-security-taglibs-3.0.5.RELEASE.jar:/root/.m2/repository/org/springframework/security/spring-security-acl/3.0.5.RELEASE/spring-security-acl-3.0.5.RELEASE.jar:/root/.m2/repository/emma/emma/2.0.5312/emma-2.0.5312.jar:, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre, sun.java.command=/root/OMS/target/surefire/surefirebooter2777316200759370921.jar /root/OMS/target/surefire 2018-05-29T16-50-11_150-jvmRun1 surefire3401462582085145035tmp surefire_0695136141501379920tmp, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.connection.url=jdbc:mysql://192.168.0.109:3306/oms, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.7.0_181, java.ext.dirs=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.181-2.6.14.8.el7_5.x86_64/jre/classes, java.vendor=Oracle Corporation, localRepository=/root/.m2/repository, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create-drop, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.isalist=}
[2018-05-29 16:51:04,579]DEBUG 45898[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,580]DEBUG 45899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,580]DEBUG 45899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,580]DEBUG 45899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,580]DEBUG 45899[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,581]DEBUG 45900[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,581]DEBUG 45900[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,583]DEBUG 45902[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,583]DEBUG 45902[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,583]DEBUG 45902[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:04,673]DEBUG 45992[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:04,674]DEBUG 45993[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Roles where ID =?
[2018-05-29 16:51:04,674]DEBUG 45993[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select role_.ID, role_.RoleName as RoleName20_ from Roles role_ where role_.ID=?
[2018-05-29 16:51:04,675]DEBUG 45994[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Roles (RoleName, ID) values (?, ?)
[2018-05-29 16:51:04,676]DEBUG 45995[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Roles set RoleName=? where ID=?
[2018-05-29 16:51:04,676]DEBUG 45995[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Roles where ID=?
[2018-05-29 16:51:04,677]DEBUG 45996[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Roles (RoleName) values (?)
[2018-05-29 16:51:04,684]DEBUG 46003[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CreditCardType
[2018-05-29 16:51:04,685]DEBUG 46004[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CardType where ID =?
[2018-05-29 16:51:04,686]DEBUG 46005[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select creditcard_.ID, creditcard_.CardType as CardType29_, creditcard_.CardNumber as CardNumber29_, creditcard_.CardCvv2 as CardCvv4_29_, creditcard_.Expiration_Date as Expiration5_29_, creditcard_.IssueDate as IssueDate29_, creditcard_.IssueNumber as IssueNum7_29_ from CardType creditcard_ where creditcard_.ID=?
[2018-05-29 16:51:04,687]DEBUG 46006[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber, ID) values (?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:04,688]DEBUG 46007[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CardType set CardType=?, CardNumber=?, CardCvv2=?, Expiration_Date=?, IssueDate=?, IssueNumber=? where ID=?
[2018-05-29 16:51:04,688]DEBUG 46007[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CardType where ID=?
[2018-05-29 16:51:04,689]DEBUG 46008[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CardType (CardType, CardNumber, CardCvv2, Expiration_Date, IssueDate, IssueNumber) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:04,696]DEBUG 46015[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderItem
[2018-05-29 16:51:04,697]DEBUG 46016[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderItems where ID =?
[2018-05-29 16:51:04,697]DEBUG 46016[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderitem_.ID, orderitem_.Cost as Cost28_, orderitem_.DimensionRef as Dimensio5_28_, orderitem_.ItemPrice as ItemPrice28_, orderitem_.OrderRef as OrderRef28_, orderitem_.ProductRef as ProductRef28_, orderitem_.Quantity as Quantity28_ from OrderItems orderitem_ where orderitem_.ID=?
[2018-05-29 16:51:04,698]DEBUG 46017[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity, ID) values (?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:04,699]DEBUG 46018[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderItems set Cost=?, DimensionRef=?, ItemPrice=?, OrderRef=?, ProductRef=?, Quantity=? where ID=?
[2018-05-29 16:51:04,699]DEBUG 46018[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderItems where ID=?
[2018-05-29 16:51:04,701]DEBUG 46020[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:04,706]DEBUG 46025[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:04,706]DEBUG 46025[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Dimensions where ID =?
[2018-05-29 16:51:04,706]DEBUG 46025[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select dimension_.ID, dimension_.DimensionName as Dimensio2_27_, dimension_.NumberOfProducts as NumberOf3_27_ from Dimensions dimension_ where dimension_.ID=?
[2018-05-29 16:51:04,707]DEBUG 46026[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Dimensions (DimensionName, NumberOfProducts, ID) values (?, ?, ?)
[2018-05-29 16:51:04,707]DEBUG 46026[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Dimensions set DimensionName=?, NumberOfProducts=? where ID=?
[2018-05-29 16:51:04,707]DEBUG 46026[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Dimensions where ID=?
[2018-05-29 16:51:04,708]DEBUG 46027[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:04,721]DEBUG 46040[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:04,721]DEBUG 46040[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Orders where ID =?
[2018-05-29 16:51:04,722]DEBUG 46041[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select order_.ID, order_.Assigne as Assigne25_, order_.Customer as Customer25_, order_.DeliveryDate as Delivery2_25_, order_.IsGift as IsGift25_, order_.MaxDiscount as MaxDisco4_25_, order_.OrderDate as OrderDate25_, order_.OrderName as OrderName25_, order_.OrderNumber as OrderNum7_25_, order_.OrderStatusRef as OrderSt12_25_, order_.PreferableDeliveryDate as Preferab8_25_, order_.TotalPrice as TotalPrice25_ from Orders order_ where order_.ID=?
[2018-05-29 16:51:04,722]DEBUG 46041[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:04,723]DEBUG 46042[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Orders set Assigne=?, Customer=?, DeliveryDate=?, IsGift=?, MaxDiscount=?, OrderDate=?, OrderName=?, OrderNumber=?, OrderStatusRef=?, PreferableDeliveryDate=?, TotalPrice=? where ID=?
[2018-05-29 16:51:04,723]DEBUG 46042[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Orders where ID=?
[2018-05-29 16:51:04,723]DEBUG 46042[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:05,014]DEBUG 46333[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:05,015]DEBUG 46334[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from OrderStatuses where ID =?
[2018-05-29 16:51:05,016]DEBUG 46335[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select orderstatu_.ID, orderstatu_.OrederStatusName as OrederSt2_24_ from OrderStatuses orderstatu_ where orderstatu_.ID=?
[2018-05-29 16:51:05,017]DEBUG 46336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into OrderStatuses (OrederStatusName, ID) values (?, ?)
[2018-05-29 16:51:05,017]DEBUG 46336[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update OrderStatuses set OrederStatusName=? where ID=?
[2018-05-29 16:51:05,018]DEBUG 46337[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from OrderStatuses where ID=?
[2018-05-29 16:51:05,019]DEBUG 46338[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:05,023]DEBUG 46342[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:05,024]DEBUG 46343[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Regions where ID =?
[2018-05-29 16:51:05,093]DEBUG 46412[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select region_.ID, region_.RegionName as RegionName21_ from Regions region_ where region_.ID=?
[2018-05-29 16:51:05,093]DEBUG 46412[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Regions (RegionName, ID) values (?, ?)
[2018-05-29 16:51:05,094]DEBUG 46413[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Regions set RegionName=? where ID=?
[2018-05-29 16:51:05,094]DEBUG 46413[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Regions where ID=?
[2018-05-29 16:51:05,094]DEBUG 46413[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Regions (RegionName) values (?)
[2018-05-29 16:51:05,102]DEBUG 46421[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:05,103]DEBUG 46422[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Users where ID =?
[2018-05-29 16:51:05,103]DEBUG 46422[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select user_.ID, user_.IsUserActive as IsUserAc2_23_, user_.Balance as Balance23_, user_.CustomerTypeRef as Customer9_23_, user_.Email as Email23_, user_.FirstName as FirstName23_, user_.LastName as LastName23_, user_.Login as Login23_, user_.Password as Password23_, user_.RegionRef as RegionRef23_, user_.RoleRef as RoleRef23_ from Users user_ where user_.ID=?
[2018-05-29 16:51:05,103]DEBUG 46422[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef, ID) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:05,104]DEBUG 46423[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Users set IsUserActive=?, Balance=?, CustomerTypeRef=?, Email=?, FirstName=?, LastName=?, Login=?, Password=?, RegionRef=?, RoleRef=? where ID=?
[2018-05-29 16:51:05,104]DEBUG 46423[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Users where ID=?
[2018-05-29 16:51:05,108]DEBUG 46427[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Users (IsUserActive, Balance, CustomerTypeRef, Email, FirstName, LastName, Login, Password, RegionRef, RoleRef) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:05,111]DEBUG 46430[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:05,112]DEBUG 46431[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from Products where ID =?
[2018-05-29 16:51:05,113]DEBUG 46432[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select product_.ID, product_.IsProductActive as IsProduc2_26_, product_.ProductDescription as ProductD3_26_, product_.ProductName as ProductN4_26_, product_.ProductPrice as ProductP5_26_ from Products product_ where product_.ID=?
[2018-05-29 16:51:05,114]DEBUG 46433[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice, ID) values (?, ?, ?, ?, ?)
[2018-05-29 16:51:05,114]DEBUG 46433[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update Products set IsProductActive=?, ProductDescription=?, ProductName=?, ProductPrice=? where ID=?
[2018-05-29 16:51:05,114]DEBUG 46433[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from Products where ID=?
[2018-05-29 16:51:05,115]DEBUG 46434[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:05,126]DEBUG 46445[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2952) - Static SQL for entity: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:05,127]DEBUG 46446[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2957) -  Version select: select ID from CustomerTypes where ID =?
[2018-05-29 16:51:05,127]DEBUG 46446[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2960) -  Snapshot select: select customerty_.ID, customerty_.Discount as Discount22_, customerty_.MaxRange as MaxRange22_, customerty_.MinRange as MinRange22_, customerty_.TypeName as TypeName22_ from CustomerTypes customerty_ where customerty_.ID=?
[2018-05-29 16:51:05,128]DEBUG 46447[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2963) -  Insert 0: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName, ID) values (?, ?, ?, ?, ?)
[2018-05-29 16:51:05,128]DEBUG 46447[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2964) -  Update 0: update CustomerTypes set Discount=?, MaxRange=?, MinRange=?, TypeName=? where ID=?
[2018-05-29 16:51:05,128]DEBUG 46447[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2965) -  Delete 0: delete from CustomerTypes where ID=?
[2018-05-29 16:51:05,128]DEBUG 46447[main] - org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:2969) -  Identity insert: insert into CustomerTypes (Discount, MaxRange, MinRange, TypeName) values (?, ?, ?, ?)
[2018-05-29 16:51:05,221]DEBUG 46540[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [NONE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,223]DEBUG 46542[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,224]DEBUG 46543[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2018-05-29 16:51:05,226]DEBUG 46545[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [UPGRADE_NOWAIT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2018-05-29 16:51:05,227]DEBUG 46546[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [FORCE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2018-05-29 16:51:05,228]DEBUG 46547[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_READ]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? lock in share mode
[2018-05-29 16:51:05,229]DEBUG 46548[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_WRITE]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2018-05-29 16:51:05,230]DEBUG 46549[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=? for update
[2018-05-29 16:51:05,231]DEBUG 46550[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,232]DEBUG 46551[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,248]DEBUG 46567[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,250]DEBUG 46569[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Role: select role0_.ID as ID20_0_, role0_.RoleName as RoleName20_0_ from Roles role0_ where role0_.ID=?
[2018-05-29 16:51:05,254]DEBUG 46573[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [NONE]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2018-05-29 16:51:05,258]DEBUG 46577[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [READ]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2018-05-29 16:51:05,260]DEBUG 46579[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2018-05-29 16:51:05,261]DEBUG 46580[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [UPGRADE_NOWAIT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2018-05-29 16:51:05,262]DEBUG 46581[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [FORCE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2018-05-29 16:51:05,263]DEBUG 46582[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_READ]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? lock in share mode
[2018-05-29 16:51:05,265]DEBUG 46584[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_WRITE]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2018-05-29 16:51:05,274]DEBUG 46593[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [PESSIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=? for update
[2018-05-29 16:51:05,277]DEBUG 46596[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2018-05-29 16:51:05,281]DEBUG 46600[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderItem [OPTIMISTIC_FORCE_INCREMENT]: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2018-05-29 16:51:05,285]DEBUG 46604[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_6_, orderitem0_.Cost as Cost28_6_, orderitem0_.DimensionRef as Dimensio5_28_6_, orderitem0_.ItemPrice as ItemPrice28_6_, orderitem0_.OrderRef as OrderRef28_6_, orderitem0_.ProductRef as ProductRef28_6_, orderitem0_.Quantity as Quantity28_6_, dimension1_.ID as ID27_0_, dimension1_.DimensionName as Dimensio2_27_0_, dimension1_.NumberOfProducts as NumberOf3_27_0_, order2_.ID as ID25_1_, order2_.Assigne as Assigne25_1_, order2_.Customer as Customer25_1_, order2_.DeliveryDate as Delivery2_25_1_, order2_.IsGift as IsGift25_1_, order2_.MaxDiscount as MaxDisco4_25_1_, order2_.OrderDate as OrderDate25_1_, order2_.OrderName as OrderName25_1_, order2_.OrderNumber as OrderNum7_25_1_, order2_.OrderStatusRef as OrderSt12_25_1_, order2_.PreferableDeliveryDate as Preferab8_25_1_, order2_.TotalPrice as TotalPrice25_1_, user3_.ID as ID23_2_, user3_.IsUserActive as IsUserAc2_23_2_, user3_.Balance as Balance23_2_, user3_.CustomerTypeRef as Customer9_23_2_, user3_.Email as Email23_2_, user3_.FirstName as FirstName23_2_, user3_.LastName as LastName23_2_, user3_.Login as Login23_2_, user3_.Password as Password23_2_, user3_.RegionRef as RegionRef23_2_, user3_.RoleRef as RoleRef23_2_, user4_.ID as ID23_3_, user4_.IsUserActive as IsUserAc2_23_3_, user4_.Balance as Balance23_3_, user4_.CustomerTypeRef as Customer9_23_3_, user4_.Email as Email23_3_, user4_.FirstName as FirstName23_3_, user4_.LastName as LastName23_3_, user4_.Login as Login23_3_, user4_.Password as Password23_3_, user4_.RegionRef as RegionRef23_3_, user4_.RoleRef as RoleRef23_3_, orderstatu5_.ID as ID24_4_, orderstatu5_.OrederStatusName as OrederSt2_24_4_, product6_.ID as ID26_5_, product6_.IsProductActive as IsProduc2_26_5_, product6_.ProductDescription as ProductD3_26_5_, product6_.ProductName as ProductN4_26_5_, product6_.ProductPrice as ProductP5_26_5_ from OrderItems orderitem0_ left outer join Dimensions dimension1_ on orderitem0_.DimensionRef=dimension1_.ID left outer join Orders order2_ on orderitem0_.OrderRef=order2_.ID left outer join Users user3_ on order2_.Assigne=user3_.ID left outer join Users user4_ on order2_.Customer=user4_.ID left outer join OrderStatuses orderstatu5_ on order2_.OrderStatusRef=orderstatu5_.ID left outer join Products product6_ on orderitem0_.ProductRef=product6_.ID where orderitem0_.ID=?
[2018-05-29 16:51:05,286]DEBUG 46605[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderItem: select orderitem0_.ID as ID28_0_, orderitem0_.Cost as Cost28_0_, orderitem0_.DimensionRef as Dimensio5_28_0_, orderitem0_.ItemPrice as ItemPrice28_0_, orderitem0_.OrderRef as OrderRef28_0_, orderitem0_.ProductRef as ProductRef28_0_, orderitem0_.Quantity as Quantity28_0_ from OrderItems orderitem0_ where orderitem0_.ID=?
[2018-05-29 16:51:05,288]DEBUG 46607[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [NONE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,289]DEBUG 46608[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,290]DEBUG 46609[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2018-05-29 16:51:05,291]DEBUG 46610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [UPGRADE_NOWAIT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2018-05-29 16:51:05,291]DEBUG 46610[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [FORCE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2018-05-29 16:51:05,292]DEBUG 46611[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_READ]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? lock in share mode
[2018-05-29 16:51:05,293]DEBUG 46612[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_WRITE]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2018-05-29 16:51:05,293]DEBUG 46612[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [PESSIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=? for update
[2018-05-29 16:51:05,294]DEBUG 46613[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,294]DEBUG 46613[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CreditCardType [OPTIMISTIC_FORCE_INCREMENT]: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,295]DEBUG 46614[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,295]DEBUG 46614[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CreditCardType: select creditcard0_.ID as ID29_0_, creditcard0_.CardType as CardType29_0_, creditcard0_.CardNumber as CardNumber29_0_, creditcard0_.CardCvv2 as CardCvv4_29_0_, creditcard0_.Expiration_Date as Expiration5_29_0_, creditcard0_.IssueDate as IssueDate29_0_, creditcard0_.IssueNumber as IssueNum7_29_0_ from CardType creditcard0_ where creditcard0_.ID=?
[2018-05-29 16:51:05,297]DEBUG 46616[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [NONE]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2018-05-29 16:51:05,298]DEBUG 46617[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [READ]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2018-05-29 16:51:05,299]DEBUG 46618[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2018-05-29 16:51:05,299]DEBUG 46618[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [UPGRADE_NOWAIT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2018-05-29 16:51:05,300]DEBUG 46619[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [FORCE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2018-05-29 16:51:05,301]DEBUG 46620[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_READ]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? lock in share mode
[2018-05-29 16:51:05,301]DEBUG 46620[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_WRITE]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2018-05-29 16:51:05,302]DEBUG 46621[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [PESSIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=? for update
[2018-05-29 16:51:05,303]DEBUG 46622[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2018-05-29 16:51:05,305]DEBUG 46624[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Order [OPTIMISTIC_FORCE_INCREMENT]: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2018-05-29 16:51:05,306]DEBUG 46625[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_6_, order0_.Assigne as Assigne25_6_, order0_.Customer as Customer25_6_, order0_.DeliveryDate as Delivery2_25_6_, order0_.IsGift as IsGift25_6_, order0_.MaxDiscount as MaxDisco4_25_6_, order0_.OrderDate as OrderDate25_6_, order0_.OrderName as OrderName25_6_, order0_.OrderNumber as OrderNum7_25_6_, order0_.OrderStatusRef as OrderSt12_25_6_, order0_.PreferableDeliveryDate as Preferab8_25_6_, order0_.TotalPrice as TotalPrice25_6_, user1_.ID as ID23_0_, user1_.IsUserActive as IsUserAc2_23_0_, user1_.Balance as Balance23_0_, user1_.CustomerTypeRef as Customer9_23_0_, user1_.Email as Email23_0_, user1_.FirstName as FirstName23_0_, user1_.LastName as LastName23_0_, user1_.Login as Login23_0_, user1_.Password as Password23_0_, user1_.RegionRef as RegionRef23_0_, user1_.RoleRef as RoleRef23_0_, customerty2_.ID as ID22_1_, customerty2_.Discount as Discount22_1_, customerty2_.MaxRange as MaxRange22_1_, customerty2_.MinRange as MinRange22_1_, customerty2_.TypeName as TypeName22_1_, region3_.ID as ID21_2_, region3_.RegionName as RegionName21_2_, role4_.ID as ID20_3_, role4_.RoleName as RoleName20_3_, user5_.ID as ID23_4_, user5_.IsUserActive as IsUserAc2_23_4_, user5_.Balance as Balance23_4_, user5_.CustomerTypeRef as Customer9_23_4_, user5_.Email as Email23_4_, user5_.FirstName as FirstName23_4_, user5_.LastName as LastName23_4_, user5_.Login as Login23_4_, user5_.Password as Password23_4_, user5_.RegionRef as RegionRef23_4_, user5_.RoleRef as RoleRef23_4_, orderstatu6_.ID as ID24_5_, orderstatu6_.OrederStatusName as OrederSt2_24_5_ from Orders order0_ left outer join Users user1_ on order0_.Assigne=user1_.ID left outer join CustomerTypes customerty2_ on user1_.CustomerTypeRef=customerty2_.ID left outer join Regions region3_ on user1_.RegionRef=region3_.ID left outer join Roles role4_ on user1_.RoleRef=role4_.ID left outer join Users user5_ on order0_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order0_.OrderStatusRef=orderstatu6_.ID where order0_.ID=?
[2018-05-29 16:51:05,307]DEBUG 46626[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Order: select order0_.ID as ID25_0_, order0_.Assigne as Assigne25_0_, order0_.Customer as Customer25_0_, order0_.DeliveryDate as Delivery2_25_0_, order0_.IsGift as IsGift25_0_, order0_.MaxDiscount as MaxDisco4_25_0_, order0_.OrderDate as OrderDate25_0_, order0_.OrderName as OrderName25_0_, order0_.OrderNumber as OrderNum7_25_0_, order0_.OrderStatusRef as OrderSt12_25_0_, order0_.PreferableDeliveryDate as Preferab8_25_0_, order0_.TotalPrice as TotalPrice25_0_ from Orders order0_ where order0_.ID=?
[2018-05-29 16:51:05,308]DEBUG 46627[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [NONE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,309]DEBUG 46628[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,309]DEBUG 46628[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2018-05-29 16:51:05,310]DEBUG 46629[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [UPGRADE_NOWAIT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2018-05-29 16:51:05,310]DEBUG 46629[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [FORCE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2018-05-29 16:51:05,310]DEBUG 46629[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_READ]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? lock in share mode
[2018-05-29 16:51:05,311]DEBUG 46630[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_WRITE]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2018-05-29 16:51:05,311]DEBUG 46630[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [PESSIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=? for update
[2018-05-29 16:51:05,312]DEBUG 46631[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,316]DEBUG 46635[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Dimension [OPTIMISTIC_FORCE_INCREMENT]: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,317]DEBUG 46636[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,318]DEBUG 46637[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Dimension: select dimension0_.ID as ID27_0_, dimension0_.DimensionName as Dimensio2_27_0_, dimension0_.NumberOfProducts as NumberOf3_27_0_ from Dimensions dimension0_ where dimension0_.ID=?
[2018-05-29 16:51:05,318]DEBUG 46637[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [NONE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,319]DEBUG 46638[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,320]DEBUG 46639[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2018-05-29 16:51:05,320]DEBUG 46639[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [UPGRADE_NOWAIT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2018-05-29 16:51:05,321]DEBUG 46640[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [FORCE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2018-05-29 16:51:05,321]DEBUG 46640[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_READ]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? lock in share mode
[2018-05-29 16:51:05,322]DEBUG 46641[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_WRITE]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2018-05-29 16:51:05,322]DEBUG 46641[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [PESSIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=? for update
[2018-05-29 16:51:05,322]DEBUG 46641[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,323]DEBUG 46642[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.OrderStatus [OPTIMISTIC_FORCE_INCREMENT]: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,323]DEBUG 46642[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,323]DEBUG 46642[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.OrderStatus: select orderstatu0_.ID as ID24_0_, orderstatu0_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses orderstatu0_ where orderstatu0_.ID=?
[2018-05-29 16:51:05,324]DEBUG 46643[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [NONE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,324]DEBUG 46643[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,325]DEBUG 46644[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2018-05-29 16:51:05,325]DEBUG 46644[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [UPGRADE_NOWAIT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2018-05-29 16:51:05,325]DEBUG 46644[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [FORCE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2018-05-29 16:51:05,326]DEBUG 46645[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_READ]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? lock in share mode
[2018-05-29 16:51:05,326]DEBUG 46645[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_WRITE]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2018-05-29 16:51:05,326]DEBUG 46645[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [PESSIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=? for update
[2018-05-29 16:51:05,327]DEBUG 46646[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,327]DEBUG 46646[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Region [OPTIMISTIC_FORCE_INCREMENT]: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,328]DEBUG 46647[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,328]DEBUG 46647[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Region: select region0_.ID as ID21_0_, region0_.RegionName as RegionName21_0_ from Regions region0_ where region0_.ID=?
[2018-05-29 16:51:05,329]DEBUG 46648[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [NONE]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2018-05-29 16:51:05,329]DEBUG 46648[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [READ]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2018-05-29 16:51:05,330]DEBUG 46649[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2018-05-29 16:51:05,330]DEBUG 46649[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [UPGRADE_NOWAIT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2018-05-29 16:51:05,330]DEBUG 46649[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [FORCE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2018-05-29 16:51:05,331]DEBUG 46650[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_READ]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? lock in share mode
[2018-05-29 16:51:05,332]DEBUG 46651[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_WRITE]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2018-05-29 16:51:05,332]DEBUG 46651[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=? for update
[2018-05-29 16:51:05,333]DEBUG 46652[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2018-05-29 16:51:05,333]DEBUG 46652[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2018-05-29 16:51:05,334]DEBUG 46653[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_3_, user0_.IsUserActive as IsUserAc2_23_3_, user0_.Balance as Balance23_3_, user0_.CustomerTypeRef as Customer9_23_3_, user0_.Email as Email23_3_, user0_.FirstName as FirstName23_3_, user0_.LastName as LastName23_3_, user0_.Login as Login23_3_, user0_.Password as Password23_3_, user0_.RegionRef as RegionRef23_3_, user0_.RoleRef as RoleRef23_3_, customerty1_.ID as ID22_0_, customerty1_.Discount as Discount22_0_, customerty1_.MaxRange as MaxRange22_0_, customerty1_.MinRange as MinRange22_0_, customerty1_.TypeName as TypeName22_0_, region2_.ID as ID21_1_, region2_.RegionName as RegionName21_1_, role3_.ID as ID20_2_, role3_.RoleName as RoleName20_2_ from Users user0_ left outer join CustomerTypes customerty1_ on user0_.CustomerTypeRef=customerty1_.ID left outer join Regions region2_ on user0_.RegionRef=region2_.ID inner join Roles role3_ on user0_.RoleRef=role3_.ID where user0_.ID=?
[2018-05-29 16:51:05,335]DEBUG 46654[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.User: select user0_.ID as ID23_0_, user0_.IsUserActive as IsUserAc2_23_0_, user0_.Balance as Balance23_0_, user0_.CustomerTypeRef as Customer9_23_0_, user0_.Email as Email23_0_, user0_.FirstName as FirstName23_0_, user0_.LastName as LastName23_0_, user0_.Login as Login23_0_, user0_.Password as Password23_0_, user0_.RegionRef as RegionRef23_0_, user0_.RoleRef as RoleRef23_0_ from Users user0_ where user0_.ID=?
[2018-05-29 16:51:05,335]DEBUG 46654[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [NONE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,336]DEBUG 46655[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,336]DEBUG 46655[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2018-05-29 16:51:05,337]DEBUG 46656[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [UPGRADE_NOWAIT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2018-05-29 16:51:05,337]DEBUG 46656[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [FORCE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2018-05-29 16:51:05,337]DEBUG 46656[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_READ]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? lock in share mode
[2018-05-29 16:51:05,338]DEBUG 46657[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_WRITE]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2018-05-29 16:51:05,344]DEBUG 46663[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [PESSIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=? for update
[2018-05-29 16:51:05,344]DEBUG 46663[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,345]DEBUG 46664[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.CustomerType [OPTIMISTIC_FORCE_INCREMENT]: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,345]DEBUG 46664[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,346]DEBUG 46665[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.CustomerType: select customerty0_.ID as ID22_0_, customerty0_.Discount as Discount22_0_, customerty0_.MaxRange as MaxRange22_0_, customerty0_.MinRange as MinRange22_0_, customerty0_.TypeName as TypeName22_0_ from CustomerTypes customerty0_ where customerty0_.ID=?
[2018-05-29 16:51:05,346]DEBUG 46665[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [NONE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,346]DEBUG 46665[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,347]DEBUG 46666[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2018-05-29 16:51:05,347]DEBUG 46666[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [UPGRADE_NOWAIT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2018-05-29 16:51:05,347]DEBUG 46666[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [FORCE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2018-05-29 16:51:05,348]DEBUG 46667[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_READ]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? lock in share mode
[2018-05-29 16:51:05,348]DEBUG 46667[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_WRITE]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2018-05-29 16:51:05,348]DEBUG 46667[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [PESSIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=? for update
[2018-05-29 16:51:05,348]DEBUG 46667[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,349]DEBUG 46668[main] - org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) - Static select for entity com.softserveinc.edu.oms.domain.entities.Product [OPTIMISTIC_FORCE_INCREMENT]: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,349]DEBUG 46668[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_MERGE on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,350]DEBUG 46669[main] - org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) - Static select for action ACTION_REFRESH on entity com.softserveinc.edu.oms.domain.entities.Product: select product0_.ID as ID26_0_, product0_.IsProductActive as IsProduc2_26_0_, product0_.ProductDescription as ProductD3_26_0_, product0_.ProductName as ProductN4_26_0_, product0_.ProductPrice as ProductP5_26_0_ from Products product0_ where product0_.ID=?
[2018-05-29 16:51:05,351]DEBUG 46670[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:99) - registered: ed63ed26-31a2-4414-8f7b-39def2577f6e (unnamed)
[2018-05-29 16:51:05,352] INFO 46671[main] - org.hibernate.impl.SessionFactoryObjectFactory.addInstance(SessionFactoryObjectFactory.java:105) - Not binding factory to JNDI, no JNDI name configured
[2018-05-29 16:51:05,352]DEBUG 46671[main] - org.hibernate.impl.SessionFactoryImpl.<init>(SessionFactoryImpl.java:369) - instantiated session factory
[2018-05-29 16:51:05,352]DEBUG 46671[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:05,353]DEBUG 46672[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:05,353]DEBUG 46672[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:05,353]DEBUG 46672[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:05,353]DEBUG 46672[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:05,353]DEBUG 46672[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:05,354]DEBUG 46673[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:05,354]DEBUG 46673[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:05,354]DEBUG 46673[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:05,354]DEBUG 46673[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:05,355]DEBUG 46674[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:05,355]DEBUG 46674[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:05,355]DEBUG 46674[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:05,355]DEBUG 46674[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:05,356]DEBUG 46675[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:05,356]DEBUG 46675[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:05,356]DEBUG 46675[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:05,356]DEBUG 46675[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:05,357]DEBUG 46676[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:05,357]DEBUG 46676[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:05,357]DEBUG 46676[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:05,358]DEBUG 46677[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:05,373]DEBUG 46692[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,374]DEBUG 46693[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,374]DEBUG 46693[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,379]DEBUG 46698[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,380]DEBUG 46699[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,380]DEBUG 46699[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,381]DEBUG 46700[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,381]DEBUG 46700[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,381]DEBUG 46700[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,381]DEBUG 46700[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,382]DEBUG 46701[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:05,382]DEBUG 46701[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:05,382]DEBUG 46701[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:05,382]DEBUG 46701[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:05,382]DEBUG 46701[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:05,383]DEBUG 46702[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:05,383]DEBUG 46702[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:05,383]DEBUG 46702[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:05,384]DEBUG 46703[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:05,385]DEBUG 46704[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:05,385]DEBUG 46704[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:05,385]DEBUG 46704[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:05,385]DEBUG 46704[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:05,386]DEBUG 46705[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:05,387]DEBUG 46706[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:05,387]DEBUG 46706[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:05,387]DEBUG 46706[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:05,411]DEBUG 46730[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,412]DEBUG 46731[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,412]DEBUG 46731[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,412]DEBUG 46731[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,413]DEBUG 46732[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,413]DEBUG 46732[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,414]DEBUG 46733[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,414]DEBUG 46733[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,414]DEBUG 46733[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,415]DEBUG 46734[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,415]DEBUG 46734[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,416]DEBUG 46735[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,416]DEBUG 46735[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,416]DEBUG 46735[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,417]DEBUG 46736[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,417]DEBUG 46736[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,417]DEBUG 46736[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,418]DEBUG 46737[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,421]DEBUG 46740[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,422]DEBUG 46741[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:05,422] INFO 46741[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2018-05-29 16:51:05,423]DEBUG 46742[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2018-05-29 16:51:05,423] INFO 46742[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2018-05-29 16:51:05,424]DEBUG 46743[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-29 16:51:05,579]DEBUG 46898[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-29 16:51:05,601]DEBUG 46920[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-29 16:51:05,620]DEBUG 46939[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-29 16:51:05,633]DEBUG 46952[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-29 16:51:05,647]DEBUG 46966[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-29 16:51:05,661]DEBUG 46980[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-29 16:51:05,677]DEBUG 46996[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-29 16:51:05,768]DEBUG 47087[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-29 16:51:05,792]DEBUG 47111[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-29 16:51:05,801]DEBUG 47120[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-29 16:51:05,809]DEBUG 47128[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-29 16:51:05,822]DEBUG 47141[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-29 16:51:05,827]DEBUG 47146[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-29 16:51:05,882]DEBUG 47201[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-29 16:51:05,923]DEBUG 47242[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-29 16:51:05,966]DEBUG 47285[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-29 16:51:06,019]DEBUG 47338[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-29 16:51:06,025]DEBUG 47344[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-29 16:51:06,031]DEBUG 47350[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2018-05-29 16:51:06,040]DEBUG 47359[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2018-05-29 16:51:06,047]DEBUG 47366[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2018-05-29 16:51:06,056]DEBUG 47375[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2018-05-29 16:51:06,063]DEBUG 47382[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2018-05-29 16:51:06,071]DEBUG 47390[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2018-05-29 16:51:06,082]DEBUG 47401[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2018-05-29 16:51:06,091]DEBUG 47410[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2018-05-29 16:51:06,099]DEBUG 47418[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2018-05-29 16:51:06,105]DEBUG 47424[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2018-05-29 16:51:06,111]DEBUG 47430[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2018-05-29 16:51:06,121]DEBUG 47440[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2018-05-29 16:51:06,130]DEBUG 47449[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2018-05-29 16:51:06,139]DEBUG 47458[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2018-05-29 16:51:06,408]DEBUG 47727[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2018-05-29 16:51:06,435]DEBUG 47754[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2018-05-29 16:51:06,459]DEBUG 47778[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2018-05-29 16:51:06,473]DEBUG 47792[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2018-05-29 16:51:06,485]DEBUG 47804[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
[2018-05-29 16:51:06,497] INFO 47816[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-29 16:51:06,498]DEBUG 47817[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:06,499]DEBUG 47818[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:06,499]DEBUG 47818[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:06,500]DEBUG 47819[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:06,500]DEBUG 47819[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:06,500]DEBUG 47819[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:06,500]DEBUG 47819[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:06,501]DEBUG 47820[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:06,501]DEBUG 47820[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:06,501]DEBUG 47820[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:06,502]DEBUG 47821[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:06,502]DEBUG 47821[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:06,502]DEBUG 47821[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:06,505]DEBUG 47824[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:06,506]DEBUG 47825[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:06,506]DEBUG 47825[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:06,507]DEBUG 47826[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:06,507]DEBUG 47826[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:06,509]DEBUG 47828[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:06,509]DEBUG 47828[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:06,510]DEBUG 47829[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:06,510]DEBUG 47829[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:06,530]DEBUG 47849[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,530]DEBUG 47849[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,530]DEBUG 47849[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,530]DEBUG 47849[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,531]DEBUG 47850[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,531]DEBUG 47850[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,532]DEBUG 47851[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,534]DEBUG 47853[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,534]DEBUG 47853[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,535]DEBUG 47854[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,535]DEBUG 47854[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-29 16:51:06,535]DEBUG 47854[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-29 16:51:06,535]DEBUG 47854[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-29 16:51:06,535]DEBUG 47854[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-29 16:51:06,536]DEBUG 47855[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-29 16:51:06,536]DEBUG 47855[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-29 16:51:06,536]DEBUG 47855[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-29 16:51:06,536]DEBUG 47855[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-29 16:51:06,536]DEBUG 47855[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-29 16:51:06,537]DEBUG 47856[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:06,537]DEBUG 47856[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:06,537]DEBUG 47856[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:06,537]DEBUG 47856[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:06,537]DEBUG 47856[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:06,538]DEBUG 47857[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:06,538]DEBUG 47857[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:06,538]DEBUG 47857[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:06,538]DEBUG 47857[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:06,539]DEBUG 47858[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-29 16:51:06,539]DEBUG 47858[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-29 16:51:06,540]DEBUG 47859[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-29 16:51:06,540]DEBUG 47859[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-29 16:51:06,597]DEBUG 47916[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,598]DEBUG 47917[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,599]DEBUG 47918[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,600]DEBUG 47919[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,600]DEBUG 47919[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,601]DEBUG 47920[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,602]DEBUG 47921[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,602]DEBUG 47921[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,603]DEBUG 47922[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,604]DEBUG 47923[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,605]DEBUG 47924[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,606]DEBUG 47925[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,606]DEBUG 47925[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,607]DEBUG 47926[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,608]DEBUG 47927[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,609]DEBUG 47928[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,610]DEBUG 47929[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,611]DEBUG 47930[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,612]DEBUG 47931[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,612]DEBUG 47931[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-29 16:51:06,613]DEBUG 47932[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2018-05-29 16:51:06,614]DEBUG 47933[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2018-05-29 16:51:06,617]DEBUG 47936[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,617]DEBUG 47936[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,619]DEBUG 47938[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2018-05-29 16:51:06,620]DEBUG 47939[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-29 16:51:06,621]DEBUG 47940[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-29 16:51:06,622]DEBUG 47941[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2018-05-29 16:51:06,623]DEBUG 47942[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-29 16:51:06,624]DEBUG 47943[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,626]DEBUG 47945[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2018-05-29 16:51:06,627]DEBUG 47946[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,654]DEBUG 47973[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2018-05-29 16:51:06,654]DEBUG 47973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,656]DEBUG 47975[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2018-05-29 16:51:06,656]DEBUG 47975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2018-05-29 16:51:06,656]DEBUG 47975[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-29 16:51:06,657]DEBUG 47976[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-29 16:51:06,658]DEBUG 47977[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-29 16:51:06,659]DEBUG 47978[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2018-05-29 16:51:06,661]DEBUG 47980[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-29 16:51:06,662]DEBUG 47981[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-29 16:51:06,663]DEBUG 47982[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-29 16:51:06,663]DEBUG 47982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,664]DEBUG 47983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2018-05-29 16:51:06,664]DEBUG 47983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2018-05-29 16:51:06,665]DEBUG 47984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2018-05-29 16:51:06,665]DEBUG 47984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2018-05-29 16:51:06,671]DEBUG 47990[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2018-05-29 16:51:06,671]DEBUG 47990[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2018-05-29 16:51:06,672]DEBUG 47991[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2018-05-29 16:51:06,712]DEBUG 48031[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,713]DEBUG 48032[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,714]DEBUG 48033[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,715]DEBUG 48034[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,716]DEBUG 48035[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,717]DEBUG 48036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,719]DEBUG 48038[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2018-05-29 16:51:06,720]DEBUG 48039[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:06,721]DEBUG 48040[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2018-05-29 16:51:06,723]DEBUG 48042[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,724]DEBUG 48043[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,725]DEBUG 48044[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,726]DEBUG 48045[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,727]DEBUG 48046[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,728]DEBUG 48047[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,731]DEBUG 48050[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2018-05-29 16:51:06,732]DEBUG 48051[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:06,733]DEBUG 48052[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2018-05-29 16:51:06,734]DEBUG 48053[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,735]DEBUG 48054[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,736]DEBUG 48055[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,738]DEBUG 48057[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,739]DEBUG 48058[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,740]DEBUG 48059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,743]DEBUG 48062[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2018-05-29 16:51:06,744]DEBUG 48063[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2018-05-29 16:51:06,744]DEBUG 48063[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2018-05-29 16:51:06,746]DEBUG 48065[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,746]DEBUG 48065[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,747]DEBUG 48066[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,749]DEBUG 48068[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,750]DEBUG 48069[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,751]DEBUG 48070[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,755]DEBUG 48074[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2018-05-29 16:51:06,755]DEBUG 48074[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2018-05-29 16:51:06,756]DEBUG 48075[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2018-05-29 16:51:06,758]DEBUG 48077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,758]DEBUG 48077[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,759]DEBUG 48078[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,761]DEBUG 48080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,762]DEBUG 48081[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,762]DEBUG 48081[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,767]DEBUG 48086[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2018-05-29 16:51:06,768]DEBUG 48087[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:06,768]DEBUG 48087[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2018-05-29 16:51:06,770]DEBUG 48089[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,771]DEBUG 48090[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,772]DEBUG 48091[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,773]DEBUG 48092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,774]DEBUG 48093[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,776]DEBUG 48095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,780]DEBUG 48099[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2018-05-29 16:51:06,781]DEBUG 48100[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2018-05-29 16:51:06,782]DEBUG 48101[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2018-05-29 16:51:06,786]DEBUG 48105[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,786]DEBUG 48105[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2018-05-29 16:51:06,787]DEBUG 48106[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2018-05-29 16:51:06,787]DEBUG 48106[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,788]DEBUG 48107[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,790]DEBUG 48109[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,796]DEBUG 48115[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,797]DEBUG 48116[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2018-05-29 16:51:06,799]DEBUG 48118[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:06,799]DEBUG 48118[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2018-05-29 16:51:06,801]DEBUG 48120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,802]DEBUG 48121[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,803]DEBUG 48122[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,804]DEBUG 48123[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,805]DEBUG 48124[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,807]DEBUG 48126[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,811]DEBUG 48130[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2018-05-29 16:51:06,812]DEBUG 48131[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2018-05-29 16:51:06,813]DEBUG 48132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2018-05-29 16:51:06,814]DEBUG 48133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:06,815]DEBUG 48134[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2018-05-29 16:51:06,815]DEBUG 48134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,820]DEBUG 48139[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2018-05-29 16:51:06,821]DEBUG 48140[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2018-05-29 16:51:06,821]DEBUG 48140[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2018-05-29 16:51:06,824]DEBUG 48143[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,825]DEBUG 48144[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,826]DEBUG 48145[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,828]DEBUG 48147[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,829]DEBUG 48148[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,829]DEBUG 48148[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,833]DEBUG 48152[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2018-05-29 16:51:06,834]DEBUG 48153[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2018-05-29 16:51:06,834]DEBUG 48153[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2018-05-29 16:51:06,837]DEBUG 48156[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,837]DEBUG 48156[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2018-05-29 16:51:06,838]DEBUG 48157[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-29 16:51:06,841]DEBUG 48160[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,842]DEBUG 48161[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2018-05-29 16:51:06,843]DEBUG 48162[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,847]DEBUG 48166[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2018-05-29 16:51:06,848]DEBUG 48167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:06,848]DEBUG 48167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,849]DEBUG 48168[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4ac700be]
[2018-05-29 16:51:06,850]DEBUG 48169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-29 16:51:06,859]DEBUG 48178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:06,859]DEBUG 48178[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:06,860]DEBUG 48179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:06,860]DEBUG 48179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:06,860]DEBUG 48179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:06,860]DEBUG 48179[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:06,861]DEBUG 48180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:06,861]DEBUG 48180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:06,861]DEBUG 48180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:06,861]DEBUG 48180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:06,861]DEBUG 48180[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:06,862]DEBUG 48181[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:06,863]DEBUG 48182[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'customerTypeDao'
[2018-05-29 16:51:06,863]DEBUG 48182[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:06,864]DEBUG 48183[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:06,864]DEBUG 48183[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'dimensionDao'
[2018-05-29 16:51:06,864]DEBUG 48183[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:06,865]DEBUG 48184[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:06,870]DEBUG 48189[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderDao'
[2018-05-29 16:51:06,870]DEBUG 48189[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:06,871]DEBUG 48190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:06,871]DEBUG 48190[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderItemDao'
[2018-05-29 16:51:06,871]DEBUG 48190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:06,872]DEBUG 48191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:06,872]DEBUG 48191[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderStatusDao'
[2018-05-29 16:51:06,873]DEBUG 48192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:06,874]DEBUG 48193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:06,874]DEBUG 48193[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'productDao'
[2018-05-29 16:51:06,874]DEBUG 48193[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:06,875]DEBUG 48194[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:06,875]DEBUG 48194[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'regionDao'
[2018-05-29 16:51:06,876]DEBUG 48195[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:06,877]DEBUG 48196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:06,877]DEBUG 48196[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'roleDao'
[2018-05-29 16:51:06,877]DEBUG 48196[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:06,878]DEBUG 48197[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:06,879]DEBUG 48198[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'userDao'
[2018-05-29 16:51:06,879]DEBUG 48198[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:06,880]DEBUG 48199[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:06,881]DEBUG 48200[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'sessionFactory'
[2018-05-29 16:51:06,892]DEBUG 48211[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:06,893]DEBUG 48212[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,922]DEBUG 48241[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:06,923]DEBUG 48242[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471]
[2018-05-29 16:51:06,937]DEBUG 48256[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-29 16:51:06,939]DEBUG 48258[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.setUp()
[2018-05-29 16:51:06,940]DEBUG 48259[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,941]DEBUG 48260[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.tearDown()
[2018-05-29 16:51:06,941]DEBUG 48260[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,942]DEBUG 48261[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindAll()
[2018-05-29 16:51:06,942]DEBUG 48261[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,943]DEBUG 48262[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindByID()
[2018-05-29 16:51:06,943]DEBUG 48262[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,944]DEBUG 48263[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testInsertOrUpdate()
[2018-05-29 16:51:06,945]DEBUG 48264[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,946]DEBUG 48265[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testDelete()
[2018-05-29 16:51:06,946]DEBUG 48265[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,946]DEBUG 48265[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindOrderStatusByName()
[2018-05-29 16:51:06,947]DEBUG 48266[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:06,947]DEBUG 48266[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-29 16:51:06,948]DEBUG 48267[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-29 16:51:06,948]DEBUG 48267[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-29 16:51:06,949]DEBUG 48268[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-29 16:51:06,949]DEBUG 48268[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-29 16:51:06,950]DEBUG 48269[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-29 16:51:06,950]DEBUG 48269[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-29 16:51:06,951]DEBUG 48270[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-29 16:51:06,964]DEBUG 48283[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-29 16:51:06,965]DEBUG 48284[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-29 16:51:06,965]DEBUG 48284[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-29 16:51:06,965]DEBUG 48284[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-29 16:51:06,966]DEBUG 48285[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-29 16:51:06,966]DEBUG 48285[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-29 16:51:06,967]DEBUG 48286[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-29 16:51:06,967]DEBUG 48286[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-29 16:51:06,967]DEBUG 48286[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-29 16:51:06,967]DEBUG 48286[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,968]DEBUG 48287[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,968]DEBUG 48287[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-29 16:51:06,968]DEBUG 48287[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,969]DEBUG 48288[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,969]DEBUG 48288[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-29 16:51:06,970]DEBUG 48289[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-29 16:51:06,970]DEBUG 48289[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-29 16:51:06,971]DEBUG 48290[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-29 16:51:06,971]DEBUG 48290[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-29 16:51:06,972]DEBUG 48291[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-29 16:51:06,972]DEBUG 48291[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-29 16:51:06,972]DEBUG 48291[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-29 16:51:06,973]DEBUG 48292[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-29 16:51:06,974]DEBUG 48293[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,974]DEBUG 48293[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-29 16:51:06,974]DEBUG 48293[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:06,975]DEBUG 48294[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-29 16:51:06,980]DEBUG 48299[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-29 16:51:06,981]DEBUG 48300[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-29 16:51:06,981]DEBUG 48300[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-29 16:51:06,981]DEBUG 48300[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-29 16:51:07,069]DEBUG 48388[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,070]DEBUG 48389[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,070]DEBUG 48389[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,070]DEBUG 48389[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@3f5070f2 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,071]DEBUG 48390[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,086]DEBUG 48405[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,091]DEBUG 48410[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270670
[2018-05-29 16:51:07,092]DEBUG 48411[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2fa3ac75] for Hibernate transaction
[2018-05-29 16:51:07,092]DEBUG 48411[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fa3ac75]
[2018-05-29 16:51:07,093]DEBUG 48412[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,094]DEBUG 48413[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,094]DEBUG 48413[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,095]DEBUG 48414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,095] INFO 48414[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,096]DEBUG 48415[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,102]DEBUG 48421[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,103]DEBUG 48422[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,106]DEBUG 48425[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:07,107]DEBUG 48426[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,110]DEBUG 48429[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,110]DEBUG 48429[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,111]DEBUG 48430[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,113]DEBUG 48432[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:07,114]DEBUG 48433[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,115]DEBUG 48434[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,115]DEBUG 48434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,116]DEBUG 48435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,118]DEBUG 48437[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:07,119]DEBUG 48438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,120]DEBUG 48439[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,121]DEBUG 48440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,122]DEBUG 48441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,122]DEBUG 48441[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,123]DEBUG 48442[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,123]DEBUG 48442[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,124]DEBUG 48443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,124]DEBUG 48443[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,124]DEBUG 48443[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,125]DEBUG 48444[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2018-05-29 16:51:07,127]DEBUG 48446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:07,128]DEBUG 48447[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#1]
[2018-05-29 16:51:07,129]DEBUG 48448[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#2]
[2018-05-29 16:51:07,129]DEBUG 48448[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#3]
[2018-05-29 16:51:07,130]DEBUG 48449[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:07,130]DEBUG 48449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,130]DEBUG 48449[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:07,136]DEBUG 48455[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2018-05-29 16:51:07,140]DEBUG 48459[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2018-05-29 16:51:07,141]DEBUG 48460[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,141]DEBUG 48460[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,142]DEBUG 48461[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2018-05-29 16:51:07,143]DEBUG 48462[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,144]DEBUG 48463[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,145]DEBUG 48464[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2018-05-29 16:51:07,145]DEBUG 48464[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,146]DEBUG 48465[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,151]DEBUG 48470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,151]DEBUG 48470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,152]DEBUG 48471[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,152]DEBUG 48471[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,152]DEBUG 48471[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,153]DEBUG 48472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,159]DEBUG 48478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,159]DEBUG 48478[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,160]DEBUG 48479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,160]DEBUG 48479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,162]DEBUG 48481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,165]DEBUG 48484[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-29 16:51:07,169]DEBUG 48488[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2018-05-29 16:51:07,170]DEBUG 48489[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,170]DEBUG 48489[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,171]DEBUG 48490[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2018-05-29 16:51:07,172]DEBUG 48491[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,172]DEBUG 48491[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,173]DEBUG 48492[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2018-05-29 16:51:07,173]DEBUG 48492[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,193]DEBUG 48512[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,194]DEBUG 48513[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,195]DEBUG 48514[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,195]DEBUG 48514[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,195]DEBUG 48514[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,196]DEBUG 48515[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,196]DEBUG 48515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,196]DEBUG 48515[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,197]DEBUG 48516[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,197]DEBUG 48516[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,197]DEBUG 48516[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,199]DEBUG 48518[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,202]DEBUG 48521[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2018-05-29 16:51:07,207]DEBUG 48526[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2018-05-29 16:51:07,207]DEBUG 48526[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,208]DEBUG 48527[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,209]DEBUG 48528[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2018-05-29 16:51:07,209]DEBUG 48528[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,210]DEBUG 48529[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,210]DEBUG 48529[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2018-05-29 16:51:07,211]DEBUG 48530[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,223]DEBUG 48542[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,223]DEBUG 48542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,224]DEBUG 48543[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,224]DEBUG 48543[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,224]DEBUG 48543[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,224]DEBUG 48543[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,225]DEBUG 48544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,225]DEBUG 48544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,225]DEBUG 48544[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,225]DEBUG 48544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,225]DEBUG 48544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,228]DEBUG 48547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,230]DEBUG 48549[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2018-05-29 16:51:07,231]DEBUG 48550[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2018-05-29 16:51:07,232]DEBUG 48551[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2018-05-29 16:51:07,233]DEBUG 48552[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,233]DEBUG 48552[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,233]DEBUG 48552[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2018-05-29 16:51:07,234]DEBUG 48553[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,234]DEBUG 48553[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,234]DEBUG 48553[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2018-05-29 16:51:07,235]DEBUG 48554[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,235]DEBUG 48554[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,235]DEBUG 48554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,236]DEBUG 48555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,236]DEBUG 48555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,236]DEBUG 48555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,236]DEBUG 48555[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,237]DEBUG 48556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,237]DEBUG 48556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,237]DEBUG 48556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,237]DEBUG 48556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,237]DEBUG 48556[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,239]DEBUG 48558[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,241]DEBUG 48560[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-29 16:51:07,247]DEBUG 48566[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2018-05-29 16:51:07,248]DEBUG 48567[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,248]DEBUG 48567[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,248]DEBUG 48567[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2018-05-29 16:51:07,249]DEBUG 48568[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,249]DEBUG 48568[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,250]DEBUG 48569[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2018-05-29 16:51:07,250]DEBUG 48569[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,250]DEBUG 48569[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,250]DEBUG 48569[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,251]DEBUG 48570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,251]DEBUG 48570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,251]DEBUG 48570[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,251]DEBUG 48570[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,252]DEBUG 48571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,252]DEBUG 48571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,252]DEBUG 48571[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,252]DEBUG 48571[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,253]DEBUG 48572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,254]DEBUG 48573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,256]DEBUG 48575[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2018-05-29 16:51:07,258]DEBUG 48577[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2018-05-29 16:51:07,258]DEBUG 48577[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,259]DEBUG 48578[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,259]DEBUG 48578[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2018-05-29 16:51:07,259]DEBUG 48578[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,260]DEBUG 48579[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,260]DEBUG 48579[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2018-05-29 16:51:07,260]DEBUG 48579[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,261]DEBUG 48580[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,261]DEBUG 48580[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,261]DEBUG 48580[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,262]DEBUG 48581[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,262]DEBUG 48581[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,262]DEBUG 48581[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,262]DEBUG 48581[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,263]DEBUG 48582[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,263]DEBUG 48582[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,263]DEBUG 48582[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,263]DEBUG 48582[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,268]DEBUG 48587[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,269]DEBUG 48588[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-29 16:51:07,271]DEBUG 48590[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2018-05-29 16:51:07,271]DEBUG 48590[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,272]DEBUG 48591[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,273]DEBUG 48592[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2018-05-29 16:51:07,273]DEBUG 48592[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,273]DEBUG 48592[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,273]DEBUG 48592[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2018-05-29 16:51:07,274]DEBUG 48593[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,274]DEBUG 48593[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,274]DEBUG 48593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,274]DEBUG 48593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,274]DEBUG 48593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,275]DEBUG 48594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,276]DEBUG 48595[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,278]DEBUG 48597[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2018-05-29 16:51:07,279]DEBUG 48598[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2018-05-29 16:51:07,279]DEBUG 48598[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,279]DEBUG 48598[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,280]DEBUG 48599[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2018-05-29 16:51:07,280]DEBUG 48599[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,280]DEBUG 48599[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,283]DEBUG 48602[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2018-05-29 16:51:07,283]DEBUG 48602[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,284]DEBUG 48603[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,284]DEBUG 48603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,284]DEBUG 48603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,284]DEBUG 48603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,284]DEBUG 48603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,285]DEBUG 48604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,286]DEBUG 48605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,288]DEBUG 48607[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2018-05-29 16:51:07,289]DEBUG 48608[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2018-05-29 16:51:07,289]DEBUG 48608[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,289]DEBUG 48608[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-29 16:51:07,290]DEBUG 48609[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2018-05-29 16:51:07,290]DEBUG 48609[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-29 16:51:07,290]DEBUG 48609[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-29 16:51:07,290]DEBUG 48609[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,291]DEBUG 48610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,292]DEBUG 48611[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,296]DEBUG 48615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,296]DEBUG 48615[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,296]DEBUG 48615[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,296]DEBUG 48615[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fa3ac75]
[2018-05-29 16:51:07,296]DEBUG 48615[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,348]DEBUG 48667[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,349]DEBUG 48668[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,349]DEBUG 48668[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fa3ac75] after transaction
[2018-05-29 16:51:07,350]DEBUG 48669[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,350]DEBUG 48669[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,351]DEBUG 48670[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,352] INFO 48671[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,353]DEBUG 48672[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@18fbd471, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,354]DEBUG 48673[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,354]DEBUG 48673[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,355]DEBUG 48674[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:07,355]DEBUG 48674[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:07,356]DEBUG 48675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:07,357]DEBUG 48676[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:07,357]DEBUG 48676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:07,358]DEBUG 48677[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:07,358]DEBUG 48677[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:07,359]DEBUG 48678[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:07,360]DEBUG 48679[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:07,361]DEBUG 48680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:07,361]DEBUG 48680[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:07,361]DEBUG 48680[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:07,362]DEBUG 48681[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:07,362]DEBUG 48681[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:07,363]DEBUG 48682[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:07,363]DEBUG 48682[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:07,364]DEBUG 48683[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:07,364]DEBUG 48683[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:07,365]DEBUG 48684[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:07,365]DEBUG 48684[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:07,366]DEBUG 48685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:07,366]DEBUG 48685[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:07,367]DEBUG 48686[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:07,368]DEBUG 48687[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10]
[2018-05-29 16:51:07,369]DEBUG 48688[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,369]DEBUG 48688[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,370]DEBUG 48689[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,371]DEBUG 48690[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,371]DEBUG 48690[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270673
[2018-05-29 16:51:07,372]DEBUG 48691[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4f5d2e78] for Hibernate transaction
[2018-05-29 16:51:07,372]DEBUG 48691[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f5d2e78]
[2018-05-29 16:51:07,372]DEBUG 48691[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,373]DEBUG 48692[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,373]DEBUG 48692[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,373]DEBUG 48692[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,428] INFO 48747[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,429]DEBUG 48748[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,430]DEBUG 48749[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,430]DEBUG 48749[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,432]DEBUG 48751[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:07,432]DEBUG 48751[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,433]DEBUG 48752[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,433]DEBUG 48752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,434]DEBUG 48753[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,436]DEBUG 48755[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:07,437]DEBUG 48756[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,439]DEBUG 48758[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,440]DEBUG 48759[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,440]DEBUG 48759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,445]DEBUG 48764[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:07,446]DEBUG 48765[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,447]DEBUG 48766[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,448]DEBUG 48767[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,448]DEBUG 48767[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,449]DEBUG 48768[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,449]DEBUG 48768[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,450]DEBUG 48769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,450]DEBUG 48769[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,451]DEBUG 48770[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,453]DEBUG 48772[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,454]DEBUG 48773[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,456]DEBUG 48775[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,457]DEBUG 48776[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,458]DEBUG 48777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,458]DEBUG 48777[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,459]DEBUG 48778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,459]DEBUG 48778[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,460]DEBUG 48779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,460]DEBUG 48779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,461]DEBUG 48780[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,461]DEBUG 48780[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,462]DEBUG 48781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,464]DEBUG 48783[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,466]DEBUG 48785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,467]DEBUG 48786[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,468]DEBUG 48787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,468]DEBUG 48787[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,468]DEBUG 48787[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,469]DEBUG 48788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,469]DEBUG 48788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,469]DEBUG 48788[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,469]DEBUG 48788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,469]DEBUG 48788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,471]DEBUG 48790[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,472]DEBUG 48791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,472]DEBUG 48791[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,472]DEBUG 48791[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,473]DEBUG 48792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,473]DEBUG 48792[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,473]DEBUG 48792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,473]DEBUG 48792[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,474]DEBUG 48793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,474]DEBUG 48793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,474]DEBUG 48793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,475]DEBUG 48794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,476]DEBUG 48795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,476]DEBUG 48795[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,476]DEBUG 48795[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,477]DEBUG 48796[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,477]DEBUG 48796[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,477]DEBUG 48796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,477]DEBUG 48796[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,478]DEBUG 48797[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,478]DEBUG 48797[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,478]DEBUG 48797[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,479]DEBUG 48798[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,480]DEBUG 48799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,480]DEBUG 48799[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,481]DEBUG 48800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,481]DEBUG 48800[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,481]DEBUG 48800[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,482]DEBUG 48801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,482]DEBUG 48801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,482]DEBUG 48801[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,483]DEBUG 48802[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,483]DEBUG 48802[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,484]DEBUG 48803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,485]DEBUG 48804[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,487]DEBUG 48806[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,488]DEBUG 48807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,488]DEBUG 48807[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,488]DEBUG 48807[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,488]DEBUG 48807[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,489]DEBUG 48808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,489]DEBUG 48808[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,489]DEBUG 48808[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,489]DEBUG 48808[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,491]DEBUG 48810[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,492]DEBUG 48811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,492]DEBUG 48811[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,493]DEBUG 48812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,493]DEBUG 48812[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,493]DEBUG 48812[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,494]DEBUG 48813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,494]DEBUG 48813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,494]DEBUG 48813[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,495]DEBUG 48814[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,495]DEBUG 48814[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,496]DEBUG 48815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,497]DEBUG 48816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,497]DEBUG 48816[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,497]DEBUG 48816[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,498]DEBUG 48817[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,498]DEBUG 48817[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,498]DEBUG 48817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-29 16:51:07,498]DEBUG 48817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-29 16:51:07,498]DEBUG 48817[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-29 16:51:07,499]DEBUG 48818[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,499]DEBUG 48818[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,500]DEBUG 48819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,501]DEBUG 48820[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,501]DEBUG 48820[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,501]DEBUG 48820[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f5d2e78]
[2018-05-29 16:51:07,501]DEBUG 48820[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,503]DEBUG 48822[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,503]DEBUG 48822[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,504]DEBUG 48823[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f5d2e78] after transaction
[2018-05-29 16:51:07,504]DEBUG 48823[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,504]DEBUG 48823[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,504]DEBUG 48823[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,504] INFO 48823[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,505]DEBUG 48824[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2d9f2f10, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,505]DEBUG 48824[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,505]DEBUG 48824[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,506]DEBUG 48825[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:07,506]DEBUG 48825[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:07,506]DEBUG 48825[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:07,506]DEBUG 48825[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:07,507]DEBUG 48826[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:07,508]DEBUG 48827[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:07,509]DEBUG 48828[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:07,509]DEBUG 48828[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:07,509]DEBUG 48828[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d]
[2018-05-29 16:51:07,509]DEBUG 48828[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,510]DEBUG 48829[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,510]DEBUG 48829[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,510]DEBUG 48829[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,510]DEBUG 48829[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270675
[2018-05-29 16:51:07,510]DEBUG 48829[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@c2be308] for Hibernate transaction
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@c2be308]
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,511] INFO 48830[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,511]DEBUG 48830[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,512]DEBUG 48831[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,512]DEBUG 48831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,514]DEBUG 48833[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:07,514]DEBUG 48833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,514]DEBUG 48833[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,515]DEBUG 48834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,517]DEBUG 48836[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,518]DEBUG 48837[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-29 16:51:07,519]DEBUG 48838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,519]DEBUG 48838[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,519]DEBUG 48838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,520]DEBUG 48839[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,521]DEBUG 48840[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-29 16:51:07,521]DEBUG 48840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,522]DEBUG 48841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,522]DEBUG 48841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,522]DEBUG 48841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,522]DEBUG 48841[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,523]DEBUG 48842[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2018-05-29 16:51:07,524]DEBUG 48843[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:07,525]DEBUG 48844[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7]
[2018-05-29 16:51:07,525]DEBUG 48844[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#8]
[2018-05-29 16:51:07,525]DEBUG 48844[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#9]
[2018-05-29 16:51:07,526]DEBUG 48845[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:07,526]DEBUG 48845[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,526]DEBUG 48845[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:07,526]DEBUG 48845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,526]DEBUG 48845[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,527]DEBUG 48846[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,528]DEBUG 48847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,529]DEBUG 48848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,529]DEBUG 48848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,529]DEBUG 48848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,529]DEBUG 48848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,530]DEBUG 48849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,532]DEBUG 48851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,532]DEBUG 48851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,532]DEBUG 48851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,532]DEBUG 48851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,533]DEBUG 48852[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,534]DEBUG 48853[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,535]DEBUG 48854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,535]DEBUG 48854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,535]DEBUG 48854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,535]DEBUG 48854[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,535]DEBUG 48854[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,536]DEBUG 48855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,536]DEBUG 48855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,536]DEBUG 48855[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,536]DEBUG 48855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,536]DEBUG 48855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,538]DEBUG 48857[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,538]DEBUG 48857[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,538]DEBUG 48857[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,538]DEBUG 48857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,539]DEBUG 48858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,540]DEBUG 48859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,541]DEBUG 48860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,541]DEBUG 48860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,541]DEBUG 48860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,544]DEBUG 48863[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,544]DEBUG 48863[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,544]DEBUG 48863[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,544]DEBUG 48863[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,544]DEBUG 48863[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,545]DEBUG 48864[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,545]DEBUG 48864[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,546]DEBUG 48865[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,546]DEBUG 48865[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,546]DEBUG 48865[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,546]DEBUG 48865[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,547]DEBUG 48866[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,548]DEBUG 48867[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,549]DEBUG 48868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,549]DEBUG 48868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,549]DEBUG 48868[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,549]DEBUG 48868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,549]DEBUG 48868[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,550]DEBUG 48869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,551]DEBUG 48870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,552]DEBUG 48871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,552]DEBUG 48871[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,552]DEBUG 48871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,552]DEBUG 48871[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,552]DEBUG 48871[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,553]DEBUG 48872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-29 16:51:07,553]DEBUG 48872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-29 16:51:07,553]DEBUG 48872[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-29 16:51:07,553]DEBUG 48872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,553]DEBUG 48872[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,554]DEBUG 48873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,554]DEBUG 48873[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,555]DEBUG 48874[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,555]DEBUG 48874[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@c2be308]
[2018-05-29 16:51:07,555]DEBUG 48874[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,749]DEBUG 49068[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,750]DEBUG 49069[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,751]DEBUG 49070[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@c2be308] after transaction
[2018-05-29 16:51:07,751]DEBUG 49070[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,752]DEBUG 49071[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,752]DEBUG 49071[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,753] INFO 49072[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,755]DEBUG 49074[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@6d53bd0d, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,756]DEBUG 49075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,756]DEBUG 49075[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,757]DEBUG 49076[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:07,758]DEBUG 49077[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:07,759]DEBUG 49078[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:07,760]DEBUG 49079[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:07,761]DEBUG 49080[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:07,763]DEBUG 49082[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:07,763]DEBUG 49082[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:07,764]DEBUG 49083[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:07,765]DEBUG 49084[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:07,765]DEBUG 49084[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:07,766]DEBUG 49085[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:07,766]DEBUG 49085[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:07,767]DEBUG 49086[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:07,767]DEBUG 49086[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:07,768]DEBUG 49087[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:07,768]DEBUG 49087[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:07,769]DEBUG 49088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:07,769]DEBUG 49088[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:07,770]DEBUG 49089[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:07,770]DEBUG 49089[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:07,770]DEBUG 49089[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:07,771]DEBUG 49090[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:07,772]DEBUG 49091[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:07,772]DEBUG 49091[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16]
[2018-05-29 16:51:07,774]DEBUG 49093[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,774]DEBUG 49093[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,775]DEBUG 49094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,776]DEBUG 49095[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,776]DEBUG 49095[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270677
[2018-05-29 16:51:07,777]DEBUG 49096[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@568f3ac3] for Hibernate transaction
[2018-05-29 16:51:07,777]DEBUG 49096[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@568f3ac3]
[2018-05-29 16:51:07,777]DEBUG 49096[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,778]DEBUG 49097[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,778]DEBUG 49097[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,779]DEBUG 49098[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,784] INFO 49103[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,785]DEBUG 49104[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,785]DEBUG 49104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,786]DEBUG 49105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,801]DEBUG 49120[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-29 16:51:07,802]DEBUG 49121[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,803]DEBUG 49122[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,803]DEBUG 49122[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,804]DEBUG 49123[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,817]DEBUG 49136[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-29 16:51:07,817]DEBUG 49136[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,818]DEBUG 49137[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,819]DEBUG 49138[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,820]DEBUG 49139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,823]DEBUG 49142[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-29 16:51:07,824]DEBUG 49143[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,825]DEBUG 49144[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2018-05-29 16:51:07,826]DEBUG 49145[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,826]DEBUG 49145[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,826]DEBUG 49145[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-29 16:51:07,826]DEBUG 49145[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,827]DEBUG 49146[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,827]DEBUG 49146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-29 16:51:07,827]DEBUG 49146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,827]DEBUG 49146[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,827]DEBUG 49146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,828]DEBUG 49147[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,829]DEBUG 49148[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,829]DEBUG 49148[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,829]DEBUG 49148[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,830]DEBUG 49149[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-29 16:51:07,830]DEBUG 49149[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,830]DEBUG 49149[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,830]DEBUG 49149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-29 16:51:07,831]DEBUG 49150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,831]DEBUG 49150[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,831]DEBUG 49150[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,831]DEBUG 49150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,832]DEBUG 49151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,833]DEBUG 49152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,833]DEBUG 49152[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,834]DEBUG 49153[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,835]DEBUG 49154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,835]DEBUG 49154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,836]DEBUG 49155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,837]DEBUG 49156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,837]DEBUG 49156[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,837]DEBUG 49156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-29 16:51:07,837]DEBUG 49156[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,838]DEBUG 49157[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,838]DEBUG 49157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-29 16:51:07,838]DEBUG 49157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,838]DEBUG 49157[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,838]DEBUG 49157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,839]DEBUG 49158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,840]DEBUG 49159[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,841]DEBUG 49160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,841]DEBUG 49160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,841]DEBUG 49160[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-29 16:51:07,842]DEBUG 49161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,842]DEBUG 49161[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,842]DEBUG 49161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-29 16:51:07,842]DEBUG 49161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,842]DEBUG 49161[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,843]DEBUG 49162[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2018-05-29 16:51:07,843]DEBUG 49162[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,843]DEBUG 49162[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2018-05-29 16:51:07,843]DEBUG 49162[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:07,845]DEBUG 49164[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,845]DEBUG 49164[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,846]DEBUG 49165[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,847]DEBUG 49166[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,847]DEBUG 49166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,848]DEBUG 49167[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,848]DEBUG 49167[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-29 16:51:07,848]DEBUG 49167[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,848]DEBUG 49167[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,848]DEBUG 49167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,849]DEBUG 49168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,851]DEBUG 49170[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,851]DEBUG 49170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,853]DEBUG 49172[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,853]DEBUG 49172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,853]DEBUG 49172[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,854]DEBUG 49173[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-29 16:51:07,854]DEBUG 49173[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,854]DEBUG 49173[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,854]DEBUG 49173[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,855]DEBUG 49174[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,855]DEBUG 49174[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,855]DEBUG 49174[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,856]DEBUG 49175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,857]DEBUG 49176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,857]DEBUG 49176[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,858]DEBUG 49177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-29 16:51:07,858]DEBUG 49177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,858]DEBUG 49177[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,858]DEBUG 49177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,858]DEBUG 49177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,859]DEBUG 49178[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,859]DEBUG 49178[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,860]DEBUG 49179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,861]DEBUG 49180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,861]DEBUG 49180[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,862]DEBUG 49181[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-29 16:51:07,862]DEBUG 49181[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,862]DEBUG 49181[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,862]DEBUG 49181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-29 16:51:07,862]DEBUG 49181[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-29 16:51:07,863]DEBUG 49182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,863]DEBUG 49182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,864]DEBUG 49183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,865]DEBUG 49184[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,865]DEBUG 49184[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,865]DEBUG 49184[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@568f3ac3]
[2018-05-29 16:51:07,865]DEBUG 49184[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,867]DEBUG 49186[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,868]DEBUG 49187[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,868]DEBUG 49187[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@568f3ac3] after transaction
[2018-05-29 16:51:07,868]DEBUG 49187[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,868]DEBUG 49187[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,869]DEBUG 49188[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,869] INFO 49188[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,869]DEBUG 49188[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@2a2bc16, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,870]DEBUG 49189[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,870]DEBUG 49189[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,871]DEBUG 49190[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:07,871]DEBUG 49190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:07,871]DEBUG 49190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:07,871]DEBUG 49190[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:07,871]DEBUG 49190[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:07,872]DEBUG 49191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:07,872]DEBUG 49191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:07,872]DEBUG 49191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:07,872]DEBUG 49191[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:07,872]DEBUG 49191[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:07,873]DEBUG 49192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:07,873]DEBUG 49192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:07,873]DEBUG 49192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:07,873]DEBUG 49192[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:07,873]DEBUG 49192[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:07,874]DEBUG 49193[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:07,875]DEBUG 49194[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:07,875]DEBUG 49194[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:07,875]DEBUG 49194[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395]
[2018-05-29 16:51:07,876]DEBUG 49195[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,876]DEBUG 49195[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,877]DEBUG 49196[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,877]DEBUG 49196[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindOrderStatusByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,877]DEBUG 49196[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270678
[2018-05-29 16:51:07,878]DEBUG 49197[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@651e83ba] for Hibernate transaction
[2018-05-29 16:51:07,878]DEBUG 49197[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@651e83ba]
[2018-05-29 16:51:07,878]DEBUG 49197[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,878]DEBUG 49197[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,878]DEBUG 49197[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,879]DEBUG 49198[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,879] INFO 49198[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,879]DEBUG 49198[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,880]DEBUG 49199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,880]DEBUG 49199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,881]DEBUG 49200[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-29 16:51:07,882]DEBUG 49201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,885]DEBUG 49204[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,885]DEBUG 49204[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,886]DEBUG 49205[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,887]DEBUG 49206[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-29 16:51:07,888]DEBUG 49207[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,888]DEBUG 49207[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,888]DEBUG 49207[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,889]DEBUG 49208[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,890]DEBUG 49209[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2018-05-29 16:51:07,891]DEBUG 49210[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,891]DEBUG 49210[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,891]DEBUG 49210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,892]DEBUG 49211[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,893]DEBUG 49212[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2018-05-29 16:51:07,893]DEBUG 49212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,894]DEBUG 49213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,894]DEBUG 49213[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,894]DEBUG 49213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:07,894]DEBUG 49213[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,894]DEBUG 49213[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,895]DEBUG 49214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_ where this_.OrederStatusName=?
[2018-05-29 16:51:07,897]DEBUG 49216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:07,897]DEBUG 49216[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#16]
[2018-05-29 16:51:07,898]DEBUG 49217[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:07,898]DEBUG 49217[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,898]DEBUG 49217[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:07,898]DEBUG 49217[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,899]DEBUG 49218[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,900]DEBUG 49219[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,900]DEBUG 49219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,900]DEBUG 49219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,901]DEBUG 49220[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,902]DEBUG 49221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,902]DEBUG 49221[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,902]DEBUG 49221[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:07,902]DEBUG 49221[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,902]DEBUG 49221[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,903]DEBUG 49222[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,904]DEBUG 49223[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,905]DEBUG 49224[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,906]DEBUG 49225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,906]DEBUG 49225[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,906]DEBUG 49225[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,906]DEBUG 49225[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,907]DEBUG 49226[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,907]DEBUG 49226[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,908]DEBUG 49227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,909]DEBUG 49228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,909]DEBUG 49228[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,909]DEBUG 49228[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,909]DEBUG 49228[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,910]DEBUG 49229[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,910]DEBUG 49229[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,911]DEBUG 49230[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,911]DEBUG 49230[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,914]DEBUG 49233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,915]DEBUG 49234[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2018-05-29 16:51:07,915]DEBUG 49234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,915]DEBUG 49234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2018-05-29 16:51:07,915]DEBUG 49234[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:07,916]DEBUG 49235[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,917]DEBUG 49236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,917]DEBUG 49236[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,918]DEBUG 49237[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,918]DEBUG 49237[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,919]DEBUG 49238[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,920]DEBUG 49239[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,920]DEBUG 49239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,921]DEBUG 49240[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,921]DEBUG 49240[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,921]DEBUG 49240[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,921]DEBUG 49240[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,922]DEBUG 49241[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,923]DEBUG 49242[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,924]DEBUG 49243[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,924]DEBUG 49243[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,924]DEBUG 49243[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,924]DEBUG 49243[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,925]DEBUG 49244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,926]DEBUG 49245[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,927]DEBUG 49246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,927]DEBUG 49246[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,927]DEBUG 49246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,927]DEBUG 49246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,927]DEBUG 49246[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,928]DEBUG 49247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-29 16:51:07,928]DEBUG 49247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-29 16:51:07,928]DEBUG 49247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-29 16:51:07,928]DEBUG 49247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,928]DEBUG 49247[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,929]DEBUG 49248[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,929]DEBUG 49248[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,930]DEBUG 49249[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,930]DEBUG 49249[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@651e83ba]
[2018-05-29 16:51:07,930]DEBUG 49249[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,932]DEBUG 49251[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,932]DEBUG 49251[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,932]DEBUG 49251[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@651e83ba] after transaction
[2018-05-29 16:51:07,932]DEBUG 49251[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,932]DEBUG 49251[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,933]DEBUG 49252[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,933] INFO 49252[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-29 16:51:07,933]DEBUG 49252[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3d837395, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,934]DEBUG 49253[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,934]DEBUG 49253[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:07,934]DEBUG 49253[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:07,934]DEBUG 49253[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:07,935]DEBUG 49254[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:07,935]DEBUG 49254[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:07,935]DEBUG 49254[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:07,935]DEBUG 49254[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:07,935]DEBUG 49254[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:07,936]DEBUG 49255[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:07,937]DEBUG 49256[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:07,937]DEBUG 49256[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:07,939]DEBUG 49258[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:07,939]DEBUG 49258[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:07,939]DEBUG 49258[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:07,939]DEBUG 49258[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:07,940]DEBUG 49259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:07,940]DEBUG 49259[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:07,940]DEBUG 49259[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c]
[2018-05-29 16:51:07,940]DEBUG 49259[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270679
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7cad2eea] for Hibernate transaction
[2018-05-29 16:51:07,941]DEBUG 49260[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cad2eea]
[2018-05-29 16:51:07,942]DEBUG 49261[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:07,942]DEBUG 49261[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:07,942]DEBUG 49261[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:07,942]DEBUG 49261[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:07,942] INFO 49261[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@1a49265c]; rollback [true]
[2018-05-29 16:51:07,942]DEBUG 49261[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,943]DEBUG 49262[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,943]DEBUG 49262[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,944]DEBUG 49263[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2018-05-29 16:51:07,944]DEBUG 49263[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,945]DEBUG 49264[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,945]DEBUG 49264[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,945]DEBUG 49264[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,946]DEBUG 49265[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2018-05-29 16:51:07,947]DEBUG 49266[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,947]DEBUG 49266[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:07,947]DEBUG 49266[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,948]DEBUG 49267[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-29 16:51:07,949]DEBUG 49268[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2018-05-29 16:51:07,949]DEBUG 49268[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,949]DEBUG 49268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,950]DEBUG 49269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,951]DEBUG 49270[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,951]DEBUG 49270[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:07,952]DEBUG 49271[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,952]DEBUG 49271[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,952]DEBUG 49271[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,953]DEBUG 49272[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,954]DEBUG 49273[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,954]DEBUG 49273[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:07,956]DEBUG 49275[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,956]DEBUG 49275[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,957]DEBUG 49276[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,957]DEBUG 49276[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,957]DEBUG 49276[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,957]DEBUG 49276[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,957]DEBUG 49276[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,958]DEBUG 49277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,958]DEBUG 49277[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,958]DEBUG 49277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,958]DEBUG 49277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:07,959]DEBUG 49278[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,959]DEBUG 49278[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,960]DEBUG 49279[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,961]DEBUG 49280[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,961]DEBUG 49280[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,961]DEBUG 49280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:07,962]DEBUG 49281[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,962]DEBUG 49281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,962]DEBUG 49281[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,963]DEBUG 49282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,963]DEBUG 49282[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,963]DEBUG 49282[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,963]DEBUG 49282[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,965]DEBUG 49284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,965]DEBUG 49284[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,965]DEBUG 49284[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,965]DEBUG 49284[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:07,967]DEBUG 49286[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,967]DEBUG 49286[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,967]DEBUG 49286[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,967]DEBUG 49286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,967]DEBUG 49286[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,968]DEBUG 49287[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,968]DEBUG 49287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,968]DEBUG 49287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,968]DEBUG 49287[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,968]DEBUG 49287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,969]DEBUG 49288[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:07,970]DEBUG 49289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,970]DEBUG 49289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,970]DEBUG 49289[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,970]DEBUG 49289[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,970]DEBUG 49289[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,971]DEBUG 49290[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:07,972]DEBUG 49291[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,973]DEBUG 49292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,973]DEBUG 49292[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,973]DEBUG 49292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,973]DEBUG 49292[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,974]DEBUG 49293[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:07,975]DEBUG 49294[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,976]DEBUG 49295[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:07,976]DEBUG 49295[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:07,976]DEBUG 49295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-29 16:51:07,976]DEBUG 49295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:07,976]DEBUG 49295[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:07,977]DEBUG 49296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-29 16:51:07,977]DEBUG 49296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-29 16:51:07,977]DEBUG 49296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-29 16:51:07,977]DEBUG 49296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:07,977]DEBUG 49296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:07,978]DEBUG 49297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:07,978]DEBUG 49297[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:07,979]DEBUG 49298[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:07,979]DEBUG 49298[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cad2eea]
[2018-05-29 16:51:07,979]DEBUG 49298[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:07,981]DEBUG 49300[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:07,982]DEBUG 49301[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,982]DEBUG 49301[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cad2eea] after transaction
[2018-05-29 16:51:07,982]DEBUG 49301[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:07,982]DEBUG 49301[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:07,982]DEBUG 49301[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:07,982] INFO 49301[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:07,983]DEBUG 49302[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4c41963c, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:07,983]DEBUG 49302[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@10c58a51 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-29 16:51:07,984]DEBUG 49303[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest].
[2018-05-29 16:51:07,985] INFO 49304[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: using defaults.
[2018-05-29 16:51:07,985]DEBUG 49304[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,985]DEBUG 49304[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,987]DEBUG 49306[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,987]DEBUG 49306[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,987]DEBUG 49306[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,987]DEBUG 49306[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,990]DEBUG 49309[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,990]DEBUG 49309[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:07,990]DEBUG 49309[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,001]DEBUG 49320[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,002]DEBUG 49321[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,004]DEBUG 49323[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,004]DEBUG 49323[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,004]DEBUG 49323[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,004]DEBUG 49323[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,005]DEBUG 49324[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,005]DEBUG 49324[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'customerTypeDao'
[2018-05-29 16:51:08,005]DEBUG 49324[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,006]DEBUG 49325[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,006]DEBUG 49325[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'dimensionDao'
[2018-05-29 16:51:08,006]DEBUG 49325[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,007]DEBUG 49326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,007]DEBUG 49326[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderDao'
[2018-05-29 16:51:08,007]DEBUG 49326[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,007]DEBUG 49326[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,007]DEBUG 49326[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderItemDao'
[2018-05-29 16:51:08,008]DEBUG 49327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,008]DEBUG 49327[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,008]DEBUG 49327[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderStatusDao'
[2018-05-29 16:51:08,008]DEBUG 49327[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,009]DEBUG 49328[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,009]DEBUG 49328[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'productDao'
[2018-05-29 16:51:08,009]DEBUG 49328[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,010]DEBUG 49329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,010]DEBUG 49329[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'regionDao'
[2018-05-29 16:51:08,010]DEBUG 49329[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,010]DEBUG 49329[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,010]DEBUG 49329[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'roleDao'
[2018-05-29 16:51:08,011]DEBUG 49330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,011]DEBUG 49330[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,011]DEBUG 49330[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'userDao'
[2018-05-29 16:51:08,011]DEBUG 49330[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,012]DEBUG 49331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,012]DEBUG 49331[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'sessionFactory'
[2018-05-29 16:51:08,012]DEBUG 49331[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,013]DEBUG 49332[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,013]DEBUG 49332[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,013]DEBUG 49332[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954]
[2018-05-29 16:51:08,014]DEBUG 49333[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.setUp()
[2018-05-29 16:51:08,014]DEBUG 49333[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,014]DEBUG 49333[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.tearDown() throws java.lang.Exception
[2018-05-29 16:51:08,015]DEBUG 49334[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,015]DEBUG 49334[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterions()
[2018-05-29 16:51:08,016]DEBUG 49335[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,016]DEBUG 49335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByID()
[2018-05-29 16:51:08,016]DEBUG 49335[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,016]DEBUG 49335[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterions()
[2018-05-29 16:51:08,017]DEBUG 49336[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,017]DEBUG 49336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testInsertOrUpdate()
[2018-05-29 16:51:08,017]DEBUG 49336[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,017]DEBUG 49336[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testDelete()
[2018-05-29 16:51:08,017]DEBUG 49336[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,018]DEBUG 49337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetCustomerRole()
[2018-05-29 16:51:08,018]DEBUG 49337[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,018]DEBUG 49337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetMerchandiserRole()
[2018-05-29 16:51:08,018]DEBUG 49337[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,018]DEBUG 49337[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetSupervisorRole()
[2018-05-29 16:51:08,019]DEBUG 49338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,019]DEBUG 49338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleName()
[2018-05-29 16:51:08,019]DEBUG 49338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,019]DEBUG 49338[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testContainsRole()
[2018-05-29 16:51:08,019]DEBUG 49338[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,020]DEBUG 49339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterionsSorting()
[2018-05-29 16:51:08,020]DEBUG 49339[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,020]DEBUG 49339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterionsSorting()
[2018-05-29 16:51:08,020]DEBUG 49339[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,020]DEBUG 49339[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditions()
[2018-05-29 16:51:08,021]DEBUG 49340[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,021]DEBUG 49340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditionsSorting()
[2018-05-29 16:51:08,021]DEBUG 49340[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,021]DEBUG 49340[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetAdminRole()
[2018-05-29 16:51:08,022]DEBUG 49341[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,022]DEBUG 49341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-29 16:51:08,022]DEBUG 49341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-29 16:51:08,022]DEBUG 49341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-29 16:51:08,022]DEBUG 49341[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-29 16:51:08,089]DEBUG 49408[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-29 16:51:08,089]DEBUG 49408[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-29 16:51:08,090]DEBUG 49409[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-29 16:51:08,090]DEBUG 49409[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-29 16:51:08,090]DEBUG 49409[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-29 16:51:08,090]DEBUG 49409[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-29 16:51:08,091]DEBUG 49410[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-29 16:51:08,091]DEBUG 49410[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-29 16:51:08,091]DEBUG 49410[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-29 16:51:08,092]DEBUG 49411[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-29 16:51:08,092]DEBUG 49411[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-29 16:51:08,092]DEBUG 49411[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-29 16:51:08,092]DEBUG 49411[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-29 16:51:08,093]DEBUG 49412[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,093]DEBUG 49412[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,093]DEBUG 49412[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-29 16:51:08,093]DEBUG 49412[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,094]DEBUG 49413[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,094]DEBUG 49413[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-29 16:51:08,094]DEBUG 49413[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-29 16:51:08,094]DEBUG 49413[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-29 16:51:08,095]DEBUG 49414[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-29 16:51:08,095]DEBUG 49414[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-29 16:51:08,095]DEBUG 49414[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-29 16:51:08,095]DEBUG 49414[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-29 16:51:08,096]DEBUG 49415[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-29 16:51:08,096]DEBUG 49415[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-29 16:51:08,096]DEBUG 49415[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,096]DEBUG 49415[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-29 16:51:08,097]DEBUG 49416[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:08,097]DEBUG 49416[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-29 16:51:08,097]DEBUG 49416[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-29 16:51:08,097]DEBUG 49416[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-29 16:51:08,098]DEBUG 49417[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-29 16:51:08,098]DEBUG 49417[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-29 16:51:08,133]DEBUG 49452[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,134]DEBUG 49453[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,134]DEBUG 49453[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,134]DEBUG 49453[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@14af193f transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,135]DEBUG 49454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,135]DEBUG 49454[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,136]DEBUG 49455[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270681
[2018-05-29 16:51:08,136]DEBUG 49455[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@480ae916] for Hibernate transaction
[2018-05-29 16:51:08,136]DEBUG 49455[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@480ae916]
[2018-05-29 16:51:08,136]DEBUG 49455[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,137]DEBUG 49456[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,137]DEBUG 49456[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,137]DEBUG 49456[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,137] INFO 49456[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,138]DEBUG 49457[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,138]DEBUG 49457[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,138]DEBUG 49457[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,140]DEBUG 49459[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:08,141]DEBUG 49460[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,141]DEBUG 49460[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,142]DEBUG 49461[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,142]DEBUG 49461[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,144]DEBUG 49463[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:08,144]DEBUG 49463[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,145]DEBUG 49464[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,145]DEBUG 49464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,145]DEBUG 49464[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,147]DEBUG 49466[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:08,148]DEBUG 49467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,148]DEBUG 49467[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,149]DEBUG 49468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,149]DEBUG 49468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,154]DEBUG 49473[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:08,155]DEBUG 49474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,245]DEBUG 49564[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,246]DEBUG 49565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,247]DEBUG 49566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,248]DEBUG 49567[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,248]DEBUG 49567[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,249]DEBUG 49568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2018-05-29 16:51:08,249]DEBUG 49568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2018-05-29 16:51:08,250]DEBUG 49569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2018-05-29 16:51:08,250]DEBUG 49569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2018-05-29 16:51:08,251]DEBUG 49570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,251]DEBUG 49570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=? and this_.ID<=?
[2018-05-29 16:51:08,255]DEBUG 49574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,255]DEBUG 49574[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,256]DEBUG 49575[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,257]DEBUG 49576[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,258]DEBUG 49577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,258]DEBUG 49577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,259]DEBUG 49578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,259]DEBUG 49578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,260]DEBUG 49579[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,260]DEBUG 49579[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2018-05-29 16:51:08,261]DEBUG 49580[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2018-05-29 16:51:08,261]DEBUG 49580[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2018-05-29 16:51:08,261]DEBUG 49580[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2018-05-29 16:51:08,262]DEBUG 49581[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,262]DEBUG 49581[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,265]DEBUG 49584[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,265]DEBUG 49584[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,266]DEBUG 49585[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,266]DEBUG 49585[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@480ae916]
[2018-05-29 16:51:08,267]DEBUG 49586[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,326]DEBUG 49645[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,326]DEBUG 49645[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,327]DEBUG 49646[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@480ae916] after transaction
[2018-05-29 16:51:08,328]DEBUG 49647[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,328]DEBUG 49647[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,329]DEBUG 49648[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,330] INFO 49649[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,331]DEBUG 49650[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@549ba954, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,332]DEBUG 49651[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,333]DEBUG 49652[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,334]DEBUG 49653[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,334]DEBUG 49653[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,335]DEBUG 49654[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,335]DEBUG 49654[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,335]DEBUG 49654[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,336]DEBUG 49655[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,336]DEBUG 49655[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,337]DEBUG 49656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,338]DEBUG 49657[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,338]DEBUG 49657[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,338]DEBUG 49657[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,339]DEBUG 49658[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,339]DEBUG 49658[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,340]DEBUG 49659[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,340]DEBUG 49659[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,340]DEBUG 49659[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,341]DEBUG 49660[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,341]DEBUG 49660[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,342]DEBUG 49661[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,342]DEBUG 49661[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,342]DEBUG 49661[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,343]DEBUG 49662[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,344]DEBUG 49663[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,345]DEBUG 49664[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9]
[2018-05-29 16:51:08,346]DEBUG 49665[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,347]DEBUG 49666[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,347]DEBUG 49666[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,350]DEBUG 49669[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,351]DEBUG 49670[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270683
[2018-05-29 16:51:08,351]DEBUG 49670[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@44aca693] for Hibernate transaction
[2018-05-29 16:51:08,352]DEBUG 49671[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44aca693]
[2018-05-29 16:51:08,352]DEBUG 49671[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,353]DEBUG 49672[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,353]DEBUG 49672[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,354]DEBUG 49673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,354] INFO 49673[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,355]DEBUG 49674[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,355]DEBUG 49674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,356]DEBUG 49675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,360]DEBUG 49679[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:08,361]DEBUG 49680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,363]DEBUG 49682[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,363]DEBUG 49682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,371]DEBUG 49690[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,374]DEBUG 49693[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:08,375]DEBUG 49694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,376]DEBUG 49695[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,377]DEBUG 49696[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,378]DEBUG 49697[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,379]DEBUG 49698[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:08,380]DEBUG 49699[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,381]DEBUG 49700[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,381]DEBUG 49700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,381]DEBUG 49700[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,396]DEBUG 49715[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-29 16:51:08,396]DEBUG 49715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,398]DEBUG 49717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,398]DEBUG 49717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,398]DEBUG 49717[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,399]DEBUG 49718[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,399]DEBUG 49718[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,399]DEBUG 49718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2018-05-29 16:51:08,400]DEBUG 49719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2018-05-29 16:51:08,400]DEBUG 49719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2018-05-29 16:51:08,400]DEBUG 49719[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2018-05-29 16:51:08,401]DEBUG 49720[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,401]DEBUG 49720[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-29 16:51:08,410]DEBUG 49729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,411]DEBUG 49730[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#5]
[2018-05-29 16:51:08,411]DEBUG 49730[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#6]
[2018-05-29 16:51:08,411]DEBUG 49730[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#7]
[2018-05-29 16:51:08,412]DEBUG 49731[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#8]
[2018-05-29 16:51:08,412]DEBUG 49731[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,412]DEBUG 49731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,412]DEBUG 49731[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2018-05-29 16:51:08,413]DEBUG 49732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2018-05-29 16:51:08,414]DEBUG 49733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2018-05-29 16:51:08,414]DEBUG 49733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2018-05-29 16:51:08,414]DEBUG 49733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,414]DEBUG 49733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,415]DEBUG 49734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,416]DEBUG 49735[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,416]DEBUG 49735[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,416]DEBUG 49735[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44aca693]
[2018-05-29 16:51:08,416]DEBUG 49735[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,509]DEBUG 49828[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,510]DEBUG 49829[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,510]DEBUG 49829[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@44aca693] after transaction
[2018-05-29 16:51:08,511]DEBUG 49830[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,511]DEBUG 49830[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,512]DEBUG 49831[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,512] INFO 49831[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,514]DEBUG 49833[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3c611cc9, testMethod = testFindByID@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,515]DEBUG 49834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,515]DEBUG 49834[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,516]DEBUG 49835[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,517]DEBUG 49836[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,517]DEBUG 49836[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,518]DEBUG 49837[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,518]DEBUG 49837[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,519]DEBUG 49838[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,519]DEBUG 49838[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,520]DEBUG 49839[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,520]DEBUG 49839[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,521]DEBUG 49840[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,522]DEBUG 49841[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,522]DEBUG 49841[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,523]DEBUG 49842[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,523]DEBUG 49842[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,523]DEBUG 49842[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,524]DEBUG 49843[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,524]DEBUG 49843[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,525]DEBUG 49844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,525]DEBUG 49844[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,525]DEBUG 49844[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,526]DEBUG 49845[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,527]DEBUG 49846[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,527]DEBUG 49846[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,528]DEBUG 49847[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b]
[2018-05-29 16:51:08,529]DEBUG 49848[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,531]DEBUG 49850[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,537]DEBUG 49856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,539]DEBUG 49858[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,539]DEBUG 49858[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270685
[2018-05-29 16:51:08,540]DEBUG 49859[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@718d1b03] for Hibernate transaction
[2018-05-29 16:51:08,540]DEBUG 49859[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@718d1b03]
[2018-05-29 16:51:08,540]DEBUG 49859[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,541]DEBUG 49860[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,541]DEBUG 49860[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,542]DEBUG 49861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,542] INFO 49861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,542]DEBUG 49861[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,543]DEBUG 49862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,543]DEBUG 49862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,552]DEBUG 49871[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-29 16:51:08,552]DEBUG 49871[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,553]DEBUG 49872[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,553]DEBUG 49872[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,554]DEBUG 49873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,556]DEBUG 49875[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-29 16:51:08,557]DEBUG 49876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,557]DEBUG 49876[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,558]DEBUG 49877[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,558]DEBUG 49877[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,560]DEBUG 49879[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-29 16:51:08,560]DEBUG 49879[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,561]DEBUG 49880[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,561]DEBUG 49880[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,561]DEBUG 49880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,563]DEBUG 49882[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-29 16:51:08,564]DEBUG 49883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,565]DEBUG 49884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,565]DEBUG 49884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,566]DEBUG 49885[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,566]DEBUG 49885[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,566]DEBUG 49885[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,566]DEBUG 49885[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2018-05-29 16:51:08,567]DEBUG 49886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2018-05-29 16:51:08,567]DEBUG 49886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2018-05-29 16:51:08,567]DEBUG 49886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2018-05-29 16:51:08,567]DEBUG 49886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,568]DEBUG 49887[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where (this_.RoleName like ? or this_.ID<=?)
[2018-05-29 16:51:08,570]DEBUG 49889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,570]DEBUG 49889[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#9]
[2018-05-29 16:51:08,571]DEBUG 49890[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#10]
[2018-05-29 16:51:08,571]DEBUG 49890[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#11]
[2018-05-29 16:51:08,572]DEBUG 49891[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#12]
[2018-05-29 16:51:08,572]DEBUG 49891[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,572]DEBUG 49891[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,573]DEBUG 49892[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,573]DEBUG 49892[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,574]DEBUG 49893[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,574]DEBUG 49893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,574]DEBUG 49893[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,575]DEBUG 49894[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,575]DEBUG 49894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2018-05-29 16:51:08,575]DEBUG 49894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2018-05-29 16:51:08,575]DEBUG 49894[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2018-05-29 16:51:08,576]DEBUG 49895[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2018-05-29 16:51:08,576]DEBUG 49895[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,576]DEBUG 49895[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,578]DEBUG 49897[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,578]DEBUG 49897[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,579]DEBUG 49898[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,579]DEBUG 49898[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@718d1b03]
[2018-05-29 16:51:08,579]DEBUG 49898[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,581]DEBUG 49900[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,582]DEBUG 49901[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,582]DEBUG 49901[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@718d1b03] after transaction
[2018-05-29 16:51:08,582]DEBUG 49901[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,583]DEBUG 49902[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,583]DEBUG 49902[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,584] INFO 49903[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,584]DEBUG 49903[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2241ba0b, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,585]DEBUG 49904[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,585]DEBUG 49904[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,586]DEBUG 49905[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,586]DEBUG 49905[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,586]DEBUG 49905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,586]DEBUG 49905[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,587]DEBUG 49906[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,587]DEBUG 49906[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,587]DEBUG 49906[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,614]DEBUG 49933[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,615]DEBUG 49934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,616]DEBUG 49935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,617]DEBUG 49936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,617]DEBUG 49936[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,617]DEBUG 49936[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7]
[2018-05-29 16:51:08,617]DEBUG 49936[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,617]DEBUG 49936[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,618]DEBUG 49937[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,618]DEBUG 49937[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,618]DEBUG 49937[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270686
[2018-05-29 16:51:08,618]DEBUG 49937[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3726e4c4] for Hibernate transaction
[2018-05-29 16:51:08,618]DEBUG 49937[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3726e4c4]
[2018-05-29 16:51:08,619]DEBUG 49938[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,619]DEBUG 49938[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,619]DEBUG 49938[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,619]DEBUG 49938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,619] INFO 49938[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,619]DEBUG 49938[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,620]DEBUG 49939[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,620]DEBUG 49939[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,622]DEBUG 49941[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-29 16:51:08,622]DEBUG 49941[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,623]DEBUG 49942[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,623]DEBUG 49942[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,623]DEBUG 49942[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,625]DEBUG 49944[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-29 16:51:08,625]DEBUG 49944[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,625]DEBUG 49944[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,625]DEBUG 49944[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,626]DEBUG 49945[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,627]DEBUG 49946[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2018-05-29 16:51:08,627]DEBUG 49946[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,627]DEBUG 49946[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,628]DEBUG 49947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,628]DEBUG 49947[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,629]DEBUG 49948[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2018-05-29 16:51:08,629]DEBUG 49948[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,630]DEBUG 49949[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,630]DEBUG 49949[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,630]DEBUG 49949[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,631]DEBUG 49950[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2018-05-29 16:51:08,632]DEBUG 49951[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,632]DEBUG 49951[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,632]DEBUG 49951[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2018-05-29 16:51:08,633]DEBUG 49952[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2018-05-29 16:51:08,634]DEBUG 49953[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2018-05-29 16:51:08,634]DEBUG 49953[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,634]DEBUG 49953[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-29 16:51:08,635]DEBUG 49954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,635]DEBUG 49954[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#13]
[2018-05-29 16:51:08,636]DEBUG 49955[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#14]
[2018-05-29 16:51:08,636]DEBUG 49955[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#15]
[2018-05-29 16:51:08,636]DEBUG 49955[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#16]
[2018-05-29 16:51:08,636]DEBUG 49955[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#17]
[2018-05-29 16:51:08,636]DEBUG 49955[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,637]DEBUG 49956[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,637]DEBUG 49956[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,637]DEBUG 49956[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,637]DEBUG 49956[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,638]DEBUG 49957[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:08,638]DEBUG 49957[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,640]DEBUG 49959[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,640]DEBUG 49959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2018-05-29 16:51:08,640]DEBUG 49959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2018-05-29 16:51:08,640]DEBUG 49959[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2018-05-29 16:51:08,641]DEBUG 49960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2018-05-29 16:51:08,641]DEBUG 49960[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2018-05-29 16:51:08,641]DEBUG 49960[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,641]DEBUG 49960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,642]DEBUG 49961[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,642]DEBUG 49961[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,643]DEBUG 49962[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,643]DEBUG 49962[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3726e4c4]
[2018-05-29 16:51:08,643]DEBUG 49962[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,660]DEBUG 49979[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,660]DEBUG 49979[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,661]DEBUG 49980[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3726e4c4] after transaction
[2018-05-29 16:51:08,661]DEBUG 49980[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,661]DEBUG 49980[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,661]DEBUG 49980[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,661] INFO 49980[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,662]DEBUG 49981[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7ac4a6c7, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,662]DEBUG 49981[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,662]DEBUG 49981[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,662]DEBUG 49981[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,663]DEBUG 49982[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,663]DEBUG 49982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,663]DEBUG 49982[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,663]DEBUG 49982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,663]DEBUG 49982[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,664]DEBUG 49983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,664]DEBUG 49983[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,664]DEBUG 49983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,664]DEBUG 49983[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,664]DEBUG 49983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,665]DEBUG 49984[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,666]DEBUG 49985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,666]DEBUG 49985[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,666]DEBUG 49985[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,666]DEBUG 49985[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2]
[2018-05-29 16:51:08,667]DEBUG 49986[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,667]DEBUG 49986[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,667]DEBUG 49986[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,667]DEBUG 49986[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,667]DEBUG 49986[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270686
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@26eeb777] for Hibernate transaction
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26eeb777]
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,668]DEBUG 49987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,668] INFO 49987[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,669]DEBUG 49988[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,669]DEBUG 49988[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,669]DEBUG 49988[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,670]DEBUG 49989[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2018-05-29 16:51:08,671]DEBUG 49990[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,671]DEBUG 49990[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,671]DEBUG 49990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,671]DEBUG 49990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,673]DEBUG 49992[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2018-05-29 16:51:08,673]DEBUG 49992[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,673]DEBUG 49992[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,674]DEBUG 49993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,674]DEBUG 49993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,675]DEBUG 49994[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2018-05-29 16:51:08,675]DEBUG 49994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,676]DEBUG 49995[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,676]DEBUG 49995[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,677]DEBUG 49996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,678]DEBUG 49997[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2018-05-29 16:51:08,678]DEBUG 49997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,678]DEBUG 49997[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,679]DEBUG 49998[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,679]DEBUG 49998[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,680]DEBUG 49999[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2018-05-29 16:51:08,682]DEBUG 50001[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,683]DEBUG 50002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,683]DEBUG 50002[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,683]DEBUG 50002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=22, roleName=tempRole}
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2018-05-29 16:51:08,684]DEBUG 50003[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:08,685]DEBUG 50004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,685]DEBUG 50004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-29 16:51:08,685]DEBUG 50004[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:08,686]DEBUG 50005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,687]DEBUG 50006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,687]DEBUG 50006[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-29 16:51:08,688]DEBUG 50007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,689]DEBUG 50008[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#18]
[2018-05-29 16:51:08,689]DEBUG 50008[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#19]
[2018-05-29 16:51:08,689]DEBUG 50008[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#20]
[2018-05-29 16:51:08,689]DEBUG 50008[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#21]
[2018-05-29 16:51:08,690]DEBUG 50009[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,690]DEBUG 50009[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,690]DEBUG 50009[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,690]DEBUG 50009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,690]DEBUG 50009[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2018-05-29 16:51:08,691]DEBUG 50010[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,692]DEBUG 50011[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,693]DEBUG 50012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,693]DEBUG 50012[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,693]DEBUG 50012[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,694]DEBUG 50013[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26eeb777]
[2018-05-29 16:51:08,694]DEBUG 50013[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,792]DEBUG 50111[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,793]DEBUG 50112[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,793]DEBUG 50112[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@26eeb777] after transaction
[2018-05-29 16:51:08,794]DEBUG 50113[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,794]DEBUG 50113[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,795]DEBUG 50114[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,795] INFO 50114[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,797]DEBUG 50116[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@2e930ab2, testMethod = testDelete@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,798]DEBUG 50117[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,798]DEBUG 50117[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,799]DEBUG 50118[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,800]DEBUG 50119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,800]DEBUG 50119[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,800]DEBUG 50119[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,801]DEBUG 50120[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,801]DEBUG 50120[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,802]DEBUG 50121[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,802]DEBUG 50121[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,803]DEBUG 50122[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,804]DEBUG 50123[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,804]DEBUG 50123[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,805]DEBUG 50124[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,805]DEBUG 50124[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,806]DEBUG 50125[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,806]DEBUG 50125[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,807]DEBUG 50126[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,807]DEBUG 50126[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,808]DEBUG 50127[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,808]DEBUG 50127[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,809]DEBUG 50128[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,809]DEBUG 50128[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,810]DEBUG 50129[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,811]DEBUG 50130[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,811]DEBUG 50130[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34]
[2018-05-29 16:51:08,812]DEBUG 50131[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,813]DEBUG 50132[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,814]DEBUG 50133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,816]DEBUG 50135[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetCustomerRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,816]DEBUG 50135[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270688
[2018-05-29 16:51:08,817]DEBUG 50136[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@2a6e67f7] for Hibernate transaction
[2018-05-29 16:51:08,817]DEBUG 50136[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a6e67f7]
[2018-05-29 16:51:08,818]DEBUG 50137[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,818]DEBUG 50137[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,818]DEBUG 50137[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,819]DEBUG 50138[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,826] INFO 50145[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,827]DEBUG 50146[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,828]DEBUG 50147[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,829]DEBUG 50148[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,832]DEBUG 50151[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2018-05-29 16:51:08,833]DEBUG 50152[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,834]DEBUG 50153[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,834]DEBUG 50153[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,835]DEBUG 50154[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,837]DEBUG 50156[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2018-05-29 16:51:08,837]DEBUG 50156[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,838]DEBUG 50157[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,838]DEBUG 50157[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,839]DEBUG 50158[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,841]DEBUG 50160[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2018-05-29 16:51:08,841]DEBUG 50160[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,842]DEBUG 50161[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,843]DEBUG 50162[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,844]DEBUG 50163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,846]DEBUG 50165[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2018-05-29 16:51:08,847]DEBUG 50166[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,848]DEBUG 50167[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,849]DEBUG 50168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,849]DEBUG 50168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,850]DEBUG 50169[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,850]DEBUG 50169[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,850]DEBUG 50169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-29 16:51:08,850]DEBUG 50169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-29 16:51:08,851]DEBUG 50170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-29 16:51:08,851]DEBUG 50170[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-29 16:51:08,852]DEBUG 50171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,852]DEBUG 50171[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,854]DEBUG 50173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,855]DEBUG 50174[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#25]
[2018-05-29 16:51:08,856]DEBUG 50175[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,856]DEBUG 50175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,857]DEBUG 50176[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,858]DEBUG 50177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,858]DEBUG 50177[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,858]DEBUG 50177[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,859]DEBUG 50178[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,859]DEBUG 50178[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,859]DEBUG 50178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-29 16:51:08,859]DEBUG 50178[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-29 16:51:08,860]DEBUG 50179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-29 16:51:08,860]DEBUG 50179[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-29 16:51:08,860]DEBUG 50179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,861]DEBUG 50180[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,863]DEBUG 50182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,863]DEBUG 50182[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#25]
[2018-05-29 16:51:08,864]DEBUG 50183[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,864]DEBUG 50183[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,865]DEBUG 50184[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,865]DEBUG 50184[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-29 16:51:08,866]DEBUG 50185[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-29 16:51:08,867]DEBUG 50186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-29 16:51:08,867]DEBUG 50186[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-29 16:51:08,867]DEBUG 50186[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:08,867]DEBUG 50186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,867]DEBUG 50186[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-29 16:51:08,868]DEBUG 50187[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:08,869]DEBUG 50188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,869]DEBUG 50188[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,869]DEBUG 50188[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,871]DEBUG 50190[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,871]DEBUG 50190[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,871]DEBUG 50190[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,871]DEBUG 50190[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,872]DEBUG 50191[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,872]DEBUG 50191[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,872]DEBUG 50191[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,874]DEBUG 50193[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2018-05-29 16:51:08,874]DEBUG 50193[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,876]DEBUG 50195[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,877]DEBUG 50196[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,877]DEBUG 50196[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,877]DEBUG 50196[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,877]DEBUG 50196[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,877]DEBUG 50196[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-29 16:51:08,878]DEBUG 50197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-29 16:51:08,878]DEBUG 50197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-29 16:51:08,878]DEBUG 50197[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=27, roleName=Customer}
[2018-05-29 16:51:08,878]DEBUG 50197[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,878]DEBUG 50197[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,879]DEBUG 50198[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,880]DEBUG 50199[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,880]DEBUG 50199[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,880]DEBUG 50199[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a6e67f7]
[2018-05-29 16:51:08,880]DEBUG 50199[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,882]DEBUG 50201[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,882]DEBUG 50201[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,883]DEBUG 50202[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a6e67f7] after transaction
[2018-05-29 16:51:08,883]DEBUG 50202[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,883]DEBUG 50202[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,883]DEBUG 50202[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,884] INFO 50203[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,884]DEBUG 50203[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@33bb9f34, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,885]DEBUG 50204[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,885]DEBUG 50204[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,885]DEBUG 50204[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,885]DEBUG 50204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,885]DEBUG 50204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,886]DEBUG 50205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,887]DEBUG 50206[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,888]DEBUG 50207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,889]DEBUG 50208[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,889]DEBUG 50208[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,889]DEBUG 50208[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3]
[2018-05-29 16:51:08,890]DEBUG 50209[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,890]DEBUG 50209[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,890]DEBUG 50209[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetMerchandiserRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270688
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4c3cafba] for Hibernate transaction
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c3cafba]
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,891]DEBUG 50210[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,892]DEBUG 50211[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,892]DEBUG 50211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,892] INFO 50211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,892]DEBUG 50211[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,892]DEBUG 50211[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,893]DEBUG 50212[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,894]DEBUG 50213[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2018-05-29 16:51:08,895]DEBUG 50214[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,895]DEBUG 50214[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,895]DEBUG 50214[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,896]DEBUG 50215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,897]DEBUG 50216[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2018-05-29 16:51:08,897]DEBUG 50216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,898]DEBUG 50217[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,898]DEBUG 50217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,898]DEBUG 50217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,899]DEBUG 50218[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2018-05-29 16:51:08,900]DEBUG 50219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,900]DEBUG 50219[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,900]DEBUG 50219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,901]DEBUG 50220[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,905]DEBUG 50224[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2018-05-29 16:51:08,906]DEBUG 50225[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,906]DEBUG 50225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,907]DEBUG 50226[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,909]DEBUG 50228[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,910]DEBUG 50229[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,910]DEBUG 50229[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,910]DEBUG 50229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-29 16:51:08,910]DEBUG 50229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-29 16:51:08,910]DEBUG 50229[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-29 16:51:08,911]DEBUG 50230[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-29 16:51:08,911]DEBUG 50230[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,911]DEBUG 50230[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,912]DEBUG 50231[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,913]DEBUG 50232[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#31]
[2018-05-29 16:51:08,913]DEBUG 50232[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,913]DEBUG 50232[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,914]DEBUG 50233[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,914]DEBUG 50233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,914]DEBUG 50233[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-29 16:51:08,915]DEBUG 50234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-29 16:51:08,916]DEBUG 50235[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,916]DEBUG 50235[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,917]DEBUG 50236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,918]DEBUG 50237[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#31]
[2018-05-29 16:51:08,918]DEBUG 50237[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,918]DEBUG 50237[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,919]DEBUG 50238[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,919]DEBUG 50238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-29 16:51:08,920]DEBUG 50239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-29 16:51:08,921]DEBUG 50240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-29 16:51:08,921]DEBUG 50240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-29 16:51:08,921]DEBUG 50240[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:08,921]DEBUG 50240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,921]DEBUG 50240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-29 16:51:08,922]DEBUG 50241[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:08,923]DEBUG 50242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,923]DEBUG 50242[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,924]DEBUG 50243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,925]DEBUG 50244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,925]DEBUG 50244[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,925]DEBUG 50244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,926]DEBUG 50245[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,926]DEBUG 50245[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,926]DEBUG 50245[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,926]DEBUG 50245[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,928]DEBUG 50247[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2018-05-29 16:51:08,928]DEBUG 50247[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,929]DEBUG 50248[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=32, roleName=Merchandiser}
[2018-05-29 16:51:08,930]DEBUG 50249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-29 16:51:08,930]DEBUG 50249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-29 16:51:08,930]DEBUG 50249[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-29 16:51:08,930]DEBUG 50249[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,930]DEBUG 50249[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,932]DEBUG 50251[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,932]DEBUG 50251[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,932]DEBUG 50251[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,932]DEBUG 50251[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c3cafba]
[2018-05-29 16:51:08,932]DEBUG 50251[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:08,935]DEBUG 50254[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:08,935]DEBUG 50254[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,935]DEBUG 50254[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c3cafba] after transaction
[2018-05-29 16:51:08,936]DEBUG 50255[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:08,936]DEBUG 50255[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:08,936]DEBUG 50255[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:08,936] INFO 50255[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,937]DEBUG 50256[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6b95b8d3, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:08,937]DEBUG 50256[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,937]DEBUG 50256[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:08,937]DEBUG 50256[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:08,937]DEBUG 50256[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:08,938]DEBUG 50257[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:08,940]DEBUG 50259[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:08,941]DEBUG 50260[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:08,942]DEBUG 50261[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9]
[2018-05-29 16:51:08,943]DEBUG 50262[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,943]DEBUG 50262[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,943]DEBUG 50262[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:08,944]DEBUG 50263[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSupervisorRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:08,944]DEBUG 50263[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270689
[2018-05-29 16:51:08,944]DEBUG 50263[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4b857d5e] for Hibernate transaction
[2018-05-29 16:51:08,945]DEBUG 50264[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b857d5e]
[2018-05-29 16:51:08,945]DEBUG 50264[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:08,945]DEBUG 50264[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:08,945]DEBUG 50264[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:08,945]DEBUG 50264[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,946] INFO 50265[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:08,946]DEBUG 50265[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,946]DEBUG 50265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,946]DEBUG 50265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,957]DEBUG 50276[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2018-05-29 16:51:08,957]DEBUG 50276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,958]DEBUG 50277[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,958]DEBUG 50277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,958]DEBUG 50277[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,959]DEBUG 50278[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2018-05-29 16:51:08,960]DEBUG 50279[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,960]DEBUG 50279[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,960]DEBUG 50279[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,961]DEBUG 50280[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,962]DEBUG 50281[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2018-05-29 16:51:08,962]DEBUG 50281[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,962]DEBUG 50281[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,963]DEBUG 50282[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,963]DEBUG 50282[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,964]DEBUG 50283[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2018-05-29 16:51:08,964]DEBUG 50283[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,965]DEBUG 50284[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,965]DEBUG 50284[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,965]DEBUG 50284[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,965]DEBUG 50284[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,965]DEBUG 50284[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,966]DEBUG 50285[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,968]DEBUG 50287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,968]DEBUG 50287[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#34]
[2018-05-29 16:51:08,968]DEBUG 50287[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,968]DEBUG 50287[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,968]DEBUG 50287[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,969]DEBUG 50288[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,969]DEBUG 50288[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-29 16:51:08,970]DEBUG 50289[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-29 16:51:08,971]DEBUG 50290[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,971]DEBUG 50290[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,972]DEBUG 50291[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,974]DEBUG 50293[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#34]
[2018-05-29 16:51:08,975]DEBUG 50294[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,975]DEBUG 50294[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,975]DEBUG 50294[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,975]DEBUG 50294[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-29 16:51:08,976]DEBUG 50295[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-29 16:51:08,977]DEBUG 50296[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-29 16:51:08,977]DEBUG 50296[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:08,977]DEBUG 50296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,977]DEBUG 50296[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-29 16:51:08,977]DEBUG 50296[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:08,978]DEBUG 50297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,979]DEBUG 50298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,979]DEBUG 50298[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:08,980]DEBUG 50299[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:08,981]DEBUG 50300[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:08,981]DEBUG 50300[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,981]DEBUG 50300[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:08,981]DEBUG 50300[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:08,981]DEBUG 50300[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,982]DEBUG 50301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:08,983]DEBUG 50302[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2018-05-29 16:51:08,983]DEBUG 50302[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-29 16:51:08,984]DEBUG 50303[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-29 16:51:08,985]DEBUG 50304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-29 16:51:08,985]DEBUG 50304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=37, roleName=Supervisor}
[2018-05-29 16:51:08,985]DEBUG 50304[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:08,985]DEBUG 50304[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:08,986]DEBUG 50305[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:08,986]DEBUG 50305[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:08,986]DEBUG 50305[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:08,987]DEBUG 50306[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b857d5e]
[2018-05-29 16:51:08,987]DEBUG 50306[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,209]DEBUG 50528[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,210]DEBUG 50529[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,210]DEBUG 50529[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b857d5e] after transaction
[2018-05-29 16:51:09,211]DEBUG 50530[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,211]DEBUG 50530[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,212]DEBUG 50531[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,212] INFO 50531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,214]DEBUG 50533[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10d78dc9, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,215]DEBUG 50534[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,215]DEBUG 50534[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,216]DEBUG 50535[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,217]DEBUG 50536[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,217]DEBUG 50536[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,218]DEBUG 50537[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,218]DEBUG 50537[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,219]DEBUG 50538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,219]DEBUG 50538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,219]DEBUG 50538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,220]DEBUG 50539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,221]DEBUG 50540[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,221]DEBUG 50540[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,222]DEBUG 50541[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,222]DEBUG 50541[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,222]DEBUG 50541[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,223]DEBUG 50542[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,223]DEBUG 50542[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,224]DEBUG 50543[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,224]DEBUG 50543[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,225]DEBUG 50544[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,225]DEBUG 50544[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,225]DEBUG 50544[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,226]DEBUG 50545[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,226]DEBUG 50545[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,227]DEBUG 50546[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da]
[2018-05-29 16:51:09,228]DEBUG 50547[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,229]DEBUG 50548[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,230]DEBUG 50549[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,231]DEBUG 50550[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,232]DEBUG 50551[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270692
[2018-05-29 16:51:09,232]DEBUG 50551[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6676e2b9] for Hibernate transaction
[2018-05-29 16:51:09,233]DEBUG 50552[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6676e2b9]
[2018-05-29 16:51:09,239]DEBUG 50558[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,240]DEBUG 50559[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,240]DEBUG 50559[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,241]DEBUG 50560[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,242] INFO 50561[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,242]DEBUG 50561[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,243]DEBUG 50562[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,244]DEBUG 50563[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,248]DEBUG 50567[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2018-05-29 16:51:09,249]DEBUG 50568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,250]DEBUG 50569[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,251]DEBUG 50570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,252]DEBUG 50571[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,256]DEBUG 50575[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2018-05-29 16:51:09,257]DEBUG 50576[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,257]DEBUG 50576[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,258]DEBUG 50577[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,258]DEBUG 50577[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,259]DEBUG 50578[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2018-05-29 16:51:09,260]DEBUG 50579[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,260]DEBUG 50579[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,260]DEBUG 50579[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,261]DEBUG 50580[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,262]DEBUG 50581[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2018-05-29 16:51:09,263]DEBUG 50582[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,264]DEBUG 50583[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,264]DEBUG 50583[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,265]DEBUG 50584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,265]DEBUG 50584[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,265]DEBUG 50584[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,265]DEBUG 50584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-29 16:51:09,265]DEBUG 50584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-29 16:51:09,266]DEBUG 50585[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-29 16:51:09,266]DEBUG 50585[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-29 16:51:09,266]DEBUG 50585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,266]DEBUG 50585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,268]DEBUG 50587[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,268]DEBUG 50587[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#41]
[2018-05-29 16:51:09,269]DEBUG 50588[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,269]DEBUG 50588[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,269]DEBUG 50588[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,270]DEBUG 50589[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,270]DEBUG 50589[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,271]DEBUG 50590[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,271]DEBUG 50590[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,271]DEBUG 50590[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,271]DEBUG 50590[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-29 16:51:09,272]DEBUG 50591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-29 16:51:09,272]DEBUG 50591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-29 16:51:09,272]DEBUG 50591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-29 16:51:09,273]DEBUG 50592[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,273]DEBUG 50592[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,274]DEBUG 50593[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,275]DEBUG 50594[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2018-05-29 16:51:09,275]DEBUG 50594[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,275]DEBUG 50594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,276]DEBUG 50595[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,276]DEBUG 50595[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,277]DEBUG 50596[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,277]DEBUG 50596[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,277]DEBUG 50596[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,277]DEBUG 50596[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,278]DEBUG 50597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-29 16:51:09,278]DEBUG 50597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-29 16:51:09,278]DEBUG 50597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-29 16:51:09,278]DEBUG 50597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-29 16:51:09,278]DEBUG 50597[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,279]DEBUG 50598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,282]DEBUG 50601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,283]DEBUG 50602[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#38]
[2018-05-29 16:51:09,283]DEBUG 50602[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,283]DEBUG 50602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,284]DEBUG 50603[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,284]DEBUG 50603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,284]DEBUG 50603[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,285]DEBUG 50604[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,285]DEBUG 50604[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,285]DEBUG 50604[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,285]DEBUG 50604[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-29 16:51:09,286]DEBUG 50605[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-29 16:51:09,288]DEBUG 50607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-29 16:51:09,289]DEBUG 50608[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-29 16:51:09,289]DEBUG 50608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,289]DEBUG 50608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,290]DEBUG 50609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,291]DEBUG 50610[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#40]
[2018-05-29 16:51:09,292]DEBUG 50611[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,292]DEBUG 50611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,292]DEBUG 50611[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,292]DEBUG 50611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,293]DEBUG 50612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,293]DEBUG 50612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,293]DEBUG 50612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,293]DEBUG 50612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,294]DEBUG 50613[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,296]DEBUG 50615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,296]DEBUG 50615[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,296]DEBUG 50615[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,297]DEBUG 50616[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6676e2b9]
[2018-05-29 16:51:09,297]DEBUG 50616[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,308]DEBUG 50627[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,309]DEBUG 50628[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,309]DEBUG 50628[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6676e2b9] after transaction
[2018-05-29 16:51:09,309]DEBUG 50628[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,310]DEBUG 50629[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,310]DEBUG 50629[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,310] INFO 50629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,311]DEBUG 50630[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6c18b5da, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,312]DEBUG 50631[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,312]DEBUG 50631[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,312]DEBUG 50631[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,313]DEBUG 50632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,313]DEBUG 50632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,313]DEBUG 50632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,313]DEBUG 50632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,313]DEBUG 50632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,314]DEBUG 50633[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,314]DEBUG 50633[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,314]DEBUG 50633[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,314]DEBUG 50633[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,314]DEBUG 50633[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,315]DEBUG 50634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,315]DEBUG 50634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,315]DEBUG 50634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,316]DEBUG 50635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,316]DEBUG 50635[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,317]DEBUG 50636[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,317]DEBUG 50636[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,317]DEBUG 50636[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,318]DEBUG 50637[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,318]DEBUG 50637[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,318]DEBUG 50637[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,318]DEBUG 50637[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,319]DEBUG 50638[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa]
[2018-05-29 16:51:09,319]DEBUG 50638[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,320]DEBUG 50639[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,320]DEBUG 50639[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,321]DEBUG 50640[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContainsRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,321]DEBUG 50640[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270693
[2018-05-29 16:51:09,321]DEBUG 50640[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@43b2a1c7] for Hibernate transaction
[2018-05-29 16:51:09,321]DEBUG 50640[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43b2a1c7]
[2018-05-29 16:51:09,322]DEBUG 50641[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,322]DEBUG 50641[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,322]DEBUG 50641[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,322]DEBUG 50641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,322] INFO 50641[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,322]DEBUG 50641[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,323]DEBUG 50642[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,323]DEBUG 50642[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,324]DEBUG 50643[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2018-05-29 16:51:09,324]DEBUG 50643[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,325]DEBUG 50644[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,325]DEBUG 50644[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,325]DEBUG 50644[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,326]DEBUG 50645[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2018-05-29 16:51:09,327]DEBUG 50646[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,327]DEBUG 50646[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,328]DEBUG 50647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,328]DEBUG 50647[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,329]DEBUG 50648[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2018-05-29 16:51:09,329]DEBUG 50648[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,332]DEBUG 50651[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,332]DEBUG 50651[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,332]DEBUG 50651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,334]DEBUG 50653[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2018-05-29 16:51:09,334]DEBUG 50653[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,335]DEBUG 50654[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,335]DEBUG 50654[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,336]DEBUG 50655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,337]DEBUG 50656[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,337]DEBUG 50656[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,337]DEBUG 50656[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,342]DEBUG 50661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,343]DEBUG 50662[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#42]
[2018-05-29 16:51:09,343]DEBUG 50662[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,343]DEBUG 50662[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,343]DEBUG 50662[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,344]DEBUG 50663[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,345]DEBUG 50664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,345]DEBUG 50664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,345]DEBUG 50664[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,345]DEBUG 50664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,345]DEBUG 50664[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,346]DEBUG 50665[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,347]DEBUG 50666[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#43]
[2018-05-29 16:51:09,347]DEBUG 50666[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,347]DEBUG 50666[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,347]DEBUG 50666[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,348]DEBUG 50667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,348]DEBUG 50667[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,348]DEBUG 50667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,348]DEBUG 50667[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,348]DEBUG 50667[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,349]DEBUG 50668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,350]DEBUG 50669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,351]DEBUG 50670[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#45]
[2018-05-29 16:51:09,351]DEBUG 50670[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,351]DEBUG 50670[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,351]DEBUG 50670[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,352]DEBUG 50671[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,352]DEBUG 50671[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,352]DEBUG 50671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,352]DEBUG 50671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,353]DEBUG 50672[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,355]DEBUG 50674[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,355]DEBUG 50674[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#44]
[2018-05-29 16:51:09,355]DEBUG 50674[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,355]DEBUG 50674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,356]DEBUG 50675[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,356]DEBUG 50675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,356]DEBUG 50675[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,357]DEBUG 50676[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,358]DEBUG 50677[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,359]DEBUG 50678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,359]DEBUG 50678[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,361]DEBUG 50680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,361]DEBUG 50680[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,362]DEBUG 50681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,362]DEBUG 50681[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,362]DEBUG 50681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,362]DEBUG 50681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,362]DEBUG 50681[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,363]DEBUG 50682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,365]DEBUG 50684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,365]DEBUG 50684[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,365]DEBUG 50684[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,365]DEBUG 50684[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,365]DEBUG 50684[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-29 16:51:09,366]DEBUG 50685[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-29 16:51:09,367]DEBUG 50686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-29 16:51:09,367]DEBUG 50686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,367]DEBUG 50686[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,368]DEBUG 50687[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,368]DEBUG 50687[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,368]DEBUG 50687[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,368]DEBUG 50687[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43b2a1c7]
[2018-05-29 16:51:09,369]DEBUG 50688[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,403]DEBUG 50722[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,403]DEBUG 50722[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,404]DEBUG 50723[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@43b2a1c7] after transaction
[2018-05-29 16:51:09,404]DEBUG 50723[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,404]DEBUG 50723[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,404]DEBUG 50723[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,404] INFO 50723[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,405]DEBUG 50724[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7c2d1faa, testMethod = testContainsRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,405]DEBUG 50724[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,405]DEBUG 50724[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,405]DEBUG 50724[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,406]DEBUG 50725[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,407]DEBUG 50726[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,408]DEBUG 50727[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,408]DEBUG 50727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,408]DEBUG 50727[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,408]DEBUG 50727[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,408]DEBUG 50727[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b]
[2018-05-29 16:51:09,409]DEBUG 50728[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,409]DEBUG 50728[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,409]DEBUG 50728[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270694
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6fdd4cbb] for Hibernate transaction
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6fdd4cbb]
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,410]DEBUG 50729[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,411]DEBUG 50730[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,411]DEBUG 50730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,411] INFO 50730[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,411]DEBUG 50730[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,411]DEBUG 50730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,411]DEBUG 50730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,413]DEBUG 50732[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2018-05-29 16:51:09,413]DEBUG 50732[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,413]DEBUG 50732[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,414]DEBUG 50733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,414]DEBUG 50733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,417]DEBUG 50736[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2018-05-29 16:51:09,417]DEBUG 50736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,418]DEBUG 50737[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,418]DEBUG 50737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,418]DEBUG 50737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,419]DEBUG 50738[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2018-05-29 16:51:09,420]DEBUG 50739[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,420]DEBUG 50739[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,420]DEBUG 50739[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,421]DEBUG 50740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,422]DEBUG 50741[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2018-05-29 16:51:09,422]DEBUG 50741[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,423]DEBUG 50742[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,423]DEBUG 50742[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,423]DEBUG 50742[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,423]DEBUG 50742[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,424]DEBUG 50743[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2018-05-29 16:51:09,433]DEBUG 50752[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,433]DEBUG 50752[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-29 16:51:09,433]DEBUG 50752[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-29 16:51:09,434]DEBUG 50753[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-29 16:51:09,434]DEBUG 50753[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,434]DEBUG 50753[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,434]DEBUG 50753[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,435]DEBUG 50754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-29 16:51:09,436]DEBUG 50755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-29 16:51:09,436]DEBUG 50755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-29 16:51:09,436]DEBUG 50755[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-29 16:51:09,436]DEBUG 50755[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,436]DEBUG 50755[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2018-05-29 16:51:09,437]DEBUG 50756[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,438]DEBUG 50757[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-29 16:51:09,438]DEBUG 50757[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-29 16:51:09,438]DEBUG 50757[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-29 16:51:09,439]DEBUG 50758[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,439]DEBUG 50758[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,439]DEBUG 50758[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,439]DEBUG 50758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-29 16:51:09,440]DEBUG 50759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-29 16:51:09,441]DEBUG 50760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,441]DEBUG 50760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID asc
[2018-05-29 16:51:09,442]DEBUG 50761[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,443]DEBUG 50762[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-29 16:51:09,443]DEBUG 50762[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-29 16:51:09,443]DEBUG 50762[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-29 16:51:09,443]DEBUG 50762[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,443]DEBUG 50762[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,444]DEBUG 50763[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,444]DEBUG 50763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,444]DEBUG 50763[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-29 16:51:09,445]DEBUG 50764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-29 16:51:09,446]DEBUG 50765[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,446]DEBUG 50765[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID desc
[2018-05-29 16:51:09,447]DEBUG 50766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,448]DEBUG 50767[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-29 16:51:09,584]DEBUG 50903[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-29 16:51:09,586]DEBUG 50905[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-29 16:51:09,587]DEBUG 50906[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,588]DEBUG 50907[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,588]DEBUG 50907[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,589]DEBUG 50908[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,590]DEBUG 50909[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,591]DEBUG 50910[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,592]DEBUG 50911[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,593]DEBUG 50912[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,593]DEBUG 50912[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-29 16:51:09,594]DEBUG 50913[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-29 16:51:09,594]DEBUG 50913[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-29 16:51:09,595]DEBUG 50914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-29 16:51:09,595]DEBUG 50914[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,596]DEBUG 50915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,599]DEBUG 50918[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,600]DEBUG 50919[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,601]DEBUG 50920[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,601]DEBUG 50920[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6fdd4cbb]
[2018-05-29 16:51:09,602]DEBUG 50921[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,606]DEBUG 50925[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,606]DEBUG 50925[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,607]DEBUG 50926[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6fdd4cbb] after transaction
[2018-05-29 16:51:09,607]DEBUG 50926[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,608]DEBUG 50927[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,608]DEBUG 50927[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,609] INFO 50928[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,610]DEBUG 50929[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@185a5c6b, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,611]DEBUG 50930[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,611]DEBUG 50930[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,612]DEBUG 50931[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,613]DEBUG 50932[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,614]DEBUG 50933[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,615]DEBUG 50934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,615]DEBUG 50934[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,615]DEBUG 50934[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,616]DEBUG 50935[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,616]DEBUG 50935[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,617]DEBUG 50936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,618]DEBUG 50937[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,618]DEBUG 50937[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,618]DEBUG 50937[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,619]DEBUG 50938[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,619]DEBUG 50938[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,620]DEBUG 50939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,620]DEBUG 50939[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,621]DEBUG 50940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,621]DEBUG 50940[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,622]DEBUG 50941[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,622]DEBUG 50941[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,623]DEBUG 50942[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,623]DEBUG 50942[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,624]DEBUG 50943[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,624]DEBUG 50943[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381]
[2018-05-29 16:51:09,626]DEBUG 50945[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,626]DEBUG 50945[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,627]DEBUG 50946[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,629]DEBUG 50948[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,629]DEBUG 50948[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270696
[2018-05-29 16:51:09,630]DEBUG 50949[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6e09f16] for Hibernate transaction
[2018-05-29 16:51:09,630]DEBUG 50949[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6e09f16]
[2018-05-29 16:51:09,631]DEBUG 50950[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,631]DEBUG 50950[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,632]DEBUG 50951[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,632]DEBUG 50951[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,633] INFO 50952[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,633]DEBUG 50952[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,634]DEBUG 50953[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,635]DEBUG 50954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,637]DEBUG 50956[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2018-05-29 16:51:09,638]DEBUG 50957[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,639]DEBUG 50958[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,640]DEBUG 50959[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,641]DEBUG 50960[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,644]DEBUG 50963[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2018-05-29 16:51:09,644]DEBUG 50963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,645]DEBUG 50964[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,646]DEBUG 50965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,647]DEBUG 50966[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,649]DEBUG 50968[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2018-05-29 16:51:09,649]DEBUG 50968[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,650]DEBUG 50969[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,651]DEBUG 50970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,651]DEBUG 50970[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,657]DEBUG 50976[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2018-05-29 16:51:09,657]DEBUG 50976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,658]DEBUG 50977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,659]DEBUG 50978[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,659]DEBUG 50978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,660]DEBUG 50979[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,660]DEBUG 50979[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,660]DEBUG 50979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-29 16:51:09,660]DEBUG 50979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-29 16:51:09,661]DEBUG 50980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-29 16:51:09,661]DEBUG 50980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-29 16:51:09,661]DEBUG 50980[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,661]DEBUG 50980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2018-05-29 16:51:09,663]DEBUG 50982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,664]DEBUG 50983[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2018-05-29 16:51:09,665]DEBUG 50984[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#53]
[2018-05-29 16:51:09,665]DEBUG 50984[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2018-05-29 16:51:09,665]DEBUG 50984[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,665]DEBUG 50984[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,666]DEBUG 50985[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,667]DEBUG 50986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,667]DEBUG 50986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,668]DEBUG 50987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,668]DEBUG 50987[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,669]DEBUG 50988[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,669]DEBUG 50988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-29 16:51:09,669]DEBUG 50988[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-29 16:51:09,670]DEBUG 50989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-29 16:51:09,670]DEBUG 50989[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-29 16:51:09,671]DEBUG 50990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,671]DEBUG 50990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2018-05-29 16:51:09,673]DEBUG 50992[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,674]DEBUG 50993[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2018-05-29 16:51:09,674]DEBUG 50993[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#53]
[2018-05-29 16:51:09,674]DEBUG 50993[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2018-05-29 16:51:09,675]DEBUG 50994[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,675]DEBUG 50994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,675]DEBUG 50994[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,676]DEBUG 50995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,676]DEBUG 50995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,676]DEBUG 50995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,677]DEBUG 50996[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,677]DEBUG 50996[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,677]DEBUG 50996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-29 16:51:09,677]DEBUG 50996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-29 16:51:09,678]DEBUG 50997[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-29 16:51:09,678]DEBUG 50997[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-29 16:51:09,678]DEBUG 50997[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,678]DEBUG 50997[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,680]DEBUG 50999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,680]DEBUG 50999[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,680]DEBUG 50999[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,681]DEBUG 51000[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6e09f16]
[2018-05-29 16:51:09,681]DEBUG 51000[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,760]DEBUG 51079[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,761]DEBUG 51080[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,762]DEBUG 51081[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6e09f16] after transaction
[2018-05-29 16:51:09,762]DEBUG 51081[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,763]DEBUG 51082[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,763]DEBUG 51082[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,764] INFO 51083[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,765]DEBUG 51084[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3597c381, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,766]DEBUG 51085[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,766]DEBUG 51085[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,767]DEBUG 51086[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,768]DEBUG 51087[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,769]DEBUG 51088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,769]DEBUG 51088[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,769]DEBUG 51088[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,770]DEBUG 51089[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,770]DEBUG 51089[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,771]DEBUG 51090[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,771]DEBUG 51090[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,771]DEBUG 51090[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,773]DEBUG 51092[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,773]DEBUG 51092[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,774]DEBUG 51093[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,774]DEBUG 51093[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,775]DEBUG 51094[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,775]DEBUG 51094[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,776]DEBUG 51095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,776]DEBUG 51095[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,776]DEBUG 51095[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,777]DEBUG 51096[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,777]DEBUG 51096[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,778]DEBUG 51097[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,784]DEBUG 51103[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,784]DEBUG 51103[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560]
[2018-05-29 16:51:09,786]DEBUG 51105[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,786]DEBUG 51105[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,787]DEBUG 51106[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,788]DEBUG 51107[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,789]DEBUG 51108[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270697
[2018-05-29 16:51:09,789]DEBUG 51108[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@191dc4a8] for Hibernate transaction
[2018-05-29 16:51:09,790]DEBUG 51109[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@191dc4a8]
[2018-05-29 16:51:09,790]DEBUG 51109[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,791]DEBUG 51110[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,791]DEBUG 51110[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,792]DEBUG 51111[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,792] INFO 51111[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,793]DEBUG 51112[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,794]DEBUG 51113[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,795]DEBUG 51114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,797]DEBUG 51116[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2018-05-29 16:51:09,798]DEBUG 51117[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,799]DEBUG 51118[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,800]DEBUG 51119[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,801]DEBUG 51120[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,804]DEBUG 51123[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2018-05-29 16:51:09,804]DEBUG 51123[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,805]DEBUG 51124[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,806]DEBUG 51125[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,807]DEBUG 51126[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,814]DEBUG 51133[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2018-05-29 16:51:09,815]DEBUG 51134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,815]DEBUG 51134[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,816]DEBUG 51135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,816]DEBUG 51135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,817]DEBUG 51136[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2018-05-29 16:51:09,818]DEBUG 51137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,818]DEBUG 51137[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,819]DEBUG 51138[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,819]DEBUG 51138[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,820]DEBUG 51139[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2018-05-29 16:51:09,821]DEBUG 51140[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,821]DEBUG 51140[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,822]DEBUG 51141[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,822]DEBUG 51141[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,822]DEBUG 51141[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,823]DEBUG 51142[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,823]DEBUG 51142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=tempAdmin}
[2018-05-29 16:51:09,823]DEBUG 51142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-29 16:51:09,823]DEBUG 51142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-29 16:51:09,823]DEBUG 51142[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-29 16:51:09,824]DEBUG 51143[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-29 16:51:09,824]DEBUG 51143[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,824]DEBUG 51143[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,825]DEBUG 51144[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,826]DEBUG 51145[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-29 16:51:09,826]DEBUG 51145[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,826]DEBUG 51145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,827]DEBUG 51146[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,827]DEBUG 51146[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,828]DEBUG 51147[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,828]DEBUG 51147[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,828]DEBUG 51147[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,829]DEBUG 51148[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,829]DEBUG 51148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=tempAdmin and something}
[2018-05-29 16:51:09,829]DEBUG 51148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-29 16:51:09,829]DEBUG 51148[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-29 16:51:09,830]DEBUG 51149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-29 16:51:09,830]DEBUG 51149[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-29 16:51:09,830]DEBUG 51149[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:09,830]DEBUG 51149[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,831]DEBUG 51150[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-29 16:51:09,831]DEBUG 51150[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:09,832]DEBUG 51151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,833]DEBUG 51152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,833]DEBUG 51152[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-29 16:51:09,835]DEBUG 51154[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,835]DEBUG 51154[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-29 16:51:09,836]DEBUG 51155[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,838]DEBUG 51157[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,838]DEBUG 51157[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,839]DEBUG 51158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,839]DEBUG 51158[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,840]DEBUG 51159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,840]DEBUG 51159[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,840]DEBUG 51159[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,841]DEBUG 51160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=something heretempAdmin and something and something here}
[2018-05-29 16:51:09,841]DEBUG 51160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-29 16:51:09,841]DEBUG 51160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-29 16:51:09,841]DEBUG 51160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-29 16:51:09,841]DEBUG 51160[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-29 16:51:09,842]DEBUG 51161[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:09,842]DEBUG 51161[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,842]DEBUG 51161[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-29 16:51:09,842]DEBUG 51161[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:09,844]DEBUG 51163[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,844]DEBUG 51163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,845]DEBUG 51164[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-29 16:51:09,846]DEBUG 51165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,846]DEBUG 51165[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-29 16:51:09,846]DEBUG 51165[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,847]DEBUG 51166[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,847]DEBUG 51166[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,847]DEBUG 51166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,847]DEBUG 51166[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=something heretempAdmin and something and something here}
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-29 16:51:09,848]DEBUG 51167[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-29 16:51:09,849]DEBUG 51168[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-29 16:51:09,849]DEBUG 51168[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,849]DEBUG 51168[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,850]DEBUG 51169[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,850]DEBUG 51169[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,851]DEBUG 51170[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,851]DEBUG 51170[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@191dc4a8]
[2018-05-29 16:51:09,851]DEBUG 51170[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,853]DEBUG 51172[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,853]DEBUG 51172[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,853]DEBUG 51172[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@191dc4a8] after transaction
[2018-05-29 16:51:09,853]DEBUG 51172[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,853]DEBUG 51172[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,854]DEBUG 51173[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,854] INFO 51173[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,854]DEBUG 51173[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7665a560, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,855]DEBUG 51174[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,855]DEBUG 51174[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,855]DEBUG 51174[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,855]DEBUG 51174[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,855]DEBUG 51174[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,856]DEBUG 51175[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,857]DEBUG 51176[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,858]DEBUG 51177[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,858]DEBUG 51177[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,858]DEBUG 51177[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,858]DEBUG 51177[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,858]DEBUG 51177[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d]
[2018-05-29 16:51:09,859]DEBUG 51178[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,859]DEBUG 51178[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,859]DEBUG 51178[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,859]DEBUG 51178[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,859]DEBUG 51178[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270698
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@688b97a9] for Hibernate transaction
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@688b97a9]
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,860]DEBUG 51179[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,862] INFO 51181[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,863]DEBUG 51182[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,863]DEBUG 51182[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,863]DEBUG 51182[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,864]DEBUG 51183[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2018-05-29 16:51:09,865]DEBUG 51184[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,865]DEBUG 51184[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,865]DEBUG 51184[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,865]DEBUG 51184[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,866]DEBUG 51185[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2018-05-29 16:51:09,867]DEBUG 51186[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,867]DEBUG 51186[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,867]DEBUG 51186[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,867]DEBUG 51186[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,869]DEBUG 51188[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 61
[2018-05-29 16:51:09,869]DEBUG 51188[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,870]DEBUG 51189[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,870]DEBUG 51189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,871]DEBUG 51190[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,872]DEBUG 51191[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 62
[2018-05-29 16:51:09,873]DEBUG 51192[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,874]DEBUG 51193[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,874]DEBUG 51193[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,874]DEBUG 51193[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,875]DEBUG 51194[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 63
[2018-05-29 16:51:09,876]DEBUG 51195[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,878]DEBUG 51197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,878]DEBUG 51197[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,878]DEBUG 51197[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-29 16:51:09,879]DEBUG 51198[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin}
[2018-05-29 16:51:09,880]DEBUG 51199[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,880]DEBUG 51199[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,881]DEBUG 51200[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,882]DEBUG 51201[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-29 16:51:09,882]DEBUG 51201[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,882]DEBUG 51201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,883]DEBUG 51202[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,883]DEBUG 51202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,883]DEBUG 51202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-29 16:51:09,884]DEBUG 51203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-29 16:51:09,885]DEBUG 51204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-29 16:51:09,885]DEBUG 51204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin and something}
[2018-05-29 16:51:09,885]DEBUG 51204[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:09,885]DEBUG 51204[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,885]DEBUG 51204[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-29 16:51:09,886]DEBUG 51205[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:09,887]DEBUG 51206[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,887]DEBUG 51206[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,888]DEBUG 51207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-29 16:51:09,889]DEBUG 51208[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,890]DEBUG 51209[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-29 16:51:09,890]DEBUG 51209[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,890]DEBUG 51209[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,890]DEBUG 51209[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,891]DEBUG 51210[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,891]DEBUG 51210[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,891]DEBUG 51210[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-29 16:51:09,892]DEBUG 51211[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2018-05-29 16:51:09,895]DEBUG 51214[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:09,896]DEBUG 51215[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,896]DEBUG 51215[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-29 16:51:09,896]DEBUG 51215[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:09,897]DEBUG 51216[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,898]DEBUG 51217[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,898]DEBUG 51217[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-29 16:51:09,899]DEBUG 51218[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,899]DEBUG 51218[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-29 16:51:09,900]DEBUG 51219[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,900]DEBUG 51219[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,900]DEBUG 51219[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,900]DEBUG 51219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,900]DEBUG 51219[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-29 16:51:09,901]DEBUG 51220[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2018-05-29 16:51:09,902]DEBUG 51221[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,902]DEBUG 51221[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,903]DEBUG 51222[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,903]DEBUG 51222[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,903]DEBUG 51222[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,903]DEBUG 51222[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@688b97a9]
[2018-05-29 16:51:09,903]DEBUG 51222[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:09,908]DEBUG 51227[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:09,909]DEBUG 51228[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,909]DEBUG 51228[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@688b97a9] after transaction
[2018-05-29 16:51:09,909]DEBUG 51228[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:09,909]DEBUG 51228[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:09,909]DEBUG 51228[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:09,909] INFO 51228[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,910]DEBUG 51229[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7611a45d, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:09,910]DEBUG 51229[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,910]DEBUG 51229[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:09,910]DEBUG 51229[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:09,911]DEBUG 51230[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:09,912]DEBUG 51231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:09,912]DEBUG 51231[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:09,912]DEBUG 51231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:09,912]DEBUG 51231[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:09,912]DEBUG 51231[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:09,913]DEBUG 51232[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:09,913]DEBUG 51232[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:09,914]DEBUG 51233[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:09,915]DEBUG 51234[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:09,915]DEBUG 51234[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd]
[2018-05-29 16:51:09,915]DEBUG 51234[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,915]DEBUG 51234[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,915]DEBUG 51234[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetAdminRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270699
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3b9dd782] for Hibernate transaction
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b9dd782]
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:09,916]DEBUG 51235[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:09,917]DEBUG 51236[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:09,917]DEBUG 51236[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,917] INFO 51236[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:09,917]DEBUG 51236[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,917]DEBUG 51236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,918]DEBUG 51237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,919]DEBUG 51238[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 64
[2018-05-29 16:51:09,920]DEBUG 51239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,920]DEBUG 51239[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,921]DEBUG 51240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,921]DEBUG 51240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,922]DEBUG 51241[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 65
[2018-05-29 16:51:09,922]DEBUG 51241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,925]DEBUG 51244[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,925]DEBUG 51244[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,925]DEBUG 51244[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,927]DEBUG 51246[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 66
[2018-05-29 16:51:09,927]DEBUG 51246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,928]DEBUG 51247[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,928]DEBUG 51247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,928]DEBUG 51247[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,930]DEBUG 51249[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 67
[2018-05-29 16:51:09,930]DEBUG 51249[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,931]DEBUG 51250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,931]DEBUG 51250[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-29 16:51:09,932]DEBUG 51251[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-29 16:51:09,933]DEBUG 51252[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,933]DEBUG 51252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,934]DEBUG 51253[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,935]DEBUG 51254[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#64]
[2018-05-29 16:51:09,935]DEBUG 51254[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,935]DEBUG 51254[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,935]DEBUG 51254[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,936]DEBUG 51255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-29 16:51:09,937]DEBUG 51256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-29 16:51:09,937]DEBUG 51256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-29 16:51:09,937]DEBUG 51256[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-29 16:51:09,937]DEBUG 51256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,937]DEBUG 51256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,938]DEBUG 51257[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,939]DEBUG 51258[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#64]
[2018-05-29 16:51:09,939]DEBUG 51258[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,939]DEBUG 51258[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,940]DEBUG 51259[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,940]DEBUG 51259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,940]DEBUG 51259[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,940]DEBUG 51259[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-29 16:51:09,941]DEBUG 51260[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-29 16:51:09,942]DEBUG 51261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,942]DEBUG 51261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-29 16:51:09,942]DEBUG 51261[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-29 16:51:09,943]DEBUG 51262[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,944]DEBUG 51263[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,944]DEBUG 51263[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-29 16:51:09,945]DEBUG 51264[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:09,945]DEBUG 51264[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:09,946]DEBUG 51265[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,946]DEBUG 51265[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:09,946]DEBUG 51265[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:09,946]DEBUG 51265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,947]DEBUG 51266[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:09,948]DEBUG 51267[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 68
[2018-05-29 16:51:09,948]DEBUG 51267[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,949]DEBUG 51268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:09,949]DEBUG 51268[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:09,949]DEBUG 51268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:09,949]DEBUG 51268[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=Administrator}
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:09,950]DEBUG 51269[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:09,951]DEBUG 51270[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:09,952]DEBUG 51271[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:09,952]DEBUG 51271[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:09,953]DEBUG 51272[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b9dd782]
[2018-05-29 16:51:09,953]DEBUG 51272[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:10,021]DEBUG 51340[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:10,021]DEBUG 51340[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,022]DEBUG 51341[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b9dd782] after transaction
[2018-05-29 16:51:10,023]DEBUG 51342[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:10,023]DEBUG 51342[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:10,023]DEBUG 51342[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,024] INFO 51343[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-29 16:51:10,025]DEBUG 51344[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@4b939fbd, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:10,026]DEBUG 51345[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:10,026]DEBUG 51345[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-29 16:51:10,028]DEBUG 51347[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:10,029]DEBUG 51348[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,029]DEBUG 51348[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:10,030]DEBUG 51349[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,030]DEBUG 51349[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:10,031]DEBUG 51350[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,031]DEBUG 51350[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:10,033]DEBUG 51352[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,033]DEBUG 51352[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:10,034]DEBUG 51353[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,034]DEBUG 51353[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:10,035]DEBUG 51354[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,035]DEBUG 51354[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:10,036]DEBUG 51355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,036]DEBUG 51355[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:10,036]DEBUG 51355[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,037]DEBUG 51356[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:10,037]DEBUG 51356[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,038]DEBUG 51357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:10,038]DEBUG 51357[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,038]DEBUG 51357[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:10,039]DEBUG 51358[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:10,040]DEBUG 51359[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:10,040]DEBUG 51359[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a]
[2018-05-29 16:51:10,042]DEBUG 51361[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,043]DEBUG 51362[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:10,044]DEBUG 51363[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:10,045]DEBUG 51364[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,046]DEBUG 51365[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270700
[2018-05-29 16:51:10,046]DEBUG 51365[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@35f471fe] for Hibernate transaction
[2018-05-29 16:51:10,047]DEBUG 51366[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@35f471fe]
[2018-05-29 16:51:10,047]DEBUG 51366[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:10,048]DEBUG 51367[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:10,048]DEBUG 51367[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:10,049]DEBUG 51368[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:10,049] INFO 51368[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:10,051]DEBUG 51370[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,052]DEBUG 51371[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,053]DEBUG 51372[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:10,057]DEBUG 51376[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 69
[2018-05-29 16:51:10,057]DEBUG 51376[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,058]DEBUG 51377[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,059]DEBUG 51378[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,060]DEBUG 51379[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:10,062]DEBUG 51381[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 70
[2018-05-29 16:51:10,063]DEBUG 51382[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,064]DEBUG 51383[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,065]DEBUG 51384[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,066]DEBUG 51385[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:10,068]DEBUG 51387[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 71
[2018-05-29 16:51:10,069]DEBUG 51388[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,069]DEBUG 51388[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,070]DEBUG 51389[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,070]DEBUG 51389[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-29 16:51:10,071]DEBUG 51390[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 72
[2018-05-29 16:51:10,072]DEBUG 51391[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,073]DEBUG 51392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,073]DEBUG 51392[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,073]DEBUG 51392[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=69, roleName=Administrator}
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=70, roleName=Supervisor}
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=71, roleName=Customer}
[2018-05-29 16:51:10,074]DEBUG 51393[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=72, roleName=Merchandiser}
[2018-05-29 16:51:10,075]DEBUG 51394[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,075]DEBUG 51394[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,076]DEBUG 51395[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,076]DEBUG 51395[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:10,077]DEBUG 51396[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:10,077]DEBUG 51396[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@35f471fe]
[2018-05-29 16:51:10,077]DEBUG 51396[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:10,082]DEBUG 51401[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:10,082]DEBUG 51401[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,082]DEBUG 51401[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@35f471fe] after transaction
[2018-05-29 16:51:10,082]DEBUG 51401[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:10,083]DEBUG 51402[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:10,083]DEBUG 51402[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,083] INFO 51402[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:10,084]DEBUG 51403[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@59e4698a, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:10,084]DEBUG 51403[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@5b70f3e2 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-29 16:51:10,085]DEBUG 51404[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest].
[2018-05-29 16:51:10,085] INFO 51404[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: using defaults.
[2018-05-29 16:51:10,086]DEBUG 51405[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,086]DEBUG 51405[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,087]DEBUG 51406[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,087]DEBUG 51406[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,087]DEBUG 51406[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,088]DEBUG 51407[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,089]DEBUG 51408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,089]DEBUG 51408[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,090]DEBUG 51409[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:10,098]DEBUG 51417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,098]DEBUG 51417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,098]DEBUG 51417[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,099]DEBUG 51418[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,100]DEBUG 51419[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,100]DEBUG 51419[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,100]DEBUG 51419[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:10,101]DEBUG 51420[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'customerTypeDao'
[2018-05-29 16:51:10,101]DEBUG 51420[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,101]DEBUG 51420[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:10,102]DEBUG 51421[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'dimensionDao'
[2018-05-29 16:51:10,102]DEBUG 51421[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,102]DEBUG 51421[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:10,102]DEBUG 51421[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderDao'
[2018-05-29 16:51:10,103]DEBUG 51422[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,103]DEBUG 51422[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:10,103]DEBUG 51422[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderItemDao'
[2018-05-29 16:51:10,104]DEBUG 51423[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,104]DEBUG 51423[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:10,104]DEBUG 51423[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderStatusDao'
[2018-05-29 16:51:10,104]DEBUG 51423[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,105]DEBUG 51424[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:10,105]DEBUG 51424[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'productDao'
[2018-05-29 16:51:10,105]DEBUG 51424[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,106]DEBUG 51425[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:10,106]DEBUG 51425[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'regionDao'
[2018-05-29 16:51:10,106]DEBUG 51425[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,107]DEBUG 51426[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:10,107]DEBUG 51426[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'roleDao'
[2018-05-29 16:51:10,108]DEBUG 51427[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,108]DEBUG 51427[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:10,108]DEBUG 51427[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'userDao'
[2018-05-29 16:51:10,109]DEBUG 51428[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,109]DEBUG 51428[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:10,109]DEBUG 51428[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'sessionFactory'
[2018-05-29 16:51:10,110]DEBUG 51429[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:10,110]DEBUG 51429[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,110]DEBUG 51429[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:10,111]DEBUG 51430[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e]
[2018-05-29 16:51:10,112]DEBUG 51431[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.setUp()
[2018-05-29 16:51:10,112]DEBUG 51431[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,113]DEBUG 51432[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.tearDown() throws java.lang.Exception
[2018-05-29 16:51:10,113]DEBUG 51432[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,114]DEBUG 51433[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAll()
[2018-05-29 16:51:10,114]DEBUG 51433[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,114]DEBUG 51433[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindById()
[2018-05-29 16:51:10,115]DEBUG 51434[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,115]DEBUG 51434[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAllWithSorting()
[2018-05-29 16:51:10,115]DEBUG 51434[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,115]DEBUG 51434[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testRowCountWithCriterions()
[2018-05-29 16:51:10,116]DEBUG 51435[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,118]DEBUG 51437[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testPaging()
[2018-05-29 16:51:10,119]DEBUG 51438[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,119]DEBUG 51438[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindByOrder()
[2018-05-29 16:51:10,119]DEBUG 51438[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,120]DEBUG 51439[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-29 16:51:10,120]DEBUG 51439[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-29 16:51:10,120]DEBUG 51439[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-29 16:51:10,120]DEBUG 51439[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-29 16:51:10,121]DEBUG 51440[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-29 16:51:10,121]DEBUG 51440[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-29 16:51:10,122]DEBUG 51441[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-29 16:51:10,122]DEBUG 51441[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-29 16:51:10,122]DEBUG 51441[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-29 16:51:10,122]DEBUG 51441[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-29 16:51:10,123]DEBUG 51442[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-29 16:51:10,123]DEBUG 51442[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-29 16:51:10,123]DEBUG 51442[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-29 16:51:10,123]DEBUG 51442[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-29 16:51:10,123]DEBUG 51442[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-29 16:51:10,124]DEBUG 51443[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-29 16:51:10,124]DEBUG 51443[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-29 16:51:10,124]DEBUG 51443[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,124]DEBUG 51443[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,124]DEBUG 51443[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-29 16:51:10,125]DEBUG 51444[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,125]DEBUG 51444[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,125]DEBUG 51444[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-29 16:51:10,125]DEBUG 51444[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-29 16:51:10,125]DEBUG 51444[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-29 16:51:10,126]DEBUG 51445[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-29 16:51:10,127]DEBUG 51446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,127]DEBUG 51446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-29 16:51:10,127]DEBUG 51446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-29 16:51:10,127]DEBUG 51446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-29 16:51:10,127]DEBUG 51446[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-29 16:51:10,128]DEBUG 51447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-29 16:51:10,128]DEBUG 51447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-29 16:51:10,128]DEBUG 51447[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-29 16:51:10,141]DEBUG 51460[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,142]DEBUG 51461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,142]DEBUG 51461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,142]DEBUG 51461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@346bc53f transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,142]DEBUG 51461[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:10,142]DEBUG 51461[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270701
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@41b6d030] for Hibernate transaction
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41b6d030]
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:10,143]DEBUG 51462[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,143] INFO 51462[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:10,144]DEBUG 51463[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,144]DEBUG 51463[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,145]DEBUG 51464[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,146]DEBUG 51465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,146]DEBUG 51465[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,147]DEBUG 51466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,147]DEBUG 51466[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,147]DEBUG 51466[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,148]DEBUG 51467[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,148]DEBUG 51467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,149]DEBUG 51468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,149]DEBUG 51468[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,150]DEBUG 51469[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,150]DEBUG 51469[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,153]DEBUG 51472[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,154]DEBUG 51473[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,154]DEBUG 51473[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,155]DEBUG 51474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,156]DEBUG 51475[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,156]DEBUG 51475[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,157]DEBUG 51476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,157]DEBUG 51476[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,157]DEBUG 51476[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,158]DEBUG 51477[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,159]DEBUG 51478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,159]DEBUG 51478[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,160]DEBUG 51479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,160]DEBUG 51479[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,160]DEBUG 51479[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,161]DEBUG 51480[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,162]DEBUG 51481[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:10,162]DEBUG 51481[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,163]DEBUG 51482[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,163]DEBUG 51482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,163]DEBUG 51482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,164]DEBUG 51483[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:10,165]DEBUG 51484[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,165]DEBUG 51484[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,165]DEBUG 51484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,165]DEBUG 51484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:10,167]DEBUG 51486[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:10,167]DEBUG 51486[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,168]DEBUG 51487[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,168]DEBUG 51487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,168]DEBUG 51487[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:10,169]DEBUG 51488[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:10,170]DEBUG 51489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,170]DEBUG 51489[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,172]DEBUG 51491[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,172]DEBUG 51491[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,173]DEBUG 51492[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-29 16:51:10,174]DEBUG 51493[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,174]DEBUG 51493[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,174]DEBUG 51493[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,174]DEBUG 51493[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,176]DEBUG 51495[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:10,176]DEBUG 51495[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,177]DEBUG 51496[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,178]DEBUG 51497[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,178]DEBUG 51497[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,178]DEBUG 51497[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,178]DEBUG 51497[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,178]DEBUG 51497[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,179]DEBUG 51498[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID
[2018-05-29 16:51:10,181]DEBUG 51500[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:10,183]DEBUG 51502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#1], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#1]
[2018-05-29 16:51:10,183]DEBUG 51502[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#2], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#2]
[2018-05-29 16:51:10,183]DEBUG 51502[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:10,183]DEBUG 51502[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,183]DEBUG 51502[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:10,184]DEBUG 51503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,184]DEBUG 51503[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,184]DEBUG 51503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,184]DEBUG 51503[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,184]DEBUG 51503[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,185]DEBUG 51504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,185]DEBUG 51504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,185]DEBUG 51504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,185]DEBUG 51504[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,190]DEBUG 51509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,190]DEBUG 51509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,191]DEBUG 51510[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,191]DEBUG 51510[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,192]DEBUG 51511[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,192]DEBUG 51511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,192]DEBUG 51511[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,193]DEBUG 51512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,193]DEBUG 51512[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,193]DEBUG 51512[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,193]DEBUG 51512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,193]DEBUG 51512[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,194]DEBUG 51513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,195]DEBUG 51514[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,196]DEBUG 51515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,196]DEBUG 51515[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,198]DEBUG 51517[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,198]DEBUG 51517[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,198]DEBUG 51517[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,198]DEBUG 51517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,199]DEBUG 51518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,199]DEBUG 51518[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,200]DEBUG 51519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,200]DEBUG 51519[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,201]DEBUG 51520[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,201]DEBUG 51520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,201]DEBUG 51520[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,207]DEBUG 51526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,207]DEBUG 51526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,207]DEBUG 51526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,208]DEBUG 51527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,209]DEBUG 51528[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,209]DEBUG 51528[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,209]DEBUG 51528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,209]DEBUG 51528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,210]DEBUG 51529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,210]DEBUG 51529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,210]DEBUG 51529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,210]DEBUG 51529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,211]DEBUG 51530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,211]DEBUG 51530[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,213]DEBUG 51532[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,214]DEBUG 51533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,214]DEBUG 51533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,214]DEBUG 51533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,214]DEBUG 51533[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,214]DEBUG 51533[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,215]DEBUG 51534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,215]DEBUG 51534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,215]DEBUG 51534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,215]DEBUG 51534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,215]DEBUG 51534[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,216]DEBUG 51535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,216]DEBUG 51535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,216]DEBUG 51535[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,217]DEBUG 51536[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,217]DEBUG 51536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,217]DEBUG 51536[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,218]DEBUG 51537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,218]DEBUG 51537[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,218]DEBUG 51537[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,218]DEBUG 51537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,218]DEBUG 51537[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,219]DEBUG 51538[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,221]DEBUG 51540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,221]DEBUG 51540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,221]DEBUG 51540[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,222]DEBUG 51541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,222]DEBUG 51541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,222]DEBUG 51541[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,223]DEBUG 51542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,223]DEBUG 51542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,224]DEBUG 51543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,224]DEBUG 51543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,224]DEBUG 51543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,224]DEBUG 51543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,225]DEBUG 51544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,227]DEBUG 51546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,228]DEBUG 51547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,229]DEBUG 51548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,229]DEBUG 51548[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,229]DEBUG 51548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,229]DEBUG 51548[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,229]DEBUG 51548[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,230]DEBUG 51549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,230]DEBUG 51549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,230]DEBUG 51549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,230]DEBUG 51549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,230]DEBUG 51549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,231]DEBUG 51550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,231]DEBUG 51550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,231]DEBUG 51550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,232]DEBUG 51551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,233]DEBUG 51552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,233]DEBUG 51552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,233]DEBUG 51552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,234]DEBUG 51553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,235]DEBUG 51554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,235]DEBUG 51554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,235]DEBUG 51554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,235]DEBUG 51554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,236]DEBUG 51555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,236]DEBUG 51555[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,237]DEBUG 51556[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:10,237]DEBUG 51556[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41b6d030]
[2018-05-29 16:51:10,237]DEBUG 51556[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:10,314]DEBUG 51633[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:10,315]DEBUG 51634[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,316]DEBUG 51635[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@41b6d030] after transaction
[2018-05-29 16:51:10,316]DEBUG 51635[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:10,317]DEBUG 51636[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:10,317]DEBUG 51636[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,318] INFO 51637[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,319]DEBUG 51638[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@164ece1e, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:10,319]DEBUG 51638[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,320]DEBUG 51639[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,321]DEBUG 51640[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:10,321]DEBUG 51640[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,322]DEBUG 51641[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:10,322]DEBUG 51641[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,323]DEBUG 51642[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:10,323]DEBUG 51642[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,324]DEBUG 51643[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:10,324]DEBUG 51643[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,325]DEBUG 51644[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:10,326]DEBUG 51645[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,327]DEBUG 51646[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:10,327]DEBUG 51646[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,327]DEBUG 51646[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:10,328]DEBUG 51647[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,328]DEBUG 51647[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:10,329]DEBUG 51648[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,329]DEBUG 51648[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:10,330]DEBUG 51649[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,330]DEBUG 51649[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:10,331]DEBUG 51650[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,331]DEBUG 51650[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:10,332]DEBUG 51651[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:10,332]DEBUG 51651[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:10,333]DEBUG 51652[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73]
[2018-05-29 16:51:10,334]DEBUG 51653[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,335]DEBUG 51654[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,335]DEBUG 51654[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:10,337]DEBUG 51656[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,337]DEBUG 51656[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270703
[2018-05-29 16:51:10,338]DEBUG 51657[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@323bfd7a] for Hibernate transaction
[2018-05-29 16:51:10,338]DEBUG 51657[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@323bfd7a]
[2018-05-29 16:51:10,339]DEBUG 51658[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:10,339]DEBUG 51658[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:10,340]DEBUG 51659[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:10,341]DEBUG 51660[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,341] INFO 51660[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:10,342]DEBUG 51661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,342]DEBUG 51661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,344]DEBUG 51663[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,345]DEBUG 51664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,346]DEBUG 51665[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,348]DEBUG 51667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,349]DEBUG 51668[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,350]DEBUG 51669[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,352]DEBUG 51671[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,359]DEBUG 51678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,360]DEBUG 51679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,362]DEBUG 51681[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,362]DEBUG 51681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,363]DEBUG 51682[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,364]DEBUG 51683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,365]DEBUG 51684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,365]DEBUG 51684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,367]DEBUG 51686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,368]DEBUG 51687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,368]DEBUG 51687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,369]DEBUG 51688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,370]DEBUG 51689[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,370]DEBUG 51689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,372]DEBUG 51691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,372]DEBUG 51691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,373]DEBUG 51692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,375]DEBUG 51694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,375]DEBUG 51694[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,376]DEBUG 51695[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,376]DEBUG 51695[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,378]DEBUG 51697[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:10,379]DEBUG 51698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,380]DEBUG 51699[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,380]DEBUG 51699[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,380]DEBUG 51699[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,382]DEBUG 51701[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:10,383]DEBUG 51702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,384]DEBUG 51703[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,384]DEBUG 51703[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,385]DEBUG 51704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:10,386]DEBUG 51705[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:10,387]DEBUG 51706[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,388]DEBUG 51707[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,388]DEBUG 51707[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,389]DEBUG 51708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:10,391]DEBUG 51710[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-29 16:51:10,391]DEBUG 51710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,392]DEBUG 51711[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,392]DEBUG 51711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,393]DEBUG 51712[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,394]DEBUG 51713[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:10,394]DEBUG 51713[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,395]DEBUG 51714[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,395]DEBUG 51714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,395]DEBUG 51714[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,397]DEBUG 51716[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:10,397]DEBUG 51716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,397]DEBUG 51716[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,398]DEBUG 51717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,399]DEBUG 51718[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,400]DEBUG 51719[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,401]DEBUG 51720[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,401]DEBUG 51720[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,402]DEBUG 51721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,402]DEBUG 51721[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,402]DEBUG 51721[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,402]DEBUG 51721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,403]DEBUG 51722[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,404]DEBUG 51723[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,405]DEBUG 51724[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,407]DEBUG 51726[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,408]DEBUG 51727[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,409]DEBUG 51728[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,410]DEBUG 51729[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,411]DEBUG 51730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,411]DEBUG 51730[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,411]DEBUG 51730[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,412]DEBUG 51731[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,413]DEBUG 51732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,413]DEBUG 51732[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,413]DEBUG 51732[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,415]DEBUG 51734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,415]DEBUG 51734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,415]DEBUG 51734[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,416]DEBUG 51735[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,417]DEBUG 51736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,417]DEBUG 51736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,417]DEBUG 51736[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,417]DEBUG 51736[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,429]DEBUG 51748[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,429]DEBUG 51748[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,430]DEBUG 51749[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,430]DEBUG 51749[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,430]DEBUG 51749[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,430]DEBUG 51749[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,430]DEBUG 51749[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,431]DEBUG 51750[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,432]DEBUG 51751[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,433]DEBUG 51752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,433]DEBUG 51752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,433]DEBUG 51752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,433]DEBUG 51752[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,434]DEBUG 51753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,435]DEBUG 51754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,435]DEBUG 51754[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,435]DEBUG 51754[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,438]DEBUG 51757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,438]DEBUG 51757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,438]DEBUG 51757[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,439]DEBUG 51758[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,440]DEBUG 51759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,440]DEBUG 51759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,440]DEBUG 51759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,440]DEBUG 51759[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,440]DEBUG 51759[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,442]DEBUG 51761[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,443]DEBUG 51762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,443]DEBUG 51762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,443]DEBUG 51762[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,443]DEBUG 51762[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,446]DEBUG 51765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,447]DEBUG 51766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,447]DEBUG 51766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,459]DEBUG 51778[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,459]DEBUG 51778[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,459]DEBUG 51778[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:10,459]DEBUG 51778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@323bfd7a]
[2018-05-29 16:51:10,460]DEBUG 51779[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:10,489]DEBUG 51808[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:10,490]DEBUG 51809[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,490]DEBUG 51809[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@323bfd7a] after transaction
[2018-05-29 16:51:10,490]DEBUG 51809[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:10,490]DEBUG 51809[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:10,490]DEBUG 51809[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,491] INFO 51810[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,491]DEBUG 51810[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@59c74e73, testMethod = testFindById@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:10,491]DEBUG 51810[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,491]DEBUG 51810[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,492]DEBUG 51811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,493]DEBUG 51812[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:10,494]DEBUG 51813[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:10,495]DEBUG 51814[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2]
[2018-05-29 16:51:10,495]DEBUG 51814[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,495]DEBUG 51814[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,495]DEBUG 51814[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAllWithSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270704
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5ec3bddf] for Hibernate transaction
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ec3bddf]
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:10,496]DEBUG 51815[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:10,497]DEBUG 51816[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:10,497]DEBUG 51816[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,497] INFO 51816[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:10,497]DEBUG 51816[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,497]DEBUG 51816[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,511]DEBUG 51830[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,511]DEBUG 51830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,512]DEBUG 51831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,513]DEBUG 51832[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,513]DEBUG 51832[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,514]DEBUG 51833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,514]DEBUG 51833[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,515]DEBUG 51834[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,515]DEBUG 51834[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,516]DEBUG 51835[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,517]DEBUG 51836[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,517]DEBUG 51836[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,518]DEBUG 51837[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,518]DEBUG 51837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,518]DEBUG 51837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,519]DEBUG 51838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,519]DEBUG 51838[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,519]DEBUG 51838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,520]DEBUG 51839[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,521]DEBUG 51840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,521]DEBUG 51840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,522]DEBUG 51841[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,522]DEBUG 51841[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,522]DEBUG 51841[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,523]DEBUG 51842[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,525]DEBUG 51844[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,526]DEBUG 51845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,526]DEBUG 51845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,527]DEBUG 51846[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:10,527]DEBUG 51846[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,528]DEBUG 51847[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,528]DEBUG 51847[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,529]DEBUG 51848[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,530]DEBUG 51849[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:10,530]DEBUG 51849[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,531]DEBUG 51850[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,531]DEBUG 51850[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,531]DEBUG 51850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:10,532]DEBUG 51851[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:10,533]DEBUG 51852[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,533]DEBUG 51852[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,534]DEBUG 51853[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,534]DEBUG 51853[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:10,535]DEBUG 51854[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-29 16:51:10,535]DEBUG 51854[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,536]DEBUG 51855[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,536]DEBUG 51855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,536]DEBUG 51855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,537]DEBUG 51856[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:10,538]DEBUG 51857[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,538]DEBUG 51857[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,539]DEBUG 51858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,539]DEBUG 51858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,638]DEBUG 51957[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:10,639]DEBUG 51958[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,644]DEBUG 51963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,644]DEBUG 51963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,645]DEBUG 51964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,646]DEBUG 51965[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,646]DEBUG 51965[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,647]DEBUG 51966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,647]DEBUG 51966[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,648]DEBUG 51967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,648]DEBUG 51967[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,654]DEBUG 51973[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,655]DEBUG 51974[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,656]DEBUG 51975[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,656]DEBUG 51975[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID order by this_.Cost desc
[2018-05-29 16:51:10,663]DEBUG 51982[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:10,666]DEBUG 51985[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#6], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#6]
[2018-05-29 16:51:10,667]DEBUG 51986[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#5], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#5]
[2018-05-29 16:51:10,668]DEBUG 51987[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:10,668]DEBUG 51987[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,669]DEBUG 51988[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:10,670]DEBUG 51989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,670]DEBUG 51989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,671]DEBUG 51990[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,672]DEBUG 51991[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,673]DEBUG 51992[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,674]DEBUG 51993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,674]DEBUG 51993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,675]DEBUG 51994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,675]DEBUG 51994[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,676]DEBUG 51995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,676]DEBUG 51995[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,677]DEBUG 51996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,677]DEBUG 51996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,680]DEBUG 51999[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,681]DEBUG 52000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,681]DEBUG 52000[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,682]DEBUG 52001[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,683]DEBUG 52002[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,683]DEBUG 52002[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,684]DEBUG 52003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,684]DEBUG 52003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,685]DEBUG 52004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,685]DEBUG 52004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,686]DEBUG 52005[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,693]DEBUG 52012[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,693]DEBUG 52012[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,694]DEBUG 52013[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,695]DEBUG 52014[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,696]DEBUG 52015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,696]DEBUG 52015[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,697]DEBUG 52016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,697]DEBUG 52016[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,697]DEBUG 52016[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,698]DEBUG 52017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,698]DEBUG 52017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,698]DEBUG 52017[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,699]DEBUG 52018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,699]DEBUG 52018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,699]DEBUG 52018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,699]DEBUG 52018[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,700]DEBUG 52019[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,701]DEBUG 52020[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,702]DEBUG 52021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,702]DEBUG 52021[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,703]DEBUG 52022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,703]DEBUG 52022[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,703]DEBUG 52022[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,704]DEBUG 52023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,704]DEBUG 52023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,704]DEBUG 52023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,705]DEBUG 52024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,705]DEBUG 52024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,705]DEBUG 52024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,705]DEBUG 52024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,706]DEBUG 52025[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,708]DEBUG 52027[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,708]DEBUG 52027[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,709]DEBUG 52028[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,709]DEBUG 52028[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,710]DEBUG 52029[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,710]DEBUG 52029[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,710]DEBUG 52029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,710]DEBUG 52029[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,711]DEBUG 52030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,711]DEBUG 52030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,711]DEBUG 52030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,711]DEBUG 52030[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,712]DEBUG 52031[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,712]DEBUG 52031[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,713]DEBUG 52032[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,714]DEBUG 52033[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,715]DEBUG 52034[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,715]DEBUG 52034[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,716]DEBUG 52035[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,716]DEBUG 52035[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,716]DEBUG 52035[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,717]DEBUG 52036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,717]DEBUG 52036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,717]DEBUG 52036[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,718]DEBUG 52037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,718]DEBUG 52037[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,718]DEBUG 52037[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,718]DEBUG 52037[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,719]DEBUG 52038[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,720]DEBUG 52039[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,720]DEBUG 52039[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,720]DEBUG 52039[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,720]DEBUG 52039[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,721]DEBUG 52040[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,722]DEBUG 52041[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,722]DEBUG 52041[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,724]DEBUG 52043[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,725]DEBUG 52044[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,725]DEBUG 52044[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,725]DEBUG 52044[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,726]DEBUG 52045[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,727]DEBUG 52046[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,727]DEBUG 52046[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,727]DEBUG 52046[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,730]DEBUG 52049[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,730]DEBUG 52049[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,730]DEBUG 52049[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,731]DEBUG 52050[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,731]DEBUG 52050[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,732]DEBUG 52051[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,733]DEBUG 52052[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,733]DEBUG 52052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,733]DEBUG 52052[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,734]DEBUG 52053[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,735]DEBUG 52054[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,735]DEBUG 52054[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:10,735]DEBUG 52054[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ec3bddf]
[2018-05-29 16:51:10,735]DEBUG 52054[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:10,738]DEBUG 52057[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:10,738]DEBUG 52057[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,738]DEBUG 52057[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ec3bddf] after transaction
[2018-05-29 16:51:10,739]DEBUG 52058[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:10,739]DEBUG 52058[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:10,739]DEBUG 52058[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:10,739] INFO 52058[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,739]DEBUG 52058[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@24f8d1e2, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:10,740]DEBUG 52059[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,740]DEBUG 52059[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:10,740]DEBUG 52059[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:10,740]DEBUG 52059[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:10,740]DEBUG 52059[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:10,741]DEBUG 52060[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:10,742]DEBUG 52061[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:10,743]DEBUG 52062[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:10,743]DEBUG 52062[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:10,743]DEBUG 52062[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:10,743]DEBUG 52062[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0]
[2018-05-29 16:51:10,744]DEBUG 52063[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,744]DEBUG 52063[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,744]DEBUG 52063[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:10,744]DEBUG 52063[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testRowCountWithCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270707
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7a8f6bf2] for Hibernate transaction
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a8f6bf2]
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:10,745]DEBUG 52064[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,745] INFO 52064[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:10,746]DEBUG 52065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,746]DEBUG 52065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,747]DEBUG 52066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,747]DEBUG 52066[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,747]DEBUG 52066[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,748]DEBUG 52067[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,749]DEBUG 52068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,749]DEBUG 52068[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,750]DEBUG 52069[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,750]DEBUG 52069[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,751]DEBUG 52070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,752]DEBUG 52071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,752]DEBUG 52071[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,752]DEBUG 52071[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,753]DEBUG 52072[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,754]DEBUG 52073[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,754]DEBUG 52073[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,755]DEBUG 52074[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,755]DEBUG 52074[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,755]DEBUG 52074[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,757]DEBUG 52076[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,757]DEBUG 52076[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,757]DEBUG 52076[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,760]DEBUG 52079[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,761]DEBUG 52080[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,761]DEBUG 52080[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,762]DEBUG 52081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,762]DEBUG 52081[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,762]DEBUG 52081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,763]DEBUG 52082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,764]DEBUG 52083[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:10,764]DEBUG 52083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,765]DEBUG 52084[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,765]DEBUG 52084[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,765]DEBUG 52084[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,766]DEBUG 52085[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-29 16:51:10,767]DEBUG 52086[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,768]DEBUG 52087[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,769]DEBUG 52088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,769]DEBUG 52088[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:10,770]DEBUG 52089[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:10,770]DEBUG 52089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,771]DEBUG 52090[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,771]DEBUG 52090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,771]DEBUG 52090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:10,773]DEBUG 52092[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-29 16:51:10,773]DEBUG 52092[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,773]DEBUG 52092[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,773]DEBUG 52092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,774]DEBUG 52093[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,775]DEBUG 52094[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:10,775]DEBUG 52094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,776]DEBUG 52095[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:10,776]DEBUG 52095[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,776]DEBUG 52095[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:10,777]DEBUG 52096[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-29 16:51:10,778]DEBUG 52097[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,778]DEBUG 52097[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,779]DEBUG 52098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,780]DEBUG 52099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_
[2018-05-29 16:51:10,781]DEBUG 52100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:10,782]DEBUG 52101[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2018-05-29 16:51:10,782]DEBUG 52101[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:10,782]DEBUG 52101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,782]DEBUG 52101[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:10,783]DEBUG 52102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,783]DEBUG 52102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,783]DEBUG 52102[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,784]DEBUG 52103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,785]DEBUG 52104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,785]DEBUG 52104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,785]DEBUG 52104[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,785]DEBUG 52104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_ where this_.OrderRef=?
[2018-05-29 16:51:10,786]DEBUG 52105[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:10,787]DEBUG 52106[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2018-05-29 16:51:10,787]DEBUG 52106[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:10,787]DEBUG 52106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,787]DEBUG 52106[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:10,787]DEBUG 52106[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,788]DEBUG 52107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,788]DEBUG 52107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,788]DEBUG 52107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,790]DEBUG 52109[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,791]DEBUG 52110[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:10,793]DEBUG 52112[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,793]DEBUG 52112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,793]DEBUG 52112[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,793]DEBUG 52112[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,794]DEBUG 52113[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,795]DEBUG 52114[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,795]DEBUG 52114[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:10,796]DEBUG 52115[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,796]DEBUG 52115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,796]DEBUG 52115[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,797]DEBUG 52116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,797]DEBUG 52116[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,797]DEBUG 52116[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,797]DEBUG 52116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,797]DEBUG 52116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,798]DEBUG 52117[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:10,799]DEBUG 52118[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,799]DEBUG 52118[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,800]DEBUG 52119[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,800]DEBUG 52119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,800]DEBUG 52119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,800]DEBUG 52119[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,800]DEBUG 52119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,801]DEBUG 52120[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,802]DEBUG 52121[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:10,803]DEBUG 52122[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,803]DEBUG 52122[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,803]DEBUG 52122[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,803]DEBUG 52122[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,804]DEBUG 52123[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,805]DEBUG 52124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,805]DEBUG 52124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,805]DEBUG 52124[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,805]DEBUG 52124[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:10,806]DEBUG 52125[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,806]DEBUG 52125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,806]DEBUG 52125[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,807]DEBUG 52126[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,807]DEBUG 52126[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,807]DEBUG 52126[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,807]DEBUG 52126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,807]DEBUG 52126[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,808]DEBUG 52127[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:10,809]DEBUG 52128[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,809]DEBUG 52128[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,810]DEBUG 52129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,810]DEBUG 52129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,810]DEBUG 52129[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,810]DEBUG 52129[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,811]DEBUG 52130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,811]DEBUG 52130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,811]DEBUG 52130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,813]DEBUG 52132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,813]DEBUG 52132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,813]DEBUG 52132[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,814]DEBUG 52133[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,814]DEBUG 52133[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:10,815]DEBUG 52134[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,815]DEBUG 52134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,815]DEBUG 52134[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,816]DEBUG 52135[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,816]DEBUG 52135[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,816]DEBUG 52135[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,816]DEBUG 52135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,816]DEBUG 52135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,817]DEBUG 52136[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:10,818]DEBUG 52137[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,818]DEBUG 52137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:10,819]DEBUG 52138[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:10,819]DEBUG 52138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:10,819]DEBUG 52138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:10,819]DEBUG 52138[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:10,819]DEBUG 52138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:10,820]DEBUG 52139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:10,821]DEBUG 52140[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:10,822]DEBUG 52141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:10,822]DEBUG 52141[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:10,822]DEBUG 52141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a8f6bf2]
[2018-05-29 16:51:10,822]DEBUG 52141[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:11,109]DEBUG 52428[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:11,110]DEBUG 52429[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,111]DEBUG 52430[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a8f6bf2] after transaction
[2018-05-29 16:51:11,111]DEBUG 52430[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:11,112]DEBUG 52431[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:11,112]DEBUG 52431[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,113] INFO 52432[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,114]DEBUG 52433[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@698117d0, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:11,115]DEBUG 52434[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,115]DEBUG 52434[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,116]DEBUG 52435[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:11,116]DEBUG 52435[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:11,117]DEBUG 52436[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:11,117]DEBUG 52436[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:11,118]DEBUG 52437[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:11,118]DEBUG 52437[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:11,118]DEBUG 52437[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:11,119]DEBUG 52438[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:11,119]DEBUG 52438[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:11,120]DEBUG 52439[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:11,120]DEBUG 52439[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:11,120]DEBUG 52439[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:11,121]DEBUG 52440[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:11,121]DEBUG 52440[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:11,121]DEBUG 52440[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:11,122]DEBUG 52441[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:11,122]DEBUG 52441[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:11,123]DEBUG 52442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:11,123]DEBUG 52442[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:11,123]DEBUG 52442[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:11,124]DEBUG 52443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:11,124]DEBUG 52443[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:11,125]DEBUG 52444[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:11,125]DEBUG 52444[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062]
[2018-05-29 16:51:11,127]DEBUG 52446[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,127]DEBUG 52446[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,128]DEBUG 52447[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:11,129]DEBUG 52448[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testPaging]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,129]DEBUG 52448[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270711
[2018-05-29 16:51:11,129]DEBUG 52448[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@420f0a62] for Hibernate transaction
[2018-05-29 16:51:11,130]DEBUG 52449[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@420f0a62]
[2018-05-29 16:51:11,130]DEBUG 52449[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:11,131]DEBUG 52450[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:11,131]DEBUG 52450[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:11,131]DEBUG 52450[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,132] INFO 52451[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:11,132]DEBUG 52451[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,133]DEBUG 52452[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,135]DEBUG 52454[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,137]DEBUG 52456[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,138]DEBUG 52457[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,157]DEBUG 52476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,158]DEBUG 52477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,158]DEBUG 52477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,159]DEBUG 52478[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,159]DEBUG 52478[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,160]DEBUG 52479[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,161]DEBUG 52480[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,161]DEBUG 52480[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,161]DEBUG 52480[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,163]DEBUG 52482[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,163]DEBUG 52482[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,163]DEBUG 52482[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,164]DEBUG 52483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,165]DEBUG 52484[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,165]DEBUG 52484[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,166]DEBUG 52485[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,166]DEBUG 52485[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,167]DEBUG 52486[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,168]DEBUG 52487[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,168]DEBUG 52487[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,169]DEBUG 52488[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,170]DEBUG 52489[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,170]DEBUG 52489[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,170]DEBUG 52489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,171]DEBUG 52490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,172]DEBUG 52491[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-29 16:51:11,172]DEBUG 52491[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,173]DEBUG 52492[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,173]DEBUG 52492[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,173]DEBUG 52492[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,175]DEBUG 52494[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-29 16:51:11,175]DEBUG 52494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,175]DEBUG 52494[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,176]DEBUG 52495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,176]DEBUG 52495[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:11,178]DEBUG 52497[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:11,178]DEBUG 52497[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,178]DEBUG 52497[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,179]DEBUG 52498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,179]DEBUG 52498[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:11,182]DEBUG 52501[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-29 16:51:11,182]DEBUG 52501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,183]DEBUG 52502[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,183]DEBUG 52502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,183]DEBUG 52502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,185]DEBUG 52504[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-29 16:51:11,185]DEBUG 52504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,186]DEBUG 52505[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,186]DEBUG 52505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,186]DEBUG 52505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,188]DEBUG 52507[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-29 16:51:11,188]DEBUG 52507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,190]DEBUG 52509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,190]DEBUG 52509[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,190]DEBUG 52509[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,191]DEBUG 52510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,191]DEBUG 52510[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,191]DEBUG 52510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,191]DEBUG 52510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,191]DEBUG 52510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,192]DEBUG 52511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,192]DEBUG 52511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,192]DEBUG 52511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,192]DEBUG 52511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,192]DEBUG 52511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?
[2018-05-29 16:51:11,195]DEBUG 52514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:11,196]DEBUG 52515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#9]
[2018-05-29 16:51:11,196]DEBUG 52515[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:11,197]DEBUG 52516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,197]DEBUG 52516[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:11,201]DEBUG 52520[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,202]DEBUG 52521[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,202]DEBUG 52521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,202]DEBUG 52521[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,203]DEBUG 52522[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,203]DEBUG 52522[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,204]DEBUG 52523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,204]DEBUG 52523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,205]DEBUG 52524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,205]DEBUG 52524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,205]DEBUG 52524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,205]DEBUG 52524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,206]DEBUG 52525[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?, ?
[2018-05-29 16:51:11,211]DEBUG 52530[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:11,211]DEBUG 52530[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:11,211]DEBUG 52530[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,212]DEBUG 52531[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:11,212]DEBUG 52531[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,212]DEBUG 52531[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,213]DEBUG 52532[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,214]DEBUG 52533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,214]DEBUG 52533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,214]DEBUG 52533[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,214]DEBUG 52533[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,214]DEBUG 52533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,221]DEBUG 52540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,222]DEBUG 52541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,222]DEBUG 52541[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,222]DEBUG 52541[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,223]DEBUG 52542[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,224]DEBUG 52543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,224]DEBUG 52543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,225]DEBUG 52544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,225]DEBUG 52544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,225]DEBUG 52544[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,226]DEBUG 52545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,226]DEBUG 52545[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,226]DEBUG 52545[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,226]DEBUG 52545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,226]DEBUG 52545[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,227]DEBUG 52546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,227]DEBUG 52546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,227]DEBUG 52546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,227]DEBUG 52546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,227]DEBUG 52546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,228]DEBUG 52547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,229]DEBUG 52548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,230]DEBUG 52549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,230]DEBUG 52549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,230]DEBUG 52549[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,231]DEBUG 52550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,232]DEBUG 52551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,232]DEBUG 52551[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,232]DEBUG 52551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,232]DEBUG 52551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,233]DEBUG 52552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,234]DEBUG 52553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,234]DEBUG 52553[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,234]DEBUG 52553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,234]DEBUG 52553[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,235]DEBUG 52554[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,236]DEBUG 52555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,238]DEBUG 52557[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,238]DEBUG 52557[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,239]DEBUG 52558[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,239]DEBUG 52558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,239]DEBUG 52558[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,240]DEBUG 52559[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,241]DEBUG 52560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,241]DEBUG 52560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,241]DEBUG 52560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,241]DEBUG 52560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,241]DEBUG 52560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,242]DEBUG 52561[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,243]DEBUG 52562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,243]DEBUG 52562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,243]DEBUG 52562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,243]DEBUG 52562[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,243]DEBUG 52562[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,244]DEBUG 52563[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,245]DEBUG 52564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,246]DEBUG 52565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,246]DEBUG 52565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,246]DEBUG 52565[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,246]DEBUG 52565[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,247]DEBUG 52566[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,248]DEBUG 52567[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,248]DEBUG 52567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,248]DEBUG 52567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,249]DEBUG 52568[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,249]DEBUG 52568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,249]DEBUG 52568[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,250]DEBUG 52569[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,250]DEBUG 52569[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,250]DEBUG 52569[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,250]DEBUG 52569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,250]DEBUG 52569[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,251]DEBUG 52570[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,252]DEBUG 52571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,253]DEBUG 52572[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,253]DEBUG 52572[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:11,253]DEBUG 52572[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@420f0a62]
[2018-05-29 16:51:11,253]DEBUG 52572[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@420f0a62] after transaction
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:11,290]DEBUG 52609[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,291] INFO 52610[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,291]DEBUG 52610[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@11b48062, testMethod = testPaging@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:11,291]DEBUG 52610[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,291]DEBUG 52610[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:11,292]DEBUG 52611[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:11,293]DEBUG 52612[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:11,294]DEBUG 52613[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:11,294]DEBUG 52613[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:11,294]DEBUG 52613[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:11,296]DEBUG 52615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:11,296]DEBUG 52615[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:11,296]DEBUG 52615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:11,296]DEBUG 52615[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:11,296]DEBUG 52615[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:11,297]DEBUG 52616[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:11,297]DEBUG 52616[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:11,297]DEBUG 52616[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9]
[2018-05-29 16:51:11,298]DEBUG 52617[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,298]DEBUG 52617[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,298]DEBUG 52617[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:11,298]DEBUG 52617[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrder]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,298]DEBUG 52617[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270712
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@730f1a19] for Hibernate transaction
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@730f1a19]
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:11,299]DEBUG 52618[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,299] INFO 52618[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:11,300]DEBUG 52619[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,300]DEBUG 52619[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,301]DEBUG 52620[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,301]DEBUG 52620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,301]DEBUG 52620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,302]DEBUG 52621[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,303]DEBUG 52622[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,303]DEBUG 52622[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,304]DEBUG 52623[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,304]DEBUG 52623[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,304]DEBUG 52623[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,305]DEBUG 52624[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,306]DEBUG 52625[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,306]DEBUG 52625[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,308]DEBUG 52627[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,309]DEBUG 52628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,309]DEBUG 52628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,310]DEBUG 52629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,310]DEBUG 52629[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,311]DEBUG 52630[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,311]DEBUG 52630[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,312]DEBUG 52631[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,312]DEBUG 52631[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,313]DEBUG 52632[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,314]DEBUG 52633[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,314]DEBUG 52633[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,315]DEBUG 52634[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,316]DEBUG 52635[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,316]DEBUG 52635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,316]DEBUG 52635[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,318]DEBUG 52637[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-29 16:51:11,318]DEBUG 52637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,319]DEBUG 52638[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,319]DEBUG 52638[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,319]DEBUG 52638[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,321]DEBUG 52640[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-29 16:51:11,321]DEBUG 52640[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,321]DEBUG 52640[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,322]DEBUG 52641[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,322]DEBUG 52641[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:11,323]DEBUG 52642[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:11,323]DEBUG 52642[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,324]DEBUG 52643[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,324]DEBUG 52643[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,324]DEBUG 52643[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:11,326]DEBUG 52645[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-29 16:51:11,326]DEBUG 52645[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,326]DEBUG 52645[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,327]DEBUG 52646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,327]DEBUG 52646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,328]DEBUG 52647[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-29 16:51:11,328]DEBUG 52647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,329]DEBUG 52648[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,329]DEBUG 52648[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,329]DEBUG 52648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,330]DEBUG 52649[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-29 16:51:11,331]DEBUG 52650[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,334]DEBUG 52653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,334]DEBUG 52653[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,334]DEBUG 52653[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,335]DEBUG 52654[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,336]DEBUG 52655[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,336]DEBUG 52655[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,336]DEBUG 52655[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=?
[2018-05-29 16:51:11,338]DEBUG 52657[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-29 16:51:11,339]DEBUG 52658[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#11], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#11]
[2018-05-29 16:51:11,340]DEBUG 52659[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-29 16:51:11,340]DEBUG 52659[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,340]DEBUG 52659[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-29 16:51:11,340]DEBUG 52659[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,340]DEBUG 52659[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,341]DEBUG 52660[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,342]DEBUG 52661[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,342]DEBUG 52661[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,342]DEBUG 52661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,342]DEBUG 52661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,351]DEBUG 52670[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,351]DEBUG 52670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,351]DEBUG 52670[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,351]DEBUG 52670[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,352]DEBUG 52671[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,353]DEBUG 52672[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,353]DEBUG 52672[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,353]DEBUG 52672[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,354]DEBUG 52673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,354]DEBUG 52673[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,355]DEBUG 52674[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,356]DEBUG 52675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,357]DEBUG 52676[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,358]DEBUG 52677[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,358]DEBUG 52677[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,358]DEBUG 52677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,358]DEBUG 52677[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,359]DEBUG 52678[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,360]DEBUG 52679[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,360]DEBUG 52679[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,361]DEBUG 52680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,361]DEBUG 52680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,361]DEBUG 52680[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,362]DEBUG 52681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,362]DEBUG 52681[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,362]DEBUG 52681[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,362]DEBUG 52681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,362]DEBUG 52681[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,363]DEBUG 52682[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,364]DEBUG 52683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,364]DEBUG 52683[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,365]DEBUG 52684[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,365]DEBUG 52684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,365]DEBUG 52684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,366]DEBUG 52685[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,366]DEBUG 52685[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,366]DEBUG 52685[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,367]DEBUG 52686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,367]DEBUG 52686[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,367]DEBUG 52686[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,367]DEBUG 52686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,367]DEBUG 52686[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,368]DEBUG 52687[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,369]DEBUG 52688[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,370]DEBUG 52689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,370]DEBUG 52689[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,370]DEBUG 52689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,370]DEBUG 52689[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,370]DEBUG 52689[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,371]DEBUG 52690[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,372]DEBUG 52691[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,373]DEBUG 52692[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,373]DEBUG 52692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,373]DEBUG 52692[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,374]DEBUG 52693[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,375]DEBUG 52694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,375]DEBUG 52694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,375]DEBUG 52694[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,375]DEBUG 52694[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,375]DEBUG 52694[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,376]DEBUG 52695[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,377]DEBUG 52696[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,378]DEBUG 52697[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,379]DEBUG 52698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,379]DEBUG 52698[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,380]DEBUG 52699[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,380]DEBUG 52699[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:11,380]DEBUG 52699[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@730f1a19]
[2018-05-29 16:51:11,380]DEBUG 52699[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:11,525]DEBUG 52844[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:11,526]DEBUG 52845[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,526]DEBUG 52845[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@730f1a19] after transaction
[2018-05-29 16:51:11,527]DEBUG 52846[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:11,527]DEBUG 52846[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:11,528]DEBUG 52847[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,528] INFO 52847[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-29 16:51:11,529]DEBUG 52848[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2f0644c9, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:11,530]DEBUG 52849[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,531]DEBUG 52850[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:11,531]DEBUG 52850[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = [null], testException = [null]]].
[2018-05-29 16:51:11,531]DEBUG 52850[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-29 16:51:11,532]DEBUG 52851[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-29 16:51:11,532]DEBUG 52851[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-29 16:51:11,532]DEBUG 52851[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-29 16:51:11,532]DEBUG 52851[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-29 16:51:11,532]DEBUG 52851[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-29 16:51:11,533]DEBUG 52852[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-29 16:51:11,533]DEBUG 52852[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-29 16:51:11,533]DEBUG 52852[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-29 16:51:11,533]DEBUG 52852[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-29 16:51:11,534]DEBUG 52853[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-29 16:51:11,534]DEBUG 52853[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-29 16:51:11,536]DEBUG 52855[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-29 16:51:11,536]DEBUG 52855[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-29 16:51:11,537]DEBUG 52856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-29 16:51:11,537]DEBUG 52856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-29 16:51:11,537]DEBUG 52856[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-29 16:51:11,537]DEBUG 52856[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-29 16:51:11,538]DEBUG 52857[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-29 16:51:11,538]DEBUG 52857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-29 16:51:11,538]DEBUG 52857[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-29 16:51:11,538]DEBUG 52857[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-29 16:51:11,539]DEBUG 52858[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215]
[2018-05-29 16:51:11,539]DEBUG 52858[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,540]DEBUG 52859[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:11,540]DEBUG 52859[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-29 16:51:11,540]DEBUG 52859[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-29 16:51:11,541]DEBUG 52860[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276270715
[2018-05-29 16:51:11,541]DEBUG 52860[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4b8b3a4b] for Hibernate transaction
[2018-05-29 16:51:11,541]DEBUG 52860[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b8b3a4b]
[2018-05-29 16:51:11,541]DEBUG 52860[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-29 16:51:11,541]DEBUG 52860[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-29 16:51:11,542]DEBUG 52861[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-29 16:51:11,542]DEBUG 52861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:11,542] INFO 52861[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-29 16:51:11,543]DEBUG 52862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,543]DEBUG 52862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,549]DEBUG 52868[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,550]DEBUG 52869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,550]DEBUG 52869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,551]DEBUG 52870[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,552]DEBUG 52871[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,552]DEBUG 52871[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,553]DEBUG 52872[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,554]DEBUG 52873[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,554]DEBUG 52873[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,556]DEBUG 52875[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,557]DEBUG 52876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,557]DEBUG 52876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,558]DEBUG 52877[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,559]DEBUG 52878[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,559]DEBUG 52878[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,560]DEBUG 52879[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,561]DEBUG 52880[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,561]DEBUG 52880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,563]DEBUG 52882[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,563]DEBUG 52882[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,563]DEBUG 52882[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,564]DEBUG 52883[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,565]DEBUG 52884[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,565]DEBUG 52884[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,566]DEBUG 52885[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,566]DEBUG 52885[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,567]DEBUG 52886[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,567]DEBUG 52886[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,568]DEBUG 52887[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-29 16:51:11,568]DEBUG 52887[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,569]DEBUG 52888[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,569]DEBUG 52888[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,569]DEBUG 52888[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,571]DEBUG 52890[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-29 16:51:11,571]DEBUG 52890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,571]DEBUG 52890[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,572]DEBUG 52891[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,572]DEBUG 52891[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-29 16:51:11,573]DEBUG 52892[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:11,574]DEBUG 52893[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,574]DEBUG 52893[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,574]DEBUG 52893[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,574]DEBUG 52893[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-29 16:51:11,576]DEBUG 52895[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-29 16:51:11,576]DEBUG 52895[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,576]DEBUG 52895[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,577]DEBUG 52896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,577]DEBUG 52896[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,578]DEBUG 52897[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-29 16:51:11,579]DEBUG 52898[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,579]DEBUG 52898[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-29 16:51:11,579]DEBUG 52898[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,581]DEBUG 52900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-29 16:51:11,583]DEBUG 52902[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-29 16:51:11,583]DEBUG 52902[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,584]DEBUG 52903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,584]DEBUG 52903[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,584]DEBUG 52903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,584]DEBUG 52903[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,584]DEBUG 52903[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,585]DEBUG 52904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,586]DEBUG 52905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-29 16:51:11,587]DEBUG 52906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,587]DEBUG 52906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,587]DEBUG 52906[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,588]DEBUG 52907[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,589]DEBUG 52908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,589]DEBUG 52908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,589]DEBUG 52908[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,589]DEBUG 52908[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,589]DEBUG 52908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-29 16:51:11,590]DEBUG 52909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,591]DEBUG 52910[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,591]DEBUG 52910[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,591]DEBUG 52910[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,591]DEBUG 52910[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,591]DEBUG 52910[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,592]DEBUG 52911[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,593]DEBUG 52912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-29 16:51:11,594]DEBUG 52913[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,594]DEBUG 52913[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,594]DEBUG 52913[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,595]DEBUG 52914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,595]DEBUG 52914[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,595]DEBUG 52914[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,595]DEBUG 52914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,595]DEBUG 52914[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,596]DEBUG 52915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-29 16:51:11,597]DEBUG 52916[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,598]DEBUG 52917[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,598]DEBUG 52917[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,598]DEBUG 52917[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,598]DEBUG 52917[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,599]DEBUG 52918[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,600]DEBUG 52919[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,600]DEBUG 52919[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-29 16:51:11,601]DEBUG 52920[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,601]DEBUG 52920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,601]DEBUG 52920[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,601]DEBUG 52920[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,602]DEBUG 52921[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,603]DEBUG 52922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,603]DEBUG 52922[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,603]DEBUG 52922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,603]DEBUG 52922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-29 16:51:11,604]DEBUG 52923[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,606]DEBUG 52925[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,606]DEBUG 52925[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,606]DEBUG 52925[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,607]DEBUG 52926[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,608]DEBUG 52927[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,608]DEBUG 52927[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,608]DEBUG 52927[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-29 16:51:11,609]DEBUG 52928[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,609]DEBUG 52928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,609]DEBUG 52928[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,610]DEBUG 52929[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,611]DEBUG 52930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,611]DEBUG 52930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,611]DEBUG 52930[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,611]DEBUG 52930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,611]DEBUG 52930[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-29 16:51:11,613]DEBUG 52932[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,613]DEBUG 52932[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-29 16:51:11,613]DEBUG 52932[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-29 16:51:11,614]DEBUG 52933[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,615]DEBUG 52934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-29 16:51:11,615]DEBUG 52934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-29 16:51:11,615]DEBUG 52934[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-29 16:51:11,615]DEBUG 52934[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-29 16:51:11,616]DEBUG 52935[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-29 16:51:11,616]DEBUG 52935[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:11,616]DEBUG 52935[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-29 16:51:11,617]DEBUG 52936[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b8b3a4b]
[2018-05-29 16:51:11,617]DEBUG 52936[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-29 16:51:11,692]DEBUG 53011[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-29 16:51:11,693]DEBUG 53012[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,694]DEBUG 53013[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b8b3a4b] after transaction
[2018-05-29 16:51:11,694]DEBUG 53013[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-29 16:51:11,695]DEBUG 53014[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-29 16:51:11,695]DEBUG 53014[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-29 16:51:11,696] INFO 53015[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-29 16:51:11,697]DEBUG 53016[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@4c46f215, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-29 16:51:11,697]DEBUG 53016[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@23a4c43a testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-29 16:51:15,749] INFO 57068[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@6b556436: startup date [Tue May 29 16:50:22 EDT 2018]; root of context hierarchy
[2018-05-29 16:51:15,791] INFO 57110[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@2fdab8e4: startup date [Tue May 29 16:51:01 EDT 2018]; root of context hierarchy
[2018-05-29 16:51:15,837]DEBUG 57156[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-29 16:51:15,838] INFO 57157[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@60129b9f: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-29 16:51:15,839]DEBUG 57158[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'productDao': [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest, com.softserveinc.edu.oms.persistence.dao.UserDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-29 16:51:15,839]DEBUG 57158[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-29 16:51:15,969] INFO 57288[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@70ec9e80: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-29 16:51:15,970]DEBUG 57289[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'productDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-29 16:51:16,237]DEBUG 57556[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2018-05-29 16:51:16,238] INFO 57557[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2018-05-29 16:51:16,256] INFO 57575[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2018-05-29 16:51:16,258]DEBUG 57577[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2018-05-29 16:51:16,268] INFO 57587[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2018-05-29 16:51:16,268] INFO 57587[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2018-05-29 16:51:16,268] INFO 57587[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2018-05-29 16:51:16,270]DEBUG 57589[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2018-05-29 16:51:16,270] INFO 57589[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2018-05-29 16:51:16,266] INFO 57585[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2018-05-29 16:51:16,272]DEBUG 57591[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2018-05-29 16:51:16,272] INFO 57591[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2018-05-29 16:51:16,277]DEBUG 57596[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-29 16:51:16,278]DEBUG 57597[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-29 16:51:16,524]DEBUG 57843[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-29 16:51:16,614]DEBUG 57933[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-29 16:51:16,676]DEBUG 57995[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-29 16:51:16,676]DEBUG 57995[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:16,676]DEBUG 57995[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-29 16:51:16,736]DEBUG 58055[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-29 16:51:16,805]DEBUG 58124[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-29 16:51:16,806]DEBUG 58125[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:16,807]DEBUG 58126[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-29 16:51:16,879]DEBUG 58198[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-29 16:51:16,915]DEBUG 58234[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-29 16:51:16,915]DEBUG 58234[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:16,916]DEBUG 58235[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-29 16:51:17,039]DEBUG 58358[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-29 16:51:17,051]DEBUG 58370[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-29 16:51:17,052]DEBUG 58371[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,053]DEBUG 58372[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-29 16:51:17,078]DEBUG 58397[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-29 16:51:17,094]DEBUG 58413[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-29 16:51:17,094]DEBUG 58413[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,094]DEBUG 58413[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-29 16:51:17,102]DEBUG 58421[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-29 16:51:17,115]DEBUG 58434[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2018-05-29 16:51:17,115]DEBUG 58434[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,115]DEBUG 58434[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-29 16:51:17,124]DEBUG 58443[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-29 16:51:17,132]DEBUG 58451[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-29 16:51:17,133]DEBUG 58452[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,133]DEBUG 58452[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-29 16:51:17,143]DEBUG 58462[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-29 16:51:17,148]DEBUG 58467[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-29 16:51:17,177]DEBUG 58496[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-29 16:51:17,179]DEBUG 58498[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-29 16:51:17,179]DEBUG 58498[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,179]DEBUG 58498[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-29 16:51:17,182]DEBUG 58501[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-29 16:51:17,188]DEBUG 58507[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-29 16:51:17,194]DEBUG 58513[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-29 16:51:17,196]DEBUG 58515[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-29 16:51:17,196]DEBUG 58515[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-34cb-af' (errno: 152)
[2018-05-29 16:51:17,196]DEBUG 58515[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-29 16:51:17,198]DEBUG 58517[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-29 16:51:17,200]DEBUG 58519[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-29 16:51:17,201]DEBUG 58520[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-29 16:51:17,204]DEBUG 58523[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-29 16:51:17,205]DEBUG 58524[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-29 16:51:17,208]DEBUG 58527[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-29 16:51:17,211]DEBUG 58530[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-29 16:51:17,212]DEBUG 58531[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-29 16:51:17,214]DEBUG 58533[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-29 16:51:17,216]DEBUG 58535[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-29 16:51:17,218]DEBUG 58537[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-29 16:51:17,219] INFO 58538[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-29 16:51:17,220] INFO 58539[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://192.168.0.109:3306/oms
[2018-05-29 16:51:17,276]DEBUG 58595[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-29 16:51:17,280]DEBUG 58599[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-29 16:51:17,283] INFO 58602[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-29 16:51:17,285] INFO 58604[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://192.168.0.109:3306/oms
