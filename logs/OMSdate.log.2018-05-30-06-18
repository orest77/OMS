[2018-05-30 06:18:00,057]DEBUG 38654[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-30 06:18:00,449]DEBUG 39046[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-30 06:18:00,470]DEBUG 39067[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-30 06:18:00,492]DEBUG 39089[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-30 06:18:00,557]DEBUG 39154[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-30 06:18:00,733]DEBUG 39330[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-30 06:18:00,760]DEBUG 39357[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-30 06:18:00,990]DEBUG 39587[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-30 06:18:01,005]DEBUG 39602[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-30 06:18:01,010]DEBUG 39607[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-30 06:18:01,015]DEBUG 39612[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-30 06:18:01,020]DEBUG 39617[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-30 06:18:01,026]DEBUG 39623[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-30 06:18:01,035]DEBUG 39632[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-30 06:18:01,043]DEBUG 39640[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-30 06:18:01,047]DEBUG 39644[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-30 06:18:01,052]DEBUG 39649[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-30 06:18:01,057]DEBUG 39654[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-30 06:18:01,062]DEBUG 39659[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CardType (ID integer not null auto_increment, CardType varchar(255), CardNumber varchar(255), CardCvv2 integer, Expiration_Date varchar(255), IssueDate varchar(255), IssueNumber varchar(255), primary key (ID))
[2018-05-30 06:18:01,149]DEBUG 39746[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table CustomerTypes (ID integer not null auto_increment, Discount double precision, MaxRange double precision, MinRange double precision, TypeName varchar(255), primary key (ID))
[2018-05-30 06:18:01,486]DEBUG 40083[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Dimensions (ID integer not null auto_increment, DimensionName varchar(255), NumberOfProducts integer, primary key (ID))
[2018-05-30 06:18:01,497]DEBUG 40094[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderItems (ID integer not null auto_increment, Cost double precision, ItemPrice double precision, Quantity integer, DimensionRef integer, OrderRef integer, ProductRef integer, primary key (ID))
[2018-05-30 06:18:01,645]DEBUG 40242[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table OrderStatuses (ID integer not null auto_increment, OrederStatusName varchar(255), primary key (ID))
[2018-05-30 06:18:01,739]DEBUG 40336[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Orders (ID integer not null auto_increment, DeliveryDate datetime, IsGift bit, MaxDiscount integer, OrderDate datetime, OrderName varchar(100), OrderNumber integer unique, PreferableDeliveryDate datetime, TotalPrice double precision, Assigne integer, Customer integer, OrderStatusRef integer, primary key (ID))
[2018-05-30 06:18:01,751]DEBUG 40348[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Products (ID integer not null auto_increment, IsProductActive bit, ProductDescription varchar(255), ProductName varchar(255), ProductPrice double precision, primary key (ID))
[2018-05-30 06:18:01,863]DEBUG 40460[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Regions (ID integer not null auto_increment, RegionName varchar(255), primary key (ID))
[2018-05-30 06:18:01,889]DEBUG 40486[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Roles (ID integer not null auto_increment, RoleName varchar(255), primary key (ID))
[2018-05-30 06:18:01,900]DEBUG 40497[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - create table Users (ID integer not null auto_increment, IsUserActive bit, Balance double precision, Email varchar(255) not null, FirstName varchar(255) not null, LastName varchar(255) not null, Login varchar(255) not null, Password varchar(255) not null, CustomerTypeRef integer, RegionRef integer, RoleRef integer not null, primary key (ID))
[2018-05-30 06:18:01,913]DEBUG 40510[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD3262E1ABF7 (ProductRef), add constraint FKA2B1AD3262E1ABF7 foreign key (ProductRef) references Products (ID)
[2018-05-30 06:18:01,938]DEBUG 40535[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32A6376397 (DimensionRef), add constraint FKA2B1AD32A6376397 foreign key (DimensionRef) references Dimensions (ID)
[2018-05-30 06:18:01,958]DEBUG 40555[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems add index FKA2B1AD32BCDB3C97 (OrderRef), add constraint FKA2B1AD32BCDB3C97 foreign key (OrderRef) references Orders (ID)
[2018-05-30 06:18:01,973]DEBUG 40570[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05990DB877 (OrderStatusRef), add constraint FK8D444F05990DB877 foreign key (OrderStatusRef) references OrderStatuses (ID)
[2018-05-30 06:18:02,102]DEBUG 40699[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05C0F431DD (Assigne), add constraint FK8D444F05C0F431DD foreign key (Assigne) references Users (ID)
[2018-05-30 06:18:02,133]DEBUG 40730[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders add index FK8D444F05F161465 (Customer), add constraint FK8D444F05F161465 foreign key (Customer) references Users (ID)
[2018-05-30 06:18:02,154]DEBUG 40751[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE83D05058F (RoleRef), add constraint FK4E39DE83D05058F foreign key (RoleRef) references Roles (ID)
[2018-05-30 06:18:02,180]DEBUG 40777[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE89AEF426F (CustomerTypeRef), add constraint FK4E39DE89AEF426F foreign key (CustomerTypeRef) references CustomerTypes (ID)
[2018-05-30 06:18:02,204]DEBUG 40801[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users add index FK4E39DE8FEAD4DCF (RegionRef), add constraint FK4E39DE8FEAD4DCF foreign key (RegionRef) references Regions (ID)
[2018-05-30 06:18:02,225] INFO 40822[main] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-30 06:18:02,227]DEBUG 40824[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-30 06:18:02,228]DEBUG 40825[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-30 06:18:02,229]DEBUG 40826[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-30 06:18:02,229]DEBUG 40826[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-30 06:18:02,230]DEBUG 40827[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-30 06:18:02,230]DEBUG 40827[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-30 06:18:02,231]DEBUG 40828[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-30 06:18:02,231]DEBUG 40828[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-30 06:18:02,232]DEBUG 40829[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-30 06:18:02,233]DEBUG 40830[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-30 06:18:02,233]DEBUG 40830[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-30 06:18:02,234]DEBUG 40831[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-30 06:18:02,235]DEBUG 40832[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-30 06:18:02,235]DEBUG 40832[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-30 06:18:02,236]DEBUG 40833[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-30 06:18:02,236]DEBUG 40833[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-30 06:18:02,237]DEBUG 40834[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-30 06:18:02,238]DEBUG 40835[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-30 06:18:02,240]DEBUG 40837[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-30 06:18:02,241]DEBUG 40838[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-30 06:18:02,242]DEBUG 40839[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-30 06:18:02,243]DEBUG 40840[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-30 06:18:02,278]DEBUG 40875[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,278]DEBUG 40875[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,279]DEBUG 40876[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,279]DEBUG 40876[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,279]DEBUG 40876[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,280]DEBUG 40877[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,280]DEBUG 40877[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,280]DEBUG 40877[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,281]DEBUG 40878[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,281]DEBUG 40878[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,281]DEBUG 40878[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3995) - Processing hbm.xml files
[2018-05-30 06:18:02,282]DEBUG 40879[main] - org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:4025) - Process annotated classes
[2018-05-30 06:18:02,282]DEBUG 40879[main] - org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1466) - processing fk mappings (*ToOne and JoinedSubclass)
[2018-05-30 06:18:02,283]DEBUG 40880[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1708) - processing extends queue
[2018-05-30 06:18:02,283]DEBUG 40880[main] - org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1762) - processing extends queue
[2018-05-30 06:18:02,283]DEBUG 40880[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1711) - processing collection mappings
[2018-05-30 06:18:02,283]DEBUG 40880[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1721) - processing native query and ResultSetMapping mappings
[2018-05-30 06:18:02,284]DEBUG 40881[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1729) - processing association property references
[2018-05-30 06:18:02,284]DEBUG 40881[main] - org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1751) - processing foreign key constraints
[2018-05-30 06:18:02,284]DEBUG 40881[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Product
[2018-05-30 06:18:02,285]DEBUG 40882[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-30 06:18:02,285]DEBUG 40882[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Order
[2018-05-30 06:18:02,285]DEBUG 40882[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-30 06:18:02,285]DEBUG 40882[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-30 06:18:02,286]DEBUG 40883[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.User
[2018-05-30 06:18:02,286]DEBUG 40883[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Role
[2018-05-30 06:18:02,289]DEBUG 40886[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-30 06:18:02,289]DEBUG 40886[main] - org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(Configuration.java:1820) - resolving reference to class: com.softserveinc.edu.oms.domain.entities.Region
[2018-05-30 06:18:02,290]DEBUG 40887[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:107) - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2018-05-30 06:18:02,291]DEBUG 40888[main] - org.hibernate.validator.engine.resolver.DefaultTraversableResolver.detectJPA(DefaultTraversableResolver.java:118) - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
[2018-05-30 06:18:02,291]DEBUG 40888[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:203) - Trying to load META-INF/validation.xml for XML based Validator configuration.
[2018-05-30 06:18:02,292]DEBUG 40889[main] - org.hibernate.validator.xml.ValidationXmlParser.getValidationConfig(ValidationXmlParser.java:206) - No META-INF/validation.xml found. Using annotation based configuration only
[2018-05-30 06:18:02,311]DEBUG 40908[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,312]DEBUG 40909[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,312]DEBUG 40909[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,313]DEBUG 40910[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,313]DEBUG 40910[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,314]DEBUG 40911[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,314]DEBUG 40911[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,315]DEBUG 40912[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,315]DEBUG 40912[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,315]DEBUG 40912[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,316]DEBUG 40913[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,317]DEBUG 40914[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,317]DEBUG 40914[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,317]DEBUG 40914[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,318]DEBUG 40915[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,318]DEBUG 40915[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,319]DEBUG 40916[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,319]DEBUG 40916[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,319]DEBUG 40916[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,320]DEBUG 40917[main] - org.hibernate.id.factory.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:90) - Setting dialect [org.hibernate.dialect.MySQLDialect]
[2018-05-30 06:18:02,320]DEBUG 40917[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:539) - Checking 0 named HQL queries
[2018-05-30 06:18:02,320]DEBUG 40917[main] - org.hibernate.impl.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:559) - Checking 0 named SQL queries
[2018-05-30 06:18:02,322]DEBUG 40919[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,322]DEBUG 40919[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,324]DEBUG 40921[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
[2018-05-30 06:18:02,325]DEBUG 40922[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-30 06:18:02,325]DEBUG 40922[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-30 06:18:02,326]DEBUG 40923[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
[2018-05-30 06:18:02,327]DEBUG 40924[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-30 06:18:02,328]DEBUG 40925[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,330]DEBUG 40927[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'sessionFactory'
[2018-05-30 06:18:02,331]DEBUG 40928[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,334]DEBUG 40931[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'transactionManager'
[2018-05-30 06:18:02,335]DEBUG 40932[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,338]DEBUG 40935[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'transactionManager'
[2018-05-30 06:18:02,339]DEBUG 40936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
[2018-05-30 06:18:02,339]DEBUG 40936[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-30 06:18:02,339]DEBUG 40936[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-30 06:18:02,340]DEBUG 40937[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-30 06:18:02,340]DEBUG 40937[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
[2018-05-30 06:18:02,341]DEBUG 40938[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
[2018-05-30 06:18:02,341]DEBUG 40938[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1461) - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-30 06:18:02,342]DEBUG 40939[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-30 06:18:02,342]DEBUG 40939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,342]DEBUG 40939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
[2018-05-30 06:18:02,342]DEBUG 40939[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
[2018-05-30 06:18:02,343]DEBUG 40940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
[2018-05-30 06:18:02,343]DEBUG 40940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
[2018-05-30 06:18:02,343]DEBUG 40940[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
[2018-05-30 06:18:02,343]DEBUG 40940[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'creditCardTypeDao'
[2018-05-30 06:18:02,343]DEBUG 40940[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'creditCardTypeDao'
[2018-05-30 06:18:02,344]DEBUG 40941[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CreditCardTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,345]DEBUG 40942[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'creditCardTypeDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,345]DEBUG 40942[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'creditCardTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,346]DEBUG 40943[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,346]DEBUG 40943[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'creditCardTypeDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,346]DEBUG 40943[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,348]DEBUG 40945[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'creditCardTypeDao'
[2018-05-30 06:18:02,348]DEBUG 40945[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:02,348]DEBUG 40945[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderItemDao'
[2018-05-30 06:18:02,349]DEBUG 40946[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,349]DEBUG 40946[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderItemDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,350]DEBUG 40947[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderItemDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,350]DEBUG 40947[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,351]DEBUG 40948[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderItemDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,351]DEBUG 40948[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,353]DEBUG 40950[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderItemDao'
[2018-05-30 06:18:02,354]DEBUG 40951[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:02,354]DEBUG 40951[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'customerTypeDao'
[2018-05-30 06:18:02,355]DEBUG 40952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,355]DEBUG 40952[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'customerTypeDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,355]DEBUG 40952[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'customerTypeDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,356]DEBUG 40953[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,356]DEBUG 40953[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'customerTypeDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,357]DEBUG 40954[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,358]DEBUG 40955[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'customerTypeDao'
[2018-05-30 06:18:02,358]DEBUG 40955[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'regionDao'
[2018-05-30 06:18:02,359]DEBUG 40956[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'regionDao'
[2018-05-30 06:18:02,360]DEBUG 40957[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,360]DEBUG 40957[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'regionDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,360]DEBUG 40957[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'regionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,362]DEBUG 40959[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,362]DEBUG 40959[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'regionDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,363]DEBUG 40960[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,365]DEBUG 40962[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'regionDao'
[2018-05-30 06:18:02,366]DEBUG 40963[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'roleDao'
[2018-05-30 06:18:02,366]DEBUG 40963[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'roleDao'
[2018-05-30 06:18:02,367]DEBUG 40964[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,368]DEBUG 40965[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'roleDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,368]DEBUG 40965[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'roleDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,369]DEBUG 40966[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,369]DEBUG 40966[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'roleDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,370]DEBUG 40967[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,371]DEBUG 40968[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'roleDao'
[2018-05-30 06:18:02,372]DEBUG 40969[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:02,372]DEBUG 40969[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'dimensionDao'
[2018-05-30 06:18:02,373]DEBUG 40970[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,373]DEBUG 40970[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'dimensionDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,374]DEBUG 40971[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'dimensionDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,374]DEBUG 40971[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,375]DEBUG 40972[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'dimensionDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,376]DEBUG 40973[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,384]DEBUG 40981[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'dimensionDao'
[2018-05-30 06:18:02,385]DEBUG 40982[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderDao'
[2018-05-30 06:18:02,385]DEBUG 40982[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderDao'
[2018-05-30 06:18:02,388]DEBUG 40985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,388]DEBUG 40985[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2018-05-30 06:18:02,389]DEBUG 40986[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao]: AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2018-05-30 06:18:02,389]DEBUG 40986[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,390]DEBUG 40987[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,391]DEBUG 40988[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,391]DEBUG 40988[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,392]DEBUG 40989[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.orderStatusDao
[2018-05-30 06:18:02,393]DEBUG 40990[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:02,393]DEBUG 40990[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'orderStatusDao'
[2018-05-30 06:18:02,398]DEBUG 40995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,399]DEBUG 40996[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'orderStatusDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,399]DEBUG 40996[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderStatusDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,400]DEBUG 40997[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,400]DEBUG 40997[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderStatusDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,401]DEBUG 40998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,402]DEBUG 40999[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderStatusDao'
[2018-05-30 06:18:02,403]DEBUG 41000[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'orderStatusDao'
[2018-05-30 06:18:02,403]DEBUG 41000[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'orderDao': AutowiredFieldElement for private com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao.roleDao
[2018-05-30 06:18:02,404]DEBUG 41001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:02,404]DEBUG 41001[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'orderDao' to bean named 'roleDao'
[2018-05-30 06:18:02,404]DEBUG 41001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,407]DEBUG 41004[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'orderDao'
[2018-05-30 06:18:02,407]DEBUG 41004[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'userDao'
[2018-05-30 06:18:02,407]DEBUG 41004[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'userDao'
[2018-05-30 06:18:02,408]DEBUG 41005[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.UserDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,409]DEBUG 41006[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'userDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,409]DEBUG 41006[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'userDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,409]DEBUG 41006[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,409]DEBUG 41006[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'userDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,410]DEBUG 41007[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,411]DEBUG 41008[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'userDao'
[2018-05-30 06:18:02,411]DEBUG 41008[main] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:214) - Creating shared instance of singleton bean 'productDao'
[2018-05-30 06:18:02,411]DEBUG 41008[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:430) - Creating instance of bean 'productDao'
[2018-05-30 06:18:02,412]DEBUG 41009[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao]: AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,412]DEBUG 41009[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504) - Eagerly caching bean 'productDao' to allow for resolving potential circular references
[2018-05-30 06:18:02,413]DEBUG 41010[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'productDao': AutowiredMethodElement for public void com.softserveinc.edu.oms.persistence.dao.HibernateDao.setSessionFactory(org.hibernate.SessionFactory)
[2018-05-30 06:18:02,413]DEBUG 41010[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,413]DEBUG 41010[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'productDao' to bean named 'sessionFactory'
[2018-05-30 06:18:02,414]DEBUG 41011[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,416]DEBUG 41013[main] - org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458) - Finished creating instance of bean 'productDao'
[2018-05-30 06:18:02,416]DEBUG 41013[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:02,416]DEBUG 41013[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,416]DEBUG 41013[main] - org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:827) - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1781d71a]
[2018-05-30 06:18:02,416]DEBUG 41013[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-30 06:18:02,420]DEBUG 41017[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:02,420]DEBUG 41017[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:02,421]DEBUG 41018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:02,421]DEBUG 41018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:02,421]DEBUG 41018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:02,421]DEBUG 41018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:02,421]DEBUG 41018[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:02,422]DEBUG 41019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:02,422]DEBUG 41019[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:02,424]DEBUG 41021[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:02,424]DEBUG 41021[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:02,425]DEBUG 41022[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:02,425]DEBUG 41022[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'customerTypeDao'
[2018-05-30 06:18:02,425]DEBUG 41022[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:02,425]DEBUG 41022[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:02,426]DEBUG 41023[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'dimensionDao'
[2018-05-30 06:18:02,426]DEBUG 41023[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:02,426]DEBUG 41023[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:02,426]DEBUG 41023[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderDao'
[2018-05-30 06:18:02,426]DEBUG 41023[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:02,427]DEBUG 41024[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:02,427]DEBUG 41024[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderItemDao'
[2018-05-30 06:18:02,427]DEBUG 41024[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:02,427]DEBUG 41024[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:02,428]DEBUG 41025[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'orderStatusDao'
[2018-05-30 06:18:02,428]DEBUG 41025[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:02,428]DEBUG 41025[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:02,428]DEBUG 41025[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'productDao'
[2018-05-30 06:18:02,428]DEBUG 41025[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'regionDao'
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'roleDao'
[2018-05-30 06:18:02,429]DEBUG 41026[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:02,430]DEBUG 41027[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:02,430]DEBUG 41027[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'userDao'
[2018-05-30 06:18:02,430]DEBUG 41027[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:02,430]DEBUG 41027[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,431]DEBUG 41028[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' to bean named 'sessionFactory'
[2018-05-30 06:18:02,431]DEBUG 41028[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,431]DEBUG 41028[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,431]DEBUG 41028[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:02,432]DEBUG 41029[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43]
[2018-05-30 06:18:02,432]DEBUG 41029[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
[2018-05-30 06:18:02,433]DEBUG 41030[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.setUp()
[2018-05-30 06:18:02,433]DEBUG 41030[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,433]DEBUG 41030[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.tearDown()
[2018-05-30 06:18:02,433]DEBUG 41030[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,433]DEBUG 41030[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindByID()
[2018-05-30 06:18:02,434]DEBUG 41031[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,434]DEBUG 41031[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindAll()
[2018-05-30 06:18:02,436]DEBUG 41033[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,436]DEBUG 41033[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testInsertOrUpdate()
[2018-05-30 06:18:02,436]DEBUG 41033[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,436]DEBUG 41033[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testDelete()
[2018-05-30 06:18:02,436]DEBUG 41033[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest.testFindOrderStatusByName()
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-30 06:18:02,437]DEBUG 41034[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-30 06:18:02,438]DEBUG 41035[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,439]DEBUG 41036[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-30 06:18:02,440]DEBUG 41037[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-30 06:18:02,441]DEBUG 41038[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,441]DEBUG 41038[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:02,441]DEBUG 41038[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-30 06:18:02,443]DEBUG 41040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-30 06:18:02,443]DEBUG 41040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-30 06:18:02,443]DEBUG 41040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-30 06:18:02,443]DEBUG 41040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-30 06:18:02,443]DEBUG 41040[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-30 06:18:02,444]DEBUG 41041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-30 06:18:02,444]DEBUG 41041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-30 06:18:02,444]DEBUG 41041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-30 06:18:02,444]DEBUG 41041[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-30 06:18:02,602]DEBUG 41199[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,603]DEBUG 41200[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,603]DEBUG 41200[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,604]DEBUG 41201[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@63e78458 transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,604]DEBUG 41201[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:02,605]DEBUG 41202[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,606]DEBUG 41203[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754826
[2018-05-30 06:18:02,606]DEBUG 41203[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@253de8da] for Hibernate transaction
[2018-05-30 06:18:02,607]DEBUG 41204[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@253de8da]
[2018-05-30 06:18:02,607]DEBUG 41204[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:02,608]DEBUG 41205[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:02,608]DEBUG 41205[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:02,609]DEBUG 41206[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,610] INFO 41207[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:02,611]DEBUG 41208[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,616]DEBUG 41213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,617]DEBUG 41214[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,699]DEBUG 41296[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:02,700]DEBUG 41297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,703]DEBUG 41300[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,704]DEBUG 41301[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,705]DEBUG 41302[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,711]DEBUG 41308[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:02,713]DEBUG 41310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,715]DEBUG 41312[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,716]DEBUG 41313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,717]DEBUG 41314[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,721]DEBUG 41318[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:02,722]DEBUG 41319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,728]DEBUG 41325[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderItem
[2018-05-30 06:18:02,743]DEBUG 41340[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderItem'

[2018-05-30 06:18:02,744]DEBUG 41341[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,744]DEBUG 41341[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,744]DEBUG 41341[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderItem (no alias) -> orderitem0_
[2018-05-30 06:18:02,745]DEBUG 41342[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,745]DEBUG 41342[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,746]DEBUG 41343[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderItems)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderitem0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderItems' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderItems,tableAlias=orderitem0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderItem}}

[2018-05-30 06:18:02,746]DEBUG 41343[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,746]DEBUG 41343[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,747]DEBUG 41344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,747]DEBUG 41344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,747]DEBUG 41344[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,748]DEBUG 41345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,748]DEBUG 41345[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,748]DEBUG 41345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,748]DEBUG 41345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,749]DEBUG 41346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,749]DEBUG 41346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,750]DEBUG 41347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:02,758]DEBUG 41355[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,760]DEBUG 41357[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Dimension
[2018-05-30 06:18:02,762]DEBUG 41359[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Dimension'

[2018-05-30 06:18:02,762]DEBUG 41359[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,763]DEBUG 41360[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,763]DEBUG 41360[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Dimension (no alias) -> dimension0_
[2018-05-30 06:18:02,763]DEBUG 41360[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,763]DEBUG 41360[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,772]DEBUG 41369[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Dimensions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[dimension0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Dimensions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Dimensions,tableAlias=dimension0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Dimension}}

[2018-05-30 06:18:02,773]DEBUG 41370[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,773]DEBUG 41370[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,774]DEBUG 41371[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,775]DEBUG 41372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,775]DEBUG 41372[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,775]DEBUG 41372[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,775]DEBUG 41372[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:02,777]DEBUG 41374[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,778]DEBUG 41375[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Product
[2018-05-30 06:18:02,780]DEBUG 41377[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Product'

[2018-05-30 06:18:02,780]DEBUG 41377[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,780]DEBUG 41377[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,781]DEBUG 41378[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Product (no alias) -> product0_
[2018-05-30 06:18:02,782]DEBUG 41379[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,782]DEBUG 41379[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,782]DEBUG 41379[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Products)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Products' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Products,tableAlias=product0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Product}}

[2018-05-30 06:18:02,783]DEBUG 41380[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,783]DEBUG 41380[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,783]DEBUG 41380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,783]DEBUG 41380[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,784]DEBUG 41381[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:02,792]DEBUG 41389[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,793]DEBUG 41390[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Order
[2018-05-30 06:18:02,794]DEBUG 41391[main] - org.hibernate.hql.ast.HqlParser.weakKeywords(HqlParser.java:340) - weakKeywords() : new LT(1) token - ["Order",<126> previously: <41>,line=1,col=54,possibleID=true]
[2018-05-30 06:18:02,795]DEBUG 41392[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Order'

[2018-05-30 06:18:02,795]DEBUG 41392[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,795]DEBUG 41392[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,795]DEBUG 41392[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Order (no alias) -> order0_
[2018-05-30 06:18:02,796]DEBUG 41393[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,796]DEBUG 41393[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,796]DEBUG 41393[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Orders)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[order0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Orders' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Orders,tableAlias=order0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Order}}

[2018-05-30 06:18:02,796]DEBUG 41393[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,796]DEBUG 41393[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,797]DEBUG 41394[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,798]DEBUG 41395[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,798]DEBUG 41395[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,798]DEBUG 41395[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:02,799]DEBUG 41396[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,800]DEBUG 41397[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.OrderStatus
[2018-05-30 06:18:02,802]DEBUG 41399[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'OrderStatus'

[2018-05-30 06:18:02,802]DEBUG 41399[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,802]DEBUG 41399[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,803]DEBUG 41400[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.OrderStatus (no alias) -> orderstatu0_
[2018-05-30 06:18:02,803]DEBUG 41400[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,803]DEBUG 41400[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,803]DEBUG 41400[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (OrderStatuses)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[orderstatu0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'OrderStatuses' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OrderStatuses,tableAlias=orderstatu0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.OrderStatus}}

[2018-05-30 06:18:02,804]DEBUG 41401[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,804]DEBUG 41401[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,804]DEBUG 41401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,804]DEBUG 41401[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,805]DEBUG 41402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,805]DEBUG 41402[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,805]DEBUG 41402[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,805]DEBUG 41402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,805]DEBUG 41402[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,812]DEBUG 41409[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,812]DEBUG 41409[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,812]DEBUG 41409[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:02,813]DEBUG 41410[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,814]DEBUG 41411[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.User
[2018-05-30 06:18:02,816]DEBUG 41413[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'User'

[2018-05-30 06:18:02,816]DEBUG 41413[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,817]DEBUG 41414[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,817]DEBUG 41414[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.User (no alias) -> user0_
[2018-05-30 06:18:02,817]DEBUG 41414[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,817]DEBUG 41414[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,818]DEBUG 41415[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Users)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Users' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Users,tableAlias=user0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.User}}

[2018-05-30 06:18:02,818]DEBUG 41415[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,818]DEBUG 41415[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,819]DEBUG 41416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,819]DEBUG 41416[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,819]DEBUG 41416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,819]DEBUG 41416[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,820]DEBUG 41417[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,820]DEBUG 41417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,820]DEBUG 41417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,820]DEBUG 41417[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,820]DEBUG 41417[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,821]DEBUG 41418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:02,822]DEBUG 41419[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,824]DEBUG 41421[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.CustomerType
[2018-05-30 06:18:02,825]DEBUG 41422[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'CustomerType'

[2018-05-30 06:18:02,825]DEBUG 41422[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,826]DEBUG 41423[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,827]DEBUG 41424[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.CustomerType (no alias) -> customerty0_
[2018-05-30 06:18:02,827]DEBUG 41424[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,827]DEBUG 41424[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,828]DEBUG 41425[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (CustomerTypes)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[customerty0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'CustomerTypes' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=CustomerTypes,tableAlias=customerty0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.CustomerType}}

[2018-05-30 06:18:02,828]DEBUG 41425[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,828]DEBUG 41425[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,828]DEBUG 41425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,828]DEBUG 41425[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,829]DEBUG 41426[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,830]DEBUG 41427[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:02,835]DEBUG 41432[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,836]DEBUG 41433[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Region
[2018-05-30 06:18:02,838]DEBUG 41435[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Region'

[2018-05-30 06:18:02,838]DEBUG 41435[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,838]DEBUG 41435[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,839]DEBUG 41436[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Region (no alias) -> region0_
[2018-05-30 06:18:02,839]DEBUG 41436[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,839]DEBUG 41436[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,839]DEBUG 41436[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Regions)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[region0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Regions' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Regions,tableAlias=region0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Region}}

[2018-05-30 06:18:02,840]DEBUG 41437[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,840]DEBUG 41437[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,840]DEBUG 41437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,840]DEBUG 41437[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,840]DEBUG 41437[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,841]DEBUG 41438[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:02,842]DEBUG 41439[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,844]DEBUG 41441[main] - org.hibernate.hql.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:272) - parse() - HQL: Delete From com.softserveinc.edu.oms.domain.entities.Role
[2018-05-30 06:18:02,845]DEBUG 41442[main] - org.hibernate.hql.ast.QueryTranslatorImpl.showHqlAst(QueryTranslatorImpl.java:291) - --- HQL AST ---
 \-[DELETE] Node: 'Delete'
    \-[FROM] Node: 'FROM'
       \-[RANGE] Node: 'RANGE'
          \-[DOT] Node: '.'
             +-[DOT] Node: '.'
             |  +-[DOT] Node: '.'
             |  |  +-[DOT] Node: '.'
             |  |  |  +-[DOT] Node: '.'
             |  |  |  |  +-[DOT] Node: '.'
             |  |  |  |  |  +-[IDENT] Node: 'com'
             |  |  |  |  |  \-[IDENT] Node: 'softserveinc'
             |  |  |  |  \-[IDENT] Node: 'edu'
             |  |  |  \-[IDENT] Node: 'oms'
             |  |  \-[IDENT] Node: 'domain'
             |  \-[IDENT] Node: 'entities'
             \-[IDENT] Node: 'Role'

[2018-05-30 06:18:02,846]DEBUG 41443[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,846]DEBUG 41443[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatement(HqlSqlBaseWalker.java:111) - delete << begin [level=1, statement=delete]
[2018-05-30 06:18:02,846]DEBUG 41443[main] - org.hibernate.hql.ast.tree.FromElement.doInitialize(FromElement.java:157) - FromClause{level=1} :  com.softserveinc.edu.oms.domain.entities.Role (no alias) -> role0_
[2018-05-30 06:18:02,849]DEBUG 41446[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.beforeStatementCompletion(HqlSqlBaseWalker.java:117) - delete : finishing up [level=1, statement=delete]
[2018-05-30 06:18:02,849]DEBUG 41446[main] - org.hibernate.hql.antlr.HqlSqlBaseWalker.afterStatementCompletion(HqlSqlBaseWalker.java:123) - delete >> end [level=1, statement=delete]
[2018-05-30 06:18:02,849]DEBUG 41446[main] - org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:258) - --- SQL AST ---
 \-[DELETE] DeleteStatement: 'Delete'  querySpaces (Roles)
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Roles' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Roles,tableAlias=role0_,origin=null,columns={,className=com.softserveinc.edu.oms.domain.entities.Role}}

[2018-05-30 06:18:02,850]DEBUG 41447[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,850]DEBUG 41447[main] - org.hibernate.hql.ast.ErrorCounter.throwQueryException(ErrorCounter.java:91) - throwQueryException() : no errors
[2018-05-30 06:18:02,850]DEBUG 41447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,850]DEBUG 41447[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,850]DEBUG 41447[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=1, orderStatusName=Delivered}
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=2, orderStatusName=In process}
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=3, orderStatusName=Ordered}
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,851]DEBUG 41448[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:02,853]DEBUG 41450[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,853]DEBUG 41450[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,853]DEBUG 41450[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:02,853]DEBUG 41450[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@253de8da]
[2018-05-30 06:18:02,853]DEBUG 41450[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:02,891]DEBUG 41488[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:02,892]DEBUG 41489[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:02,893]DEBUG 41490[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@253de8da] after transaction
[2018-05-30 06:18:02,893]DEBUG 41490[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:02,893]DEBUG 41490[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:02,894]DEBUG 41491[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:02,895] INFO 41492[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,896]DEBUG 41493[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@73d81b43, testMethod = testFindByID@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:02,897]DEBUG 41494[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,897]DEBUG 41494[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,898]DEBUG 41495[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:02,899]DEBUG 41496[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:02,899]DEBUG 41496[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:02,900]DEBUG 41497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:02,900]DEBUG 41497[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:02,900]DEBUG 41497[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:02,901]DEBUG 41498[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:02,901]DEBUG 41498[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:02,902]DEBUG 41499[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:02,902]DEBUG 41499[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:02,903]DEBUG 41500[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:02,903]DEBUG 41500[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:02,904]DEBUG 41501[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:02,904]DEBUG 41501[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:02,904]DEBUG 41501[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:02,905]DEBUG 41502[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:02,905]DEBUG 41502[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:02,906]DEBUG 41503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:02,906]DEBUG 41503[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:02,906]DEBUG 41503[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:02,907]DEBUG 41504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,907]DEBUG 41504[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,908]DEBUG 41505[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:02,908]DEBUG 41505[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3]
[2018-05-30 06:18:02,910]DEBUG 41507[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,910]DEBUG 41507[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,910]DEBUG 41507[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:02,911]DEBUG 41508[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,912]DEBUG 41509[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754829
[2018-05-30 06:18:02,912]DEBUG 41509[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@523cf4b7] for Hibernate transaction
[2018-05-30 06:18:02,913]DEBUG 41510[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@523cf4b7]
[2018-05-30 06:18:02,913]DEBUG 41510[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:02,914]DEBUG 41511[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:02,914]DEBUG 41511[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:02,915]DEBUG 41512[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,915] INFO 41512[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:02,916]DEBUG 41513[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,916]DEBUG 41513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,917]DEBUG 41514[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,919]DEBUG 41516[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:02,919]DEBUG 41516[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,920]DEBUG 41517[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,920]DEBUG 41517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,921]DEBUG 41518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,922]DEBUG 41519[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:02,923]DEBUG 41520[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,923]DEBUG 41520[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,923]DEBUG 41520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,924]DEBUG 41521[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,926]DEBUG 41523[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:02,926]DEBUG 41523[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,927]DEBUG 41524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,927]DEBUG 41524[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,928]DEBUG 41525[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,928]DEBUG 41525[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,928]DEBUG 41525[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,931]DEBUG 41528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,931]DEBUG 41528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,931]DEBUG 41528[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,932]DEBUG 41529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,932]DEBUG 41529[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2018-05-30 06:18:02,934]DEBUG 41531[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:02,934]DEBUG 41531[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#4]
[2018-05-30 06:18:02,935]DEBUG 41532[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#5]
[2018-05-30 06:18:02,935]DEBUG 41532[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#6]
[2018-05-30 06:18:02,935]DEBUG 41532[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:02,936]DEBUG 41533[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,936]DEBUG 41533[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:02,936]DEBUG 41533[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,937]DEBUG 41534[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,937]DEBUG 41534[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,937]DEBUG 41534[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,938]DEBUG 41535[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,938]DEBUG 41535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,938]DEBUG 41535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,938]DEBUG 41535[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,938]DEBUG 41535[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,939]DEBUG 41536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:02,940]DEBUG 41537[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,940]DEBUG 41537[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,941]DEBUG 41538[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,941]DEBUG 41538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,941]DEBUG 41538[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,942]DEBUG 41539[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,942]DEBUG 41539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,942]DEBUG 41539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,942]DEBUG 41539[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,942]DEBUG 41539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,943]DEBUG 41540[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:02,944]DEBUG 41541[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,945]DEBUG 41542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,945]DEBUG 41542[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,945]DEBUG 41542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,945]DEBUG 41542[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,946]DEBUG 41543[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,946]DEBUG 41543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,946]DEBUG 41543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,946]DEBUG 41543[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,947]DEBUG 41544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,947]DEBUG 41544[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:02,948]DEBUG 41545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,948]DEBUG 41545[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,949]DEBUG 41546[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,949]DEBUG 41546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,949]DEBUG 41546[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,949]DEBUG 41546[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,949]DEBUG 41546[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,950]DEBUG 41547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,950]DEBUG 41547[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,950]DEBUG 41547[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,950]DEBUG 41547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:02,951]DEBUG 41548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,952]DEBUG 41549[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,953]DEBUG 41550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,953]DEBUG 41550[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,953]DEBUG 41550[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,953]DEBUG 41550[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:02,954]DEBUG 41551[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,954]DEBUG 41551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,955]DEBUG 41552[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,955]DEBUG 41552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,955]DEBUG 41552[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,955]DEBUG 41552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,955]DEBUG 41552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,956]DEBUG 41553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,956]DEBUG 41553[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,956]DEBUG 41553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,956]DEBUG 41553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:02,957]DEBUG 41554[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,957]DEBUG 41554[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,958]DEBUG 41555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,958]DEBUG 41555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,958]DEBUG 41555[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,958]DEBUG 41555[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,958]DEBUG 41555[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,959]DEBUG 41556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,959]DEBUG 41556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,959]DEBUG 41556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,959]DEBUG 41556[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:02,960]DEBUG 41557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,960]DEBUG 41557[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,962]DEBUG 41559[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,963]DEBUG 41560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,963]DEBUG 41560[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,963]DEBUG 41560[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,963]DEBUG 41560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,963]DEBUG 41560[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,964]DEBUG 41561[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,964]DEBUG 41561[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,964]DEBUG 41561[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:02,965]DEBUG 41562[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,965]DEBUG 41562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,965]DEBUG 41562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=6, orderStatusName=Ordered}
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=5, orderStatusName=In process}
[2018-05-30 06:18:02,966]DEBUG 41563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=4, orderStatusName=Delivered}
[2018-05-30 06:18:02,967]DEBUG 41564[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,967]DEBUG 41564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:02,968]DEBUG 41565[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,968]DEBUG 41565[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,968]DEBUG 41565[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:02,969]DEBUG 41566[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@523cf4b7]
[2018-05-30 06:18:02,969]DEBUG 41566[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:02,971]DEBUG 41568[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:02,972]DEBUG 41569[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:02,972]DEBUG 41569[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@523cf4b7] after transaction
[2018-05-30 06:18:02,972]DEBUG 41569[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:02,973]DEBUG 41570[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:02,973]DEBUG 41570[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:02,973] INFO 41570[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,974]DEBUG 41571[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@64c16ed3, testMethod = testFindAll@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:02,974]DEBUG 41571[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,974]DEBUG 41571[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:02,975]DEBUG 41572[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:02,976]DEBUG 41573[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:02,977]DEBUG 41574[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:02,978]DEBUG 41575[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:02,978]DEBUG 41575[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4]
[2018-05-30 06:18:02,978]DEBUG 41575[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,978]DEBUG 41575[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754829
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@28980cec] for Hibernate transaction
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@28980cec]
[2018-05-30 06:18:02,979]DEBUG 41576[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:02,980]DEBUG 41577[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:02,980]DEBUG 41577[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:02,980]DEBUG 41577[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:02,980] INFO 41577[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:02,980]DEBUG 41577[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,980]DEBUG 41577[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,981]DEBUG 41578[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,982]DEBUG 41579[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:02,982]DEBUG 41579[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,983]DEBUG 41580[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,983]DEBUG 41580[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,983]DEBUG 41580[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,984]DEBUG 41581[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-30 06:18:02,985]DEBUG 41582[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,985]DEBUG 41582[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:02,986]DEBUG 41583[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,986]DEBUG 41583[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:02,988]DEBUG 41585[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-30 06:18:02,988]DEBUG 41585[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,989]DEBUG 41586[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,989]DEBUG 41586[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,991]DEBUG 41588[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,991]DEBUG 41588[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,991]DEBUG 41588[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,991]DEBUG 41588[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:02,992]DEBUG 41589[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:02,992]DEBUG 41589[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:02,992]DEBUG 41589[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,992]DEBUG 41589[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_
[2018-05-30 06:18:02,993]DEBUG 41590[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:02,994]DEBUG 41591[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#7]
[2018-05-30 06:18:02,994]DEBUG 41591[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#8]
[2018-05-30 06:18:02,995]DEBUG 41592[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#9]
[2018-05-30 06:18:02,995]DEBUG 41592[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:02,995]DEBUG 41592[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,995]DEBUG 41592[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:02,995]DEBUG 41592[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:02,996]DEBUG 41593[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:02,997]DEBUG 41594[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:02,997]DEBUG 41594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:02,997]DEBUG 41594[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:02,998]DEBUG 41595[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:02,998]DEBUG 41595[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:02,999]DEBUG 41596[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,000]DEBUG 41597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,000]DEBUG 41597[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,000]DEBUG 41597[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:03,001]DEBUG 41598[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,001]DEBUG 41598[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,002]DEBUG 41599[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,002]DEBUG 41599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,002]DEBUG 41599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,002]DEBUG 41599[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,002]DEBUG 41599[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,003]DEBUG 41600[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,003]DEBUG 41600[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,003]DEBUG 41600[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,004]DEBUG 41601[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:03,005]DEBUG 41602[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,005]DEBUG 41602[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,005]DEBUG 41602[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,006]DEBUG 41603[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,007]DEBUG 41604[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,007]DEBUG 41604[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:03,008]DEBUG 41605[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,008]DEBUG 41605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,009]DEBUG 41606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,009]DEBUG 41606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,009]DEBUG 41606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,009]DEBUG 41606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,009]DEBUG 41606[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,010]DEBUG 41607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,010]DEBUG 41607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,010]DEBUG 41607[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,010]DEBUG 41607[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:03,011]DEBUG 41608[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,011]DEBUG 41608[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,012]DEBUG 41609[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,012]DEBUG 41609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,012]DEBUG 41609[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,012]DEBUG 41609[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,012]DEBUG 41609[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,013]DEBUG 41610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,013]DEBUG 41610[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,013]DEBUG 41610[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,013]DEBUG 41610[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:03,014]DEBUG 41611[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,014]DEBUG 41611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,015]DEBUG 41612[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,015]DEBUG 41612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,015]DEBUG 41612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,015]DEBUG 41612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,015]DEBUG 41612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,016]DEBUG 41613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,016]DEBUG 41613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,016]DEBUG 41613[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,018]DEBUG 41615[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:03,019]DEBUG 41616[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,019]DEBUG 41616[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,020]DEBUG 41617[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,020]DEBUG 41617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,020]DEBUG 41617[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,020]DEBUG 41617[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,020]DEBUG 41617[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,021]DEBUG 41618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,021]DEBUG 41618[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,021]DEBUG 41618[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,021]DEBUG 41618[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:03,022]DEBUG 41619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,023]DEBUG 41620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=9, orderStatusName=Ordered}
[2018-05-30 06:18:03,024]DEBUG 41621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=8, orderStatusName=In process}
[2018-05-30 06:18:03,024]DEBUG 41621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=7, orderStatusName=Delivered}
[2018-05-30 06:18:03,024]DEBUG 41621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,024]DEBUG 41621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,025]DEBUG 41622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,025]DEBUG 41622[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,026]DEBUG 41623[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,026]DEBUG 41623[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@28980cec]
[2018-05-30 06:18:03,026]DEBUG 41623[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,167]DEBUG 41764[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,168]DEBUG 41765[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,168]DEBUG 41765[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@28980cec] after transaction
[2018-05-30 06:18:03,169]DEBUG 41766[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,169]DEBUG 41766[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,170]DEBUG 41767[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,171] INFO 41768[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,172]DEBUG 41769[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@3e663ed4, testMethod = testInsertOrUpdate@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,173]DEBUG 41770[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,173]DEBUG 41770[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,174]DEBUG 41771[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,174]DEBUG 41771[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,175]DEBUG 41772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,175]DEBUG 41772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,176]DEBUG 41773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,176]DEBUG 41773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,177]DEBUG 41774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,177]DEBUG 41774[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,177]DEBUG 41774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,178]DEBUG 41775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,178]DEBUG 41775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,179]DEBUG 41776[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,179]DEBUG 41776[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,181]DEBUG 41778[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,181]DEBUG 41778[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,182]DEBUG 41779[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,182]DEBUG 41779[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,183]DEBUG 41780[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,183]DEBUG 41780[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,184]DEBUG 41781[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,184]DEBUG 41781[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,185]DEBUG 41782[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,185]DEBUG 41782[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,186]DEBUG 41783[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b]
[2018-05-30 06:18:03,187]DEBUG 41784[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,188]DEBUG 41785[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,188]DEBUG 41785[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,189]DEBUG 41786[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,189]DEBUG 41786[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754831
[2018-05-30 06:18:03,190]DEBUG 41787[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@112df22b] for Hibernate transaction
[2018-05-30 06:18:03,190]DEBUG 41787[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@112df22b]
[2018-05-30 06:18:03,191]DEBUG 41788[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,191]DEBUG 41788[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,192]DEBUG 41789[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,192]DEBUG 41789[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,193] INFO 41790[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:03,194]DEBUG 41791[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,195]DEBUG 41792[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,195]DEBUG 41792[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,199]DEBUG 41796[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-30 06:18:03,200]DEBUG 41797[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,200]DEBUG 41797[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,201]DEBUG 41798[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,202]DEBUG 41799[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,205]DEBUG 41802[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-30 06:18:03,206]DEBUG 41803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,208]DEBUG 41805[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,209]DEBUG 41806[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,210]DEBUG 41807[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,213]DEBUG 41810[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-30 06:18:03,218]DEBUG 41815[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,220]DEBUG 41817[main] - org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:442) - load request found matching entity in context, but it is scheduled for removal; returning null
[2018-05-30 06:18:03,221]DEBUG 41818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,221]DEBUG 41818[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,222]DEBUG 41819[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-30 06:18:03,223]DEBUG 41820[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,223]DEBUG 41820[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,223]DEBUG 41820[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-30 06:18:03,224]DEBUG 41821[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,224]DEBUG 41821[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,225]DEBUG 41822[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,225]DEBUG 41822[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:03,228]DEBUG 41825[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,229]DEBUG 41826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,229]DEBUG 41826[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,230]DEBUG 41827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-30 06:18:03,230]DEBUG 41827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,231]DEBUG 41828[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,231]DEBUG 41828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-30 06:18:03,232]DEBUG 41829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,232]DEBUG 41829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,232]DEBUG 41829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,233]DEBUG 41830[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:03,235]DEBUG 41832[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,236]DEBUG 41833[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,237]DEBUG 41834[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,238]DEBUG 41835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-30 06:18:03,238]DEBUG 41835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,238]DEBUG 41835[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,239]DEBUG 41836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-30 06:18:03,239]DEBUG 41836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,240]DEBUG 41837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,240]DEBUG 41837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,241]DEBUG 41838[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:03,243]DEBUG 41840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,244]DEBUG 41841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,244]DEBUG 41841[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,245]DEBUG 41842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-30 06:18:03,245]DEBUG 41842[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,246]DEBUG 41843[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,246]DEBUG 41843[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-30 06:18:03,247]DEBUG 41844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,247]DEBUG 41844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,248]DEBUG 41845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,248]DEBUG 41845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:03,251]DEBUG 41848[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,252]DEBUG 41849[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,253]DEBUG 41850[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,254]DEBUG 41851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 3 objects
[2018-05-30 06:18:03,254]DEBUG 41851[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,255]DEBUG 41852[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,255]DEBUG 41852[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=10, orderStatusName=Delivered}
[2018-05-30 06:18:03,256]DEBUG 41853[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,257]DEBUG 41854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,257]DEBUG 41854[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2018-05-30 06:18:03,258]DEBUG 41855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,259]DEBUG 41856[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2018-05-30 06:18:03,260]DEBUG 41857[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,262]DEBUG 41859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,263]DEBUG 41860[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,264]DEBUG 41861[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:03,267]DEBUG 41864[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,268]DEBUG 41865[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,269]DEBUG 41866[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,270]DEBUG 41867[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-30 06:18:03,270]DEBUG 41867[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,271]DEBUG 41868[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,271]DEBUG 41868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,272]DEBUG 41869[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,272]DEBUG 41869[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,273]DEBUG 41870[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:03,276]DEBUG 41873[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,276]DEBUG 41873[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,277]DEBUG 41874[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,278]DEBUG 41875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-30 06:18:03,278]DEBUG 41875[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,278]DEBUG 41875[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,279]DEBUG 41876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,279]DEBUG 41876[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,279]DEBUG 41876[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,279]DEBUG 41876[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:03,281]DEBUG 41878[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,281]DEBUG 41878[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,281]DEBUG 41878[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,282]DEBUG 41879[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-30 06:18:03,282]DEBUG 41879[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,282]DEBUG 41879[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,282]DEBUG 41879[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,283]DEBUG 41880[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,283]DEBUG 41880[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,283]DEBUG 41880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:03,287]DEBUG 41884[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,287]DEBUG 41884[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,288]DEBUG 41885[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,288]DEBUG 41885[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[2018-05-30 06:18:03,289]DEBUG 41886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,289]DEBUG 41886[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,289]DEBUG 41886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=12, orderStatusName=Ordered}
[2018-05-30 06:18:03,290]DEBUG 41887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=11, orderStatusName=In process}
[2018-05-30 06:18:03,290]DEBUG 41887[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,291]DEBUG 41888[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,292]DEBUG 41889[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,292]DEBUG 41889[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,293]DEBUG 41890[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,293]DEBUG 41890[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@112df22b]
[2018-05-30 06:18:03,293]DEBUG 41890[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,295]DEBUG 41892[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,296]DEBUG 41893[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,296]DEBUG 41893[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@112df22b] after transaction
[2018-05-30 06:18:03,296]DEBUG 41893[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,297]DEBUG 41894[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,297]DEBUG 41894[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,298] INFO 41895[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,299]DEBUG 41896[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@4b4b72b, testMethod = testDelete@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,300]DEBUG 41897[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,300]DEBUG 41897[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,300]DEBUG 41897[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,301]DEBUG 41898[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,301]DEBUG 41898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,301]DEBUG 41898[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,301]DEBUG 41898[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,302]DEBUG 41899[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,302]DEBUG 41899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,302]DEBUG 41899[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,302]DEBUG 41899[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,303]DEBUG 41900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,303]DEBUG 41900[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,303]DEBUG 41900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,303]DEBUG 41900[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,303]DEBUG 41900[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,304]DEBUG 41901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,304]DEBUG 41901[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,304]DEBUG 41901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,304]DEBUG 41901[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,304]DEBUG 41901[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,305]DEBUG 41902[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,305]DEBUG 41902[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,305]DEBUG 41902[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,306]DEBUG 41903[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,306]DEBUG 41903[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94]
[2018-05-30 06:18:03,307]DEBUG 41904[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindOrderStatusByName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,307]DEBUG 41904[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,308]DEBUG 41905[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,308]DEBUG 41905[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindOrderStatusByName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,308]DEBUG 41905[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754833
[2018-05-30 06:18:03,308]DEBUG 41905[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7e225715] for Hibernate transaction
[2018-05-30 06:18:03,309]DEBUG 41906[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e225715]
[2018-05-30 06:18:03,309]DEBUG 41906[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,309]DEBUG 41906[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,309]DEBUG 41906[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,309]DEBUG 41906[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,309] INFO 41906[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:03,310]DEBUG 41907[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,310]DEBUG 41907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,310]DEBUG 41907[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,311]DEBUG 41908[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-30 06:18:03,312]DEBUG 41909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,312]DEBUG 41909[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,312]DEBUG 41909[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,313]DEBUG 41910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,314]DEBUG 41911[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-30 06:18:03,314]DEBUG 41911[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,315]DEBUG 41912[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,315]DEBUG 41912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,315]DEBUG 41912[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,316]DEBUG 41913[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2018-05-30 06:18:03,317]DEBUG 41914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,317]DEBUG 41914[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,317]DEBUG 41914[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,318]DEBUG 41915[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,319]DEBUG 41916[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2018-05-30 06:18:03,319]DEBUG 41916[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,320]DEBUG 41917[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,320]DEBUG 41917[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,321]DEBUG 41918[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,321]DEBUG 41918[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,321]DEBUG 41918[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,323]DEBUG 41920[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID24_0_, this_.OrederStatusName as OrederSt2_24_0_ from OrderStatuses this_ where this_.OrederStatusName=?
[2018-05-30 06:18:03,325]DEBUG 41922[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,325]DEBUG 41922[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.OrderStatus#16]
[2018-05-30 06:18:03,326]DEBUG 41923[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,326]DEBUG 41923[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,326]DEBUG 41923[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,327]DEBUG 41924[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,328]DEBUG 41925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,328]DEBUG 41925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,328]DEBUG 41925[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,328]DEBUG 41925[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,328]DEBUG 41925[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:03,329]DEBUG 41926[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,330]DEBUG 41927[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,330]DEBUG 41927[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,330]DEBUG 41927[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,330]DEBUG 41927[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,330]DEBUG 41927[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,331]DEBUG 41928[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:03,332]DEBUG 41929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,333]DEBUG 41930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,333]DEBUG 41930[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,333]DEBUG 41930[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,334]DEBUG 41931[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,335]DEBUG 41932[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,335]DEBUG 41932[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:03,336]DEBUG 41933[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,336]DEBUG 41933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,336]DEBUG 41933[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,337]DEBUG 41934[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,338]DEBUG 41935[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,338]DEBUG 41935[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:03,339]DEBUG 41936[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,339]DEBUG 41936[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=16, orderStatusName=Abandoned}
[2018-05-30 06:18:03,340]DEBUG 41937[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: OrderStatuses
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses where ID=?
[2018-05-30 06:18:03,341]DEBUG 41938[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,343]DEBUG 41940[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,343]DEBUG 41940[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,343]DEBUG 41940[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:03,344]DEBUG 41941[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,345]DEBUG 41942[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,345]DEBUG 41942[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,346]DEBUG 41943[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,347]DEBUG 41944[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,347]DEBUG 41944[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:03,348]DEBUG 41945[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,348]DEBUG 41945[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,348]DEBUG 41945[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,349]DEBUG 41946[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,350]DEBUG 41947[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,351]DEBUG 41948[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:03,352]DEBUG 41949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,353]DEBUG 41950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,353]DEBUG 41950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,353]DEBUG 41950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,354]DEBUG 41951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,355]DEBUG 41952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:03,355]DEBUG 41952[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,356]DEBUG 41953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,356]DEBUG 41953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,356]DEBUG 41953[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=15, orderStatusName=Ordered}
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=14, orderStatusName=In process}
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=13, orderStatusName=Delivered}
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,357]DEBUG 41954[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,358]DEBUG 41955[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,359]DEBUG 41956[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,359]DEBUG 41956[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,359]DEBUG 41956[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e225715]
[2018-05-30 06:18:03,359]DEBUG 41956[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,361]DEBUG 41958[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,362]DEBUG 41959[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,362]DEBUG 41959[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e225715] after transaction
[2018-05-30 06:18:03,362]DEBUG 41959[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,362]DEBUG 41959[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,363]DEBUG 41960[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,363] INFO 41960[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]]
[2018-05-30 06:18:03,363]DEBUG 41960[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@8aaee94, testMethod = testFindOrderStatusByName@OrderStatusDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,363]DEBUG 41960[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,364]DEBUG 41961[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,365]DEBUG 41962[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,366]DEBUG 41963[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,367]DEBUG 41964[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,367]DEBUG 41964[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,367]DEBUG 41964[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,367]DEBUG 41964[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,367]DEBUG 41964[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647]
[2018-05-30 06:18:03,368]DEBUG 41965[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,368]DEBUG 41965[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:03,368]DEBUG 41965[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,368]DEBUG 41965[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,368]DEBUG 41965[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754833
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3ac7f1b] for Hibernate transaction
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ac7f1b]
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,369]DEBUG 41966[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:03,369] INFO 41966[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@6d67e8d4]; rollback [true]
[2018-05-30 06:18:03,370]DEBUG 41967[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,370]DEBUG 41967[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,370]DEBUG 41967[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,372]DEBUG 41969[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2018-05-30 06:18:03,372]DEBUG 41969[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,372]DEBUG 41969[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,373]DEBUG 41970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,373]DEBUG 41970[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,374]DEBUG 41971[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2018-05-30 06:18:03,375]DEBUG 41972[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,377]DEBUG 41974[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,377]DEBUG 41974[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,377]DEBUG 41974[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderStatuses (OrederStatusName) values (?)
[2018-05-30 06:18:03,379]DEBUG 41976[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2018-05-30 06:18:03,379]DEBUG 41976[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,380]DEBUG 41977[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,381]DEBUG 41978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,381]DEBUG 41978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,381]DEBUG 41978[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,381]DEBUG 41978[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:03,382]DEBUG 41979[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,383]DEBUG 41980[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,384]DEBUG 41981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,384]DEBUG 41981[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,384]DEBUG 41981[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,384]DEBUG 41981[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:03,385]DEBUG 41982[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,386]DEBUG 41983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,386]DEBUG 41983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,386]DEBUG 41983[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,386]DEBUG 41983[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,386]DEBUG 41983[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,387]DEBUG 41984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,387]DEBUG 41984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,387]DEBUG 41984[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,387]DEBUG 41984[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,387]DEBUG 41984[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:03,388]DEBUG 41985[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,389]DEBUG 41986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,389]DEBUG 41986[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,389]DEBUG 41986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,389]DEBUG 41986[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,390]DEBUG 41987[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:03,391]DEBUG 41988[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,392]DEBUG 41989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,392]DEBUG 41989[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,392]DEBUG 41989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,392]DEBUG 41989[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,393]DEBUG 41990[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:03,394]DEBUG 41991[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,395]DEBUG 41992[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,395]DEBUG 41992[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,395]DEBUG 41992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,395]DEBUG 41992[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,396]DEBUG 41993[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:03,397]DEBUG 41994[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,398]DEBUG 41995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,398]DEBUG 41995[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,398]DEBUG 41995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,398]DEBUG 41995[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,399]DEBUG 41996[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:03,400]DEBUG 41997[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,401]DEBUG 41998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,401]DEBUG 41998[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,401]DEBUG 41998[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,401]DEBUG 41998[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,402]DEBUG 41999[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,402]DEBUG 41999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,402]DEBUG 41999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,402]DEBUG 41999[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,404]DEBUG 42001[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,404]DEBUG 42001[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:03,405]DEBUG 42002[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,406]DEBUG 42003[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=18, orderStatusName=In process}
[2018-05-30 06:18:03,407]DEBUG 42004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=17, orderStatusName=Delivered}
[2018-05-30 06:18:03,407]DEBUG 42004[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderStatus{id=19, orderStatusName=Ordered}
[2018-05-30 06:18:03,407]DEBUG 42004[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,407]DEBUG 42004[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,408]DEBUG 42005[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,409]DEBUG 42006[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:03,409]DEBUG 42006[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,409]DEBUG 42006[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ac7f1b]
[2018-05-30 06:18:03,409]DEBUG 42006[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,412]DEBUG 42009[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,412]DEBUG 42009[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,412]DEBUG 42009[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ac7f1b] after transaction
[2018-05-30 06:18:03,413]DEBUG 42010[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,413]DEBUG 42010[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,413]DEBUG 42010[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,413] INFO 42010[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:03,414]DEBUG 42011[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest@530b4647, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,414]DEBUG 42011[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@6f5019f4 testClass = OrderStatusDaoTest, locations = array<String>['classpath:testApplicationContex.xml', 'classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-30 06:18:03,415]DEBUG 42012[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest].
[2018-05-30 06:18:03,415] INFO 42012[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: using defaults.
[2018-05-30 06:18:03,416]DEBUG 42013[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,416]DEBUG 42013[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,418]DEBUG 42015[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,418]DEBUG 42015[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,418]DEBUG 42015[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,418]DEBUG 42015[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,420]DEBUG 42017[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,421]DEBUG 42018[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,421]DEBUG 42018[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,432]DEBUG 42029[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,433]DEBUG 42030[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,434]DEBUG 42031[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,434]DEBUG 42031[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,434]DEBUG 42031[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,434]DEBUG 42031[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,434]DEBUG 42031[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'customerTypeDao'
[2018-05-30 06:18:03,435]DEBUG 42032[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,435]DEBUG 42032[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,435]DEBUG 42032[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'dimensionDao'
[2018-05-30 06:18:03,435]DEBUG 42032[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,436]DEBUG 42033[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,436]DEBUG 42033[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderDao'
[2018-05-30 06:18:03,436]DEBUG 42033[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,436]DEBUG 42033[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,436]DEBUG 42033[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderItemDao'
[2018-05-30 06:18:03,437]DEBUG 42034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,437]DEBUG 42034[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,437]DEBUG 42034[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'orderStatusDao'
[2018-05-30 06:18:03,437]DEBUG 42034[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,438]DEBUG 42035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,438]DEBUG 42035[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'productDao'
[2018-05-30 06:18:03,438]DEBUG 42035[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,438]DEBUG 42035[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,439]DEBUG 42036[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'regionDao'
[2018-05-30 06:18:03,439]DEBUG 42036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,439]DEBUG 42036[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,439]DEBUG 42036[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'roleDao'
[2018-05-30 06:18:03,439]DEBUG 42036[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,440]DEBUG 42037[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,440]DEBUG 42037[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'userDao'
[2018-05-30 06:18:03,451]DEBUG 42048[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,451]DEBUG 42048[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,452]DEBUG 42049[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' to bean named 'sessionFactory'
[2018-05-30 06:18:03,452]DEBUG 42049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,453]DEBUG 42050[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,455]DEBUG 42052[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,455]DEBUG 42052[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000]
[2018-05-30 06:18:03,456]DEBUG 42053[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.setUp()
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.tearDown() throws java.lang.Exception
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByID()
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,457]DEBUG 42054[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterions()
[2018-05-30 06:18:03,458]DEBUG 42055[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,458]DEBUG 42055[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterions()
[2018-05-30 06:18:03,458]DEBUG 42055[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,458]DEBUG 42055[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testInsertOrUpdate()
[2018-05-30 06:18:03,458]DEBUG 42055[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,459]DEBUG 42056[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testDelete()
[2018-05-30 06:18:03,459]DEBUG 42056[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,459]DEBUG 42056[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetCustomerRole()
[2018-05-30 06:18:03,459]DEBUG 42056[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,459]DEBUG 42056[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetMerchandiserRole()
[2018-05-30 06:18:03,460]DEBUG 42057[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,460]DEBUG 42057[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetSupervisorRole()
[2018-05-30 06:18:03,460]DEBUG 42057[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,461]DEBUG 42058[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleName()
[2018-05-30 06:18:03,461]DEBUG 42058[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,461]DEBUG 42058[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testContainsRole()
[2018-05-30 06:18:03,461]DEBUG 42058[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,461]DEBUG 42058[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByCriterionsSorting()
[2018-05-30 06:18:03,462]DEBUG 42059[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,462]DEBUG 42059[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByOneOfCriterionsSorting()
[2018-05-30 06:18:03,462]DEBUG 42059[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,463]DEBUG 42060[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditions()
[2018-05-30 06:18:03,463]DEBUG 42060[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,463]DEBUG 42060[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testFindByRoleNameWithUserSelectWayConditionsSorting()
[2018-05-30 06:18:03,463]DEBUG 42060[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,463]DEBUG 42060[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.RoleDAOTest.testGetAdminRole()
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-30 06:18:03,464]DEBUG 42061[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-30 06:18:03,465]DEBUG 42062[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-30 06:18:03,466]DEBUG 42063[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-30 06:18:03,466]DEBUG 42063[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-30 06:18:03,466]DEBUG 42063[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-30 06:18:03,466]DEBUG 42063[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-30 06:18:03,466]DEBUG 42063[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-30 06:18:03,467]DEBUG 42064[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-30 06:18:03,468]DEBUG 42065[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-30 06:18:03,469]DEBUG 42066[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-30 06:18:03,470]DEBUG 42067[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-30 06:18:03,486]DEBUG 42083[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByID' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,486]DEBUG 42083[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,487]DEBUG 42084[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,487]DEBUG 42084[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@444cc84d transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,487]DEBUG 42084[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,487]DEBUG 42084[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByID]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,487]DEBUG 42084[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754834
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@14d13d3] for Hibernate transaction
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14d13d3]
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,488] INFO 42085[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,488]DEBUG 42085[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,489]DEBUG 42086[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,489]DEBUG 42086[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,490]DEBUG 42087[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:03,490]DEBUG 42087[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,491]DEBUG 42088[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,491]DEBUG 42088[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,492]DEBUG 42089[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,493]DEBUG 42090[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:03,494]DEBUG 42091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,494]DEBUG 42091[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,495]DEBUG 42092[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,495]DEBUG 42092[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,496]DEBUG 42093[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:03,497]DEBUG 42094[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,497]DEBUG 42094[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,497]DEBUG 42094[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,497]DEBUG 42094[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,499]DEBUG 42096[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:03,499]DEBUG 42096[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,500]DEBUG 42097[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,500]DEBUG 42097[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,500]DEBUG 42097[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2018-05-30 06:18:03,501]DEBUG 42098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2018-05-30 06:18:03,502]DEBUG 42099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,502]DEBUG 42099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-30 06:18:03,503]DEBUG 42100[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,503]DEBUG 42100[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#1]
[2018-05-30 06:18:03,504]DEBUG 42101[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#2]
[2018-05-30 06:18:03,504]DEBUG 42101[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#3]
[2018-05-30 06:18:03,504]DEBUG 42101[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#4]
[2018-05-30 06:18:03,504]DEBUG 42101[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,504]DEBUG 42101[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,505]DEBUG 42102[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,505]DEBUG 42102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,505]DEBUG 42102[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=1, roleName=Administrator}
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=2, roleName=Supervisor}
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=3, roleName=Customer}
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=4, roleName=Merchandiser}
[2018-05-30 06:18:03,506]DEBUG 42103[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,507]DEBUG 42104[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,508]DEBUG 42105[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,508]DEBUG 42105[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,508]DEBUG 42105[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,509]DEBUG 42106[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14d13d3]
[2018-05-30 06:18:03,509]DEBUG 42106[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,561]DEBUG 42158[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,561]DEBUG 42158[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,561]DEBUG 42158[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@14d13d3] after transaction
[2018-05-30 06:18:03,561]DEBUG 42158[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,562]DEBUG 42159[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,562]DEBUG 42159[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,565] INFO 42162[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = testFindByID@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,566]DEBUG 42163[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@18b12000, testMethod = testFindByID@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,567]DEBUG 42164[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,567]DEBUG 42164[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,567]DEBUG 42164[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,567]DEBUG 42164[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,568]DEBUG 42165[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,569]DEBUG 42166[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,570]DEBUG 42167[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,571]DEBUG 42168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,571]DEBUG 42168[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,571]DEBUG 42168[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,571]DEBUG 42168[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac]
[2018-05-30 06:18:03,572]DEBUG 42169[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,572]DEBUG 42169[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,572]DEBUG 42169[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,573]DEBUG 42170[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754835
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@25e4e898] for Hibernate transaction
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@25e4e898]
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,574]DEBUG 42171[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,575]DEBUG 42172[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,575] INFO 42172[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,575]DEBUG 42172[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,576]DEBUG 42173[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,576]DEBUG 42173[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,578]DEBUG 42175[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:03,578]DEBUG 42175[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,579]DEBUG 42176[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,579]DEBUG 42176[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,579]DEBUG 42176[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,581]DEBUG 42178[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:03,582]DEBUG 42179[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,582]DEBUG 42179[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,583]DEBUG 42180[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,583]DEBUG 42180[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,585]DEBUG 42182[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:03,585]DEBUG 42182[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,586]DEBUG 42183[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,586]DEBUG 42183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,586]DEBUG 42183[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,588]DEBUG 42185[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-30 06:18:03,588]DEBUG 42185[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,589]DEBUG 42186[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,590]DEBUG 42187[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,590]DEBUG 42187[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,590]DEBUG 42187[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,591]DEBUG 42188[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,591]DEBUG 42188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2018-05-30 06:18:03,591]DEBUG 42188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2018-05-30 06:18:03,591]DEBUG 42188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2018-05-30 06:18:03,591]DEBUG 42188[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2018-05-30 06:18:03,592]DEBUG 42189[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,592]DEBUG 42189[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=? and this_.ID<=?
[2018-05-30 06:18:03,603]DEBUG 42200[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,604]DEBUG 42201[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,604]DEBUG 42201[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,605]DEBUG 42202[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,605]DEBUG 42202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,605]DEBUG 42202[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,606]DEBUG 42203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,606]DEBUG 42203[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,606]DEBUG 42203[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,606]DEBUG 42203[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=5, roleName=Administrator}
[2018-05-30 06:18:03,607]DEBUG 42204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=6, roleName=Supervisor}
[2018-05-30 06:18:03,607]DEBUG 42204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=7, roleName=Customer}
[2018-05-30 06:18:03,607]DEBUG 42204[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=8, roleName=Merchandiser}
[2018-05-30 06:18:03,607]DEBUG 42204[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,610]DEBUG 42207[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,616]DEBUG 42213[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,616]DEBUG 42213[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,616]DEBUG 42213[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,616]DEBUG 42213[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@25e4e898]
[2018-05-30 06:18:03,616]DEBUG 42213[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,618]DEBUG 42215[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,619]DEBUG 42216[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,619]DEBUG 42216[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@25e4e898] after transaction
[2018-05-30 06:18:03,619]DEBUG 42216[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,619]DEBUG 42216[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,619]DEBUG 42216[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,620] INFO 42217[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,620]DEBUG 42217[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@45dc73ac, testMethod = testFindByCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,620]DEBUG 42217[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,621]DEBUG 42218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,622]DEBUG 42219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,623]DEBUG 42220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,624]DEBUG 42221[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,624]DEBUG 42221[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,624]DEBUG 42221[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec]
[2018-05-30 06:18:03,624]DEBUG 42221[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,625]DEBUG 42222[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,625]DEBUG 42222[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,625]DEBUG 42222[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,625]DEBUG 42222[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754836
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@3c08edaf] for Hibernate transaction
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3c08edaf]
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,626] INFO 42223[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,626]DEBUG 42223[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,627]DEBUG 42224[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,627]DEBUG 42224[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,638]DEBUG 42235[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-30 06:18:03,639]DEBUG 42236[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,639]DEBUG 42236[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,640]DEBUG 42237[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,640]DEBUG 42237[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,642]DEBUG 42239[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-30 06:18:03,642]DEBUG 42239[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,642]DEBUG 42239[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,643]DEBUG 42240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,643]DEBUG 42240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,645]DEBUG 42242[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-30 06:18:03,645]DEBUG 42242[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,645]DEBUG 42242[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,646]DEBUG 42243[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,646]DEBUG 42243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,647]DEBUG 42244[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-30 06:18:03,647]DEBUG 42244[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,648]DEBUG 42245[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,648]DEBUG 42245[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2018-05-30 06:18:03,649]DEBUG 42246[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2018-05-30 06:18:03,650]DEBUG 42247[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2018-05-30 06:18:03,650]DEBUG 42247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,650]DEBUG 42247[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where (this_.RoleName like ? or this_.ID<=?)
[2018-05-30 06:18:03,651]DEBUG 42248[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,652]DEBUG 42249[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#9]
[2018-05-30 06:18:03,652]DEBUG 42249[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#10]
[2018-05-30 06:18:03,655]DEBUG 42252[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#11]
[2018-05-30 06:18:03,655]DEBUG 42252[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#12]
[2018-05-30 06:18:03,656]DEBUG 42253[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,656]DEBUG 42253[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,656]DEBUG 42253[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,656]DEBUG 42253[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,657]DEBUG 42254[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,657]DEBUG 42254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,657]DEBUG 42254[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=9, roleName=Administrator}
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=10, roleName=Supervisor}
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=11, roleName=Customer}
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=12, roleName=Merchandiser}
[2018-05-30 06:18:03,658]DEBUG 42255[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,659]DEBUG 42256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,660]DEBUG 42257[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,661]DEBUG 42258[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,661]DEBUG 42258[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,661]DEBUG 42258[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3c08edaf]
[2018-05-30 06:18:03,661]DEBUG 42258[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,663]DEBUG 42260[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,664]DEBUG 42261[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,664]DEBUG 42261[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3c08edaf] after transaction
[2018-05-30 06:18:03,664]DEBUG 42261[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,664]DEBUG 42261[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,664]DEBUG 42261[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,665] INFO 42262[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,665]DEBUG 42262[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@5388ecec, testMethod = testFindByOneOfCriterions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,666]DEBUG 42263[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,666]DEBUG 42263[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,666]DEBUG 42263[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,666]DEBUG 42263[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,666]DEBUG 42263[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,667]DEBUG 42264[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,668]DEBUG 42265[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,669]DEBUG 42266[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902]
[2018-05-30 06:18:03,670]DEBUG 42267[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testInsertOrUpdate' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,670]DEBUG 42267[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,670]DEBUG 42267[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,671]DEBUG 42268[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testInsertOrUpdate]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,671]DEBUG 42268[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754836
[2018-05-30 06:18:03,671]DEBUG 42268[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@462e5d05] for Hibernate transaction
[2018-05-30 06:18:03,671]DEBUG 42268[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@462e5d05]
[2018-05-30 06:18:03,671]DEBUG 42268[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,672]DEBUG 42269[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,672]DEBUG 42269[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,672]DEBUG 42269[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,672] INFO 42269[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,672]DEBUG 42269[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,672]DEBUG 42269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,673]DEBUG 42270[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,689]DEBUG 42286[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-30 06:18:03,689]DEBUG 42286[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,690]DEBUG 42287[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,690]DEBUG 42287[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,690]DEBUG 42287[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,691]DEBUG 42288[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-30 06:18:03,692]DEBUG 42289[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,692]DEBUG 42289[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,693]DEBUG 42290[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,693]DEBUG 42290[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,694]DEBUG 42291[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 15
[2018-05-30 06:18:03,694]DEBUG 42291[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,695]DEBUG 42292[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,695]DEBUG 42292[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,695]DEBUG 42292[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,696]DEBUG 42293[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 16
[2018-05-30 06:18:03,697]DEBUG 42294[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,699]DEBUG 42296[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,699]DEBUG 42296[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,700]DEBUG 42297[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,701]DEBUG 42298[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 17
[2018-05-30 06:18:03,701]DEBUG 42298[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,702]DEBUG 42299[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,702]DEBUG 42299[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,703]DEBUG 42300[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:03,703]DEBUG 42300[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,703]DEBUG 42300[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,703]DEBUG 42300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2018-05-30 06:18:03,703]DEBUG 42300[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2018-05-30 06:18:03,704]DEBUG 42301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2018-05-30 06:18:03,704]DEBUG 42301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2018-05-30 06:18:03,704]DEBUG 42301[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2018-05-30 06:18:03,704]DEBUG 42301[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,704]DEBUG 42301[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-30 06:18:03,705]DEBUG 42302[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,706]DEBUG 42303[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#13]
[2018-05-30 06:18:03,706]DEBUG 42303[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#14]
[2018-05-30 06:18:03,707]DEBUG 42304[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#15]
[2018-05-30 06:18:03,707]DEBUG 42304[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#16]
[2018-05-30 06:18:03,707]DEBUG 42304[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#17]
[2018-05-30 06:18:03,707]DEBUG 42304[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,707]DEBUG 42304[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,708]DEBUG 42305[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,708]DEBUG 42305[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,708]DEBUG 42305[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,708]DEBUG 42305[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=14, roleName=Supervisor}
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=13, roleName=Administrator}
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=16, roleName=Merchandiser}
[2018-05-30 06:18:03,709]DEBUG 42306[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=15, roleName=Customer}
[2018-05-30 06:18:03,710]DEBUG 42307[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=17, roleName=tempRole}
[2018-05-30 06:18:03,710]DEBUG 42307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,710]DEBUG 42307[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,711]DEBUG 42308[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,711]DEBUG 42308[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,712]DEBUG 42309[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,712]DEBUG 42309[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@462e5d05]
[2018-05-30 06:18:03,712]DEBUG 42309[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,714]DEBUG 42311[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,715]DEBUG 42312[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,715]DEBUG 42312[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@462e5d05] after transaction
[2018-05-30 06:18:03,715]DEBUG 42312[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,715]DEBUG 42312[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,716]DEBUG 42313[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,716] INFO 42313[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,716]DEBUG 42313[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@27335902, testMethod = testInsertOrUpdate@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,717]DEBUG 42314[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,717]DEBUG 42314[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,717]DEBUG 42314[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,717]DEBUG 42314[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,718]DEBUG 42315[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,719]DEBUG 42316[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,720]DEBUG 42317[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122]
[2018-05-30 06:18:03,721]DEBUG 42318[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testDelete' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,721]DEBUG 42318[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,721]DEBUG 42318[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,721]DEBUG 42318[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testDelete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754837
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@38e42c18] for Hibernate transaction
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@38e42c18]
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,722]DEBUG 42319[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,722] INFO 42319[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,726]DEBUG 42323[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,726]DEBUG 42323[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,726]DEBUG 42323[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,729]DEBUG 42326[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 18
[2018-05-30 06:18:03,729]DEBUG 42326[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,729]DEBUG 42326[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,730]DEBUG 42327[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,730]DEBUG 42327[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,731]DEBUG 42328[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 19
[2018-05-30 06:18:03,732]DEBUG 42329[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,732]DEBUG 42329[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,732]DEBUG 42329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,733]DEBUG 42330[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,734]DEBUG 42331[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 20
[2018-05-30 06:18:03,734]DEBUG 42331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,735]DEBUG 42332[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,735]DEBUG 42332[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,735]DEBUG 42332[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,736]DEBUG 42333[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 21
[2018-05-30 06:18:03,737]DEBUG 42334[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,737]DEBUG 42334[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,738]DEBUG 42335[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,738]DEBUG 42335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,739]DEBUG 42336[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 22
[2018-05-30 06:18:03,739]DEBUG 42336[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,740]DEBUG 42337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,740]DEBUG 42337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 5 objects
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=22, roleName=tempRole}
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2018-05-30 06:18:03,741]DEBUG 42338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2018-05-30 06:18:03,742]DEBUG 42339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2018-05-30 06:18:03,742]DEBUG 42339[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:03,742]DEBUG 42339[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,742]DEBUG 42339[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-30 06:18:03,742]DEBUG 42339[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,743]DEBUG 42340[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,744]DEBUG 42341[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,744]DEBUG 42341[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_
[2018-05-30 06:18:03,745]DEBUG 42342[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,746]DEBUG 42343[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#18]
[2018-05-30 06:18:03,746]DEBUG 42343[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#19]
[2018-05-30 06:18:03,746]DEBUG 42343[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#20]
[2018-05-30 06:18:03,747]DEBUG 42344[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#21]
[2018-05-30 06:18:03,747]DEBUG 42344[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,747]DEBUG 42344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,747]DEBUG 42344[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,747]DEBUG 42344[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=21, roleName=Merchandiser}
[2018-05-30 06:18:03,748]DEBUG 42345[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=18, roleName=Administrator}
[2018-05-30 06:18:03,749]DEBUG 42346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=20, roleName=Customer}
[2018-05-30 06:18:03,749]DEBUG 42346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=19, roleName=Supervisor}
[2018-05-30 06:18:03,749]DEBUG 42346[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,749]DEBUG 42346[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,750]DEBUG 42347[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,750]DEBUG 42347[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,751]DEBUG 42348[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,751]DEBUG 42348[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@38e42c18]
[2018-05-30 06:18:03,751]DEBUG 42348[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,796]DEBUG 42393[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,796]DEBUG 42393[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,797]DEBUG 42394[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@38e42c18] after transaction
[2018-05-30 06:18:03,797]DEBUG 42394[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,797]DEBUG 42394[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,798]DEBUG 42395[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,798] INFO 42395[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = testDelete@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,799]DEBUG 42396[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3032e122, testMethod = testDelete@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,800]DEBUG 42397[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,800]DEBUG 42397[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,801]DEBUG 42398[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,801]DEBUG 42398[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,802]DEBUG 42399[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,802]DEBUG 42399[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,802]DEBUG 42399[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,803]DEBUG 42400[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,807]DEBUG 42404[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,807]DEBUG 42404[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,808]DEBUG 42405[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,809]DEBUG 42406[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,809]DEBUG 42406[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,809]DEBUG 42406[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,810]DEBUG 42407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,810]DEBUG 42407[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,810]DEBUG 42407[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,811]DEBUG 42408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,811]DEBUG 42408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,811]DEBUG 42408[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,811]DEBUG 42408[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,812]DEBUG 42409[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,812]DEBUG 42409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,812]DEBUG 42409[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,813]DEBUG 42410[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,813]DEBUG 42410[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666]
[2018-05-30 06:18:03,814]DEBUG 42411[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetCustomerRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,815]DEBUG 42412[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,815]DEBUG 42412[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,816]DEBUG 42413[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetCustomerRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,817]DEBUG 42414[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754838
[2018-05-30 06:18:03,817]DEBUG 42414[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@11f3f0c2] for Hibernate transaction
[2018-05-30 06:18:03,818]DEBUG 42415[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11f3f0c2]
[2018-05-30 06:18:03,818]DEBUG 42415[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,819]DEBUG 42416[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,819]DEBUG 42416[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,819]DEBUG 42416[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,820] INFO 42417[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,820]DEBUG 42417[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,821]DEBUG 42418[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,821]DEBUG 42418[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,824]DEBUG 42421[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 23
[2018-05-30 06:18:03,825]DEBUG 42422[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,826]DEBUG 42423[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,826]DEBUG 42423[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,827]DEBUG 42424[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,829]DEBUG 42426[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 24
[2018-05-30 06:18:03,830]DEBUG 42427[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,830]DEBUG 42427[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,831]DEBUG 42428[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,832]DEBUG 42429[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,834]DEBUG 42431[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 25
[2018-05-30 06:18:03,835]DEBUG 42432[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,836]DEBUG 42433[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,837]DEBUG 42434[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,838]DEBUG 42435[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,840]DEBUG 42437[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 26
[2018-05-30 06:18:03,841]DEBUG 42438[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,843]DEBUG 42440[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,844]DEBUG 42441[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,845]DEBUG 42442[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,846]DEBUG 42443[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,847]DEBUG 42444[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,847]DEBUG 42444[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-30 06:18:03,848]DEBUG 42445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-30 06:18:03,848]DEBUG 42445[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-30 06:18:03,849]DEBUG 42446[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-30 06:18:03,849]DEBUG 42446[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,849]DEBUG 42446[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,851]DEBUG 42448[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,851]DEBUG 42448[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#25]
[2018-05-30 06:18:03,852]DEBUG 42449[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,852]DEBUG 42449[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,852]DEBUG 42449[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,853]DEBUG 42450[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,853]DEBUG 42450[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,854]DEBUG 42451[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,854]DEBUG 42451[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,854]DEBUG 42451[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,854]DEBUG 42451[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-30 06:18:03,855]DEBUG 42452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-30 06:18:03,855]DEBUG 42452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-30 06:18:03,855]DEBUG 42452[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-30 06:18:03,855]DEBUG 42452[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,855]DEBUG 42452[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,857]DEBUG 42454[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,857]DEBUG 42454[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#25]
[2018-05-30 06:18:03,858]DEBUG 42455[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,858]DEBUG 42455[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,858]DEBUG 42455[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,859]DEBUG 42456[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,862]DEBUG 42459[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,862]DEBUG 42459[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,863]DEBUG 42460[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,863]DEBUG 42460[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,863]DEBUG 42460[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-30 06:18:03,863]DEBUG 42460[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-30 06:18:03,863]DEBUG 42460[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-30 06:18:03,864]DEBUG 42461[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=25, roleName=Customer}
[2018-05-30 06:18:03,864]DEBUG 42461[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:03,864]DEBUG 42461[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,864]DEBUG 42461[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-30 06:18:03,865]DEBUG 42462[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,866]DEBUG 42463[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,867]DEBUG 42464[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,867]DEBUG 42464[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,868]DEBUG 42465[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,869]DEBUG 42466[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,869]DEBUG 42466[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,869]DEBUG 42466[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,870]DEBUG 42467[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,870]DEBUG 42467[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,871]DEBUG 42468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,872]DEBUG 42469[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 27
[2018-05-30 06:18:03,873]DEBUG 42470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,873]DEBUG 42470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,873]DEBUG 42470[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,874]DEBUG 42471[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,874]DEBUG 42471[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,874]DEBUG 42471[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,874]DEBUG 42471[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=24, roleName=Supervisor}
[2018-05-30 06:18:03,875]DEBUG 42472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=23, roleName=Administrator}
[2018-05-30 06:18:03,875]DEBUG 42472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=26, roleName=Merchandiser}
[2018-05-30 06:18:03,875]DEBUG 42472[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=27, roleName=Customer}
[2018-05-30 06:18:03,875]DEBUG 42472[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,875]DEBUG 42472[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,877]DEBUG 42474[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,878]DEBUG 42475[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,878]DEBUG 42475[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,878]DEBUG 42475[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11f3f0c2]
[2018-05-30 06:18:03,878]DEBUG 42475[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,881]DEBUG 42478[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,881]DEBUG 42478[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,882]DEBUG 42479[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@11f3f0c2] after transaction
[2018-05-30 06:18:03,882]DEBUG 42479[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,882]DEBUG 42479[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,882]DEBUG 42479[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,883] INFO 42480[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,883]DEBUG 42480[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@f103666, testMethod = testGetCustomerRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,884]DEBUG 42481[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,884]DEBUG 42481[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,884]DEBUG 42481[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,885]DEBUG 42482[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,886]DEBUG 42483[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,887]DEBUG 42484[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,888]DEBUG 42485[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,888]DEBUG 42485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,888]DEBUG 42485[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,888]DEBUG 42485[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,888]DEBUG 42485[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a]
[2018-05-30 06:18:03,889]DEBUG 42486[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetMerchandiserRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,889]DEBUG 42486[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,889]DEBUG 42486[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,890]DEBUG 42487[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetMerchandiserRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,890]DEBUG 42487[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754838
[2018-05-30 06:18:03,890]DEBUG 42487[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4ae5989f] for Hibernate transaction
[2018-05-30 06:18:03,891]DEBUG 42488[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4ae5989f]
[2018-05-30 06:18:03,891]DEBUG 42488[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,891]DEBUG 42488[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,891]DEBUG 42488[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,891]DEBUG 42488[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,892] INFO 42489[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,892]DEBUG 42489[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,892]DEBUG 42489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,892]DEBUG 42489[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,894]DEBUG 42491[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 28
[2018-05-30 06:18:03,897]DEBUG 42494[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,898]DEBUG 42495[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,898]DEBUG 42495[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,899]DEBUG 42496[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,900]DEBUG 42497[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 29
[2018-05-30 06:18:03,901]DEBUG 42498[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,901]DEBUG 42498[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,901]DEBUG 42498[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,902]DEBUG 42499[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,903]DEBUG 42500[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 30
[2018-05-30 06:18:03,904]DEBUG 42501[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,904]DEBUG 42501[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,904]DEBUG 42501[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,905]DEBUG 42502[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,906]DEBUG 42503[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 31
[2018-05-30 06:18:03,907]DEBUG 42504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,908]DEBUG 42505[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,908]DEBUG 42505[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,908]DEBUG 42505[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-30 06:18:03,909]DEBUG 42506[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-30 06:18:03,910]DEBUG 42507[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,910]DEBUG 42507[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,911]DEBUG 42508[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,912]DEBUG 42509[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#31]
[2018-05-30 06:18:03,912]DEBUG 42509[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,912]DEBUG 42509[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,912]DEBUG 42509[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,913]DEBUG 42510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,913]DEBUG 42510[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,913]DEBUG 42510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,913]DEBUG 42510[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,914]DEBUG 42511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,917]DEBUG 42514[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,918]DEBUG 42515[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#31]
[2018-05-30 06:18:03,918]DEBUG 42515[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,918]DEBUG 42515[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,918]DEBUG 42515[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,919]DEBUG 42516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,919]DEBUG 42516[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,919]DEBUG 42516[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=31, roleName=Merchandiser}
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:03,920]DEBUG 42517[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,921]DEBUG 42518[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-30 06:18:03,921]DEBUG 42518[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,922]DEBUG 42519[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,923]DEBUG 42520[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,923]DEBUG 42520[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,925]DEBUG 42522[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,925]DEBUG 42522[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,925]DEBUG 42522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,925]DEBUG 42522[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,926]DEBUG 42523[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,926]DEBUG 42523[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,926]DEBUG 42523[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,928]DEBUG 42525[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 32
[2018-05-30 06:18:03,929]DEBUG 42526[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,929]DEBUG 42526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,929]DEBUG 42526[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=32, roleName=Merchandiser}
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=29, roleName=Supervisor}
[2018-05-30 06:18:03,930]DEBUG 42527[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=28, roleName=Administrator}
[2018-05-30 06:18:03,932]DEBUG 42529[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=30, roleName=Customer}
[2018-05-30 06:18:03,932]DEBUG 42529[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,933]DEBUG 42530[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,934]DEBUG 42531[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,934]DEBUG 42531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,935]DEBUG 42532[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,935]DEBUG 42532[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4ae5989f]
[2018-05-30 06:18:03,935]DEBUG 42532[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:03,937]DEBUG 42534[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:03,937]DEBUG 42534[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,938]DEBUG 42535[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4ae5989f] after transaction
[2018-05-30 06:18:03,938]DEBUG 42535[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:03,938]DEBUG 42535[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:03,938]DEBUG 42535[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:03,938] INFO 42535[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,939]DEBUG 42536[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6607ac9a, testMethod = testGetMerchandiserRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:03,939]DEBUG 42536[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,939]DEBUG 42536[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:03,939]DEBUG 42536[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:03,940]DEBUG 42537[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:03,941]DEBUG 42538[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:03,942]DEBUG 42539[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:03,943]DEBUG 42540[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5]
[2018-05-30 06:18:03,943]DEBUG 42540[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetSupervisorRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,944]DEBUG 42541[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,944]DEBUG 42541[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:03,944]DEBUG 42541[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetSupervisorRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:03,944]DEBUG 42541[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754839
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@6e8f74ae] for Hibernate transaction
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6e8f74ae]
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,945] INFO 42542[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (8): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:03,945]DEBUG 42542[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,946]DEBUG 42543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,946]DEBUG 42543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,947]DEBUG 42544[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 33
[2018-05-30 06:18:03,948]DEBUG 42545[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,948]DEBUG 42545[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,948]DEBUG 42545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,949]DEBUG 42546[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,950]DEBUG 42547[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 34
[2018-05-30 06:18:03,950]DEBUG 42547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,951]DEBUG 42548[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,951]DEBUG 42548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,952]DEBUG 42549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,954]DEBUG 42551[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 35
[2018-05-30 06:18:03,955]DEBUG 42552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,955]DEBUG 42552[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,955]DEBUG 42552[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,956]DEBUG 42553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,957]DEBUG 42554[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 36
[2018-05-30 06:18:03,957]DEBUG 42554[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,958]DEBUG 42555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,958]DEBUG 42555[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-30 06:18:03,959]DEBUG 42556[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-30 06:18:03,960]DEBUG 42557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-30 06:18:03,960]DEBUG 42557[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,960]DEBUG 42557[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,961]DEBUG 42558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,962]DEBUG 42559[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#34]
[2018-05-30 06:18:03,964]DEBUG 42561[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,964]DEBUG 42561[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,965]DEBUG 42562[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,965]DEBUG 42562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,965]DEBUG 42562[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,966]DEBUG 42563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,966]DEBUG 42563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,966]DEBUG 42563[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,966]DEBUG 42563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-30 06:18:03,966]DEBUG 42563[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-30 06:18:03,967]DEBUG 42564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-30 06:18:03,967]DEBUG 42564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-30 06:18:03,967]DEBUG 42564[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,967]DEBUG 42564[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,968]DEBUG 42565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,969]DEBUG 42566[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#34]
[2018-05-30 06:18:03,969]DEBUG 42566[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,969]DEBUG 42566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,970]DEBUG 42567[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,970]DEBUG 42567[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,970]DEBUG 42567[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-30 06:18:03,971]DEBUG 42568[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=34, roleName=Supervisor}
[2018-05-30 06:18:03,972]DEBUG 42569[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:03,972]DEBUG 42569[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,972]DEBUG 42569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-30 06:18:03,972]DEBUG 42569[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:03,973]DEBUG 42570[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,974]DEBUG 42571[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,974]DEBUG 42571[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:03,976]DEBUG 42573[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:03,976]DEBUG 42573[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:03,976]DEBUG 42573[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,977]DEBUG 42574[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:03,977]DEBUG 42574[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:03,977]DEBUG 42574[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,978]DEBUG 42575[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:03,979]DEBUG 42576[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 37
[2018-05-30 06:18:03,979]DEBUG 42576[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,980]DEBUG 42577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:03,980]DEBUG 42577[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=35, roleName=Customer}
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=36, roleName=Merchandiser}
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=33, roleName=Administrator}
[2018-05-30 06:18:03,981]DEBUG 42578[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=37, roleName=Supervisor}
[2018-05-30 06:18:03,982]DEBUG 42579[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:03,982]DEBUG 42579[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:03,983]DEBUG 42580[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:03,984]DEBUG 42581[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:03,984]DEBUG 42581[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:03,984]DEBUG 42581[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6e8f74ae]
[2018-05-30 06:18:03,984]DEBUG 42581[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,200]DEBUG 42797[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,201]DEBUG 42798[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,201]DEBUG 42798[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@6e8f74ae] after transaction
[2018-05-30 06:18:04,202]DEBUG 42799[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,202]DEBUG 42799[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,203]DEBUG 42800[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,204] INFO 42801[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,205]DEBUG 42802[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3016b4a5, testMethod = testGetSupervisorRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,206]DEBUG 42803[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,206]DEBUG 42803[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,207]DEBUG 42804[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,208]DEBUG 42805[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,208]DEBUG 42805[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,209]DEBUG 42806[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,210]DEBUG 42807[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,211]DEBUG 42808[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,212]DEBUG 42809[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,212]DEBUG 42809[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,213]DEBUG 42810[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,213]DEBUG 42810[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,214]DEBUG 42811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,214]DEBUG 42811[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,214]DEBUG 42811[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,215]DEBUG 42812[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,215]DEBUG 42812[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,216]DEBUG 42813[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,216]DEBUG 42813[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,216]DEBUG 42813[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,221]DEBUG 42818[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,222]DEBUG 42819[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,222]DEBUG 42819[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,223]DEBUG 42820[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,223]DEBUG 42820[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,224]DEBUG 42821[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f]
[2018-05-30 06:18:04,225]DEBUG 42822[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleName' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,226]DEBUG 42823[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,226]DEBUG 42823[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,227]DEBUG 42824[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleName]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,228]DEBUG 42825[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754842
[2018-05-30 06:18:04,228]DEBUG 42825[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@12f9ad94] for Hibernate transaction
[2018-05-30 06:18:04,229]DEBUG 42826[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12f9ad94]
[2018-05-30 06:18:04,229]DEBUG 42826[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,230]DEBUG 42827[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,230]DEBUG 42827[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,231]DEBUG 42828[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,231] INFO 42828[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (9): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,232]DEBUG 42829[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,233]DEBUG 42830[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,234]DEBUG 42831[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,236]DEBUG 42833[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 38
[2018-05-30 06:18:04,237]DEBUG 42834[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,238]DEBUG 42835[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,239]DEBUG 42836[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,240]DEBUG 42837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,242]DEBUG 42839[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 39
[2018-05-30 06:18:04,243]DEBUG 42840[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,244]DEBUG 42841[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,245]DEBUG 42842[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,245]DEBUG 42842[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,248]DEBUG 42845[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 40
[2018-05-30 06:18:04,249]DEBUG 42846[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,250]DEBUG 42847[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,251]DEBUG 42848[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,252]DEBUG 42849[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,255]DEBUG 42852[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 41
[2018-05-30 06:18:04,255]DEBUG 42852[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,257]DEBUG 42854[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,258]DEBUG 42855[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,259]DEBUG 42856[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,259]DEBUG 42856[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,260]DEBUG 42857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,260]DEBUG 42857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-30 06:18:04,261]DEBUG 42858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-30 06:18:04,261]DEBUG 42858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-30 06:18:04,262]DEBUG 42859[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-30 06:18:04,262]DEBUG 42859[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,263]DEBUG 42860[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,266]DEBUG 42863[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,268]DEBUG 42865[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#41]
[2018-05-30 06:18:04,268]DEBUG 42865[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,268]DEBUG 42865[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,269]DEBUG 42866[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,269]DEBUG 42866[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,270]DEBUG 42867[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,270]DEBUG 42867[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,270]DEBUG 42867[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,270]DEBUG 42867[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,271]DEBUG 42868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-30 06:18:04,271]DEBUG 42868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-30 06:18:04,271]DEBUG 42868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-30 06:18:04,271]DEBUG 42868[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-30 06:18:04,271]DEBUG 42868[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,272]DEBUG 42869[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,277]DEBUG 42874[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,278]DEBUG 42875[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#39]
[2018-05-30 06:18:04,278]DEBUG 42875[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,279]DEBUG 42876[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,279]DEBUG 42876[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,280]DEBUG 42877[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,280]DEBUG 42877[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,281]DEBUG 42878[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,281]DEBUG 42878[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,281]DEBUG 42878[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,281]DEBUG 42878[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-30 06:18:04,282]DEBUG 42879[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-30 06:18:04,282]DEBUG 42879[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-30 06:18:04,282]DEBUG 42879[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-30 06:18:04,282]DEBUG 42879[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,283]DEBUG 42880[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,284]DEBUG 42881[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,284]DEBUG 42881[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#38]
[2018-05-30 06:18:04,287]DEBUG 42884[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,287]DEBUG 42884[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,287]DEBUG 42884[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,288]DEBUG 42885[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,288]DEBUG 42885[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-30 06:18:04,289]DEBUG 42886[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-30 06:18:04,290]DEBUG 42887[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-30 06:18:04,290]DEBUG 42887[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,290]DEBUG 42887[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,292]DEBUG 42889[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,292]DEBUG 42889[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#40]
[2018-05-30 06:18:04,292]DEBUG 42889[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,293]DEBUG 42890[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,293]DEBUG 42890[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,293]DEBUG 42890[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,294]DEBUG 42891[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,294]DEBUG 42891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,294]DEBUG 42891[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,294]DEBUG 42891[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=41, roleName=Merchandiser}
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=39, roleName=Supervisor}
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=40, roleName=Customer}
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=38, roleName=Administrator}
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,295]DEBUG 42892[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,297]DEBUG 42894[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,298]DEBUG 42895[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,299]DEBUG 42896[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,299]DEBUG 42896[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12f9ad94]
[2018-05-30 06:18:04,299]DEBUG 42896[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,376]DEBUG 42973[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,377]DEBUG 42974[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,378]DEBUG 42975[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@12f9ad94] after transaction
[2018-05-30 06:18:04,378]DEBUG 42975[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,379]DEBUG 42976[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,379]DEBUG 42976[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,380] INFO 42977[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,381]DEBUG 42978[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@1810360f, testMethod = testFindByRoleName@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,382]DEBUG 42979[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,383]DEBUG 42980[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,383]DEBUG 42980[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,384]DEBUG 42981[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,384]DEBUG 42981[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,385]DEBUG 42982[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,385]DEBUG 42982[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,386]DEBUG 42983[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,386]DEBUG 42983[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,394]DEBUG 42991[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,394]DEBUG 42991[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,395]DEBUG 42992[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,395]DEBUG 42992[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,396]DEBUG 42993[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,396]DEBUG 42993[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,397]DEBUG 42994[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,397]DEBUG 42994[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,398]DEBUG 42995[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,398]DEBUG 42995[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,399]DEBUG 42996[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,399]DEBUG 42996[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,400]DEBUG 42997[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,400]DEBUG 42997[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,401]DEBUG 42998[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,401]DEBUG 42998[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,402]DEBUG 42999[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542]
[2018-05-30 06:18:04,403]DEBUG 43000[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContainsRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,404]DEBUG 43001[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,404]DEBUG 43001[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,405]DEBUG 43002[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContainsRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,406]DEBUG 43003[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754844
[2018-05-30 06:18:04,406]DEBUG 43003[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@a873204] for Hibernate transaction
[2018-05-30 06:18:04,407]DEBUG 43004[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a873204]
[2018-05-30 06:18:04,407]DEBUG 43004[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,407]DEBUG 43004[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,408]DEBUG 43005[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,408]DEBUG 43005[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,409] INFO 43006[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (10): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,409]DEBUG 43006[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,410]DEBUG 43007[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,411]DEBUG 43008[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,414]DEBUG 43011[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 42
[2018-05-30 06:18:04,415]DEBUG 43012[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,416]DEBUG 43013[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,417]DEBUG 43014[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,417]DEBUG 43014[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,419]DEBUG 43016[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 43
[2018-05-30 06:18:04,421]DEBUG 43018[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,422]DEBUG 43019[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,422]DEBUG 43019[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,423]DEBUG 43020[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,424]DEBUG 43021[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 44
[2018-05-30 06:18:04,424]DEBUG 43021[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,425]DEBUG 43022[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,425]DEBUG 43022[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,426]DEBUG 43023[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,427]DEBUG 43024[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 45
[2018-05-30 06:18:04,427]DEBUG 43024[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,428]DEBUG 43025[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,428]DEBUG 43025[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,429]DEBUG 43026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,429]DEBUG 43026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,429]DEBUG 43026[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,429]DEBUG 43026[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,430]DEBUG 43027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,430]DEBUG 43027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,430]DEBUG 43027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,430]DEBUG 43027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,431]DEBUG 43028[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,432]DEBUG 43029[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,433]DEBUG 43030[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#42]
[2018-05-30 06:18:04,433]DEBUG 43030[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,433]DEBUG 43030[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,434]DEBUG 43031[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,434]DEBUG 43031[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,435]DEBUG 43032[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,435]DEBUG 43032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,435]DEBUG 43032[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,435]DEBUG 43032[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,436]DEBUG 43033[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,438]DEBUG 43035[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,438]DEBUG 43035[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#43]
[2018-05-30 06:18:04,439]DEBUG 43036[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,439]DEBUG 43036[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,439]DEBUG 43036[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,440]DEBUG 43037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,440]DEBUG 43037[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,440]DEBUG 43037[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,440]DEBUG 43037[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,440]DEBUG 43037[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,441]DEBUG 43038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,441]DEBUG 43038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,441]DEBUG 43038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,441]DEBUG 43038[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,441]DEBUG 43038[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,442]DEBUG 43039[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,443]DEBUG 43040[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,443]DEBUG 43040[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#45]
[2018-05-30 06:18:04,444]DEBUG 43041[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,444]DEBUG 43041[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,444]DEBUG 43041[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,445]DEBUG 43042[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,445]DEBUG 43042[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,445]DEBUG 43042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,445]DEBUG 43042[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,446]DEBUG 43043[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,446]DEBUG 43043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,446]DEBUG 43043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,446]DEBUG 43043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,446]DEBUG 43043[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,447]DEBUG 43044[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,447]DEBUG 43044[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,448]DEBUG 43045[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,449]DEBUG 43046[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#44]
[2018-05-30 06:18:04,449]DEBUG 43046[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,449]DEBUG 43046[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,449]DEBUG 43046[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,450]DEBUG 43047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,450]DEBUG 43047[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,450]DEBUG 43047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,450]DEBUG 43047[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,450]DEBUG 43047[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,451]DEBUG 43048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,451]DEBUG 43048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,451]DEBUG 43048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,451]DEBUG 43048[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,453]DEBUG 43050[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,453]DEBUG 43050[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,455]DEBUG 43052[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,455]DEBUG 43052[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,455]DEBUG 43052[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,456]DEBUG 43053[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,456]DEBUG 43053[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,456]DEBUG 43053[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,457]DEBUG 43054[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,458]DEBUG 43055[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,458]DEBUG 43055[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,459]DEBUG 43056[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,459]DEBUG 43056[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,460]DEBUG 43057[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,460]DEBUG 43057[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,460]DEBUG 43057[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,460]DEBUG 43057[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=43, roleName=Supervisor}
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=44, roleName=Customer}
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=42, roleName=Administrator}
[2018-05-30 06:18:04,461]DEBUG 43058[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=45, roleName=Merchandiser}
[2018-05-30 06:18:04,462]DEBUG 43059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,462]DEBUG 43059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,463]DEBUG 43060[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,463]DEBUG 43060[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,464]DEBUG 43061[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,464]DEBUG 43061[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a873204]
[2018-05-30 06:18:04,464]DEBUG 43061[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,521]DEBUG 43118[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,522]DEBUG 43119[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,522]DEBUG 43119[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a873204] after transaction
[2018-05-30 06:18:04,523]DEBUG 43120[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,524]DEBUG 43121[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,525]DEBUG 43122[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,526] INFO 43123[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = testContainsRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,527]DEBUG 43124[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@6dcc8542, testMethod = testContainsRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,529]DEBUG 43126[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,529]DEBUG 43126[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,531]DEBUG 43128[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,532]DEBUG 43129[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,533]DEBUG 43130[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,533]DEBUG 43130[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,533]DEBUG 43130[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,534]DEBUG 43131[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,534]DEBUG 43131[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,535]DEBUG 43132[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,535]DEBUG 43132[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,536]DEBUG 43133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,536]DEBUG 43133[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,536]DEBUG 43133[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,537]DEBUG 43134[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,537]DEBUG 43134[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,538]DEBUG 43135[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,538]DEBUG 43135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,538]DEBUG 43135[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,538]DEBUG 43135[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,539]DEBUG 43136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,539]DEBUG 43136[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,539]DEBUG 43136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,539]DEBUG 43136[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,540]DEBUG 43137[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,540]DEBUG 43137[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51]
[2018-05-30 06:18:04,541]DEBUG 43138[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,541]DEBUG 43138[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,541]DEBUG 43138[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,542]DEBUG 43139[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,543]DEBUG 43140[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754845
[2018-05-30 06:18:04,543]DEBUG 43140[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@a32b2dc] for Hibernate transaction
[2018-05-30 06:18:04,543]DEBUG 43140[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@a32b2dc]
[2018-05-30 06:18:04,543]DEBUG 43140[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,543]DEBUG 43140[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,544]DEBUG 43141[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,544]DEBUG 43141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,544] INFO 43141[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (11): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,545]DEBUG 43142[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,545]DEBUG 43142[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,545]DEBUG 43142[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,547]DEBUG 43144[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 46
[2018-05-30 06:18:04,548]DEBUG 43145[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,548]DEBUG 43145[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,549]DEBUG 43146[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,552]DEBUG 43149[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,554]DEBUG 43151[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 47
[2018-05-30 06:18:04,554]DEBUG 43151[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,555]DEBUG 43152[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,555]DEBUG 43152[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,556]DEBUG 43153[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,558]DEBUG 43155[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 48
[2018-05-30 06:18:04,558]DEBUG 43155[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,559]DEBUG 43156[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,559]DEBUG 43156[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,560]DEBUG 43157[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,561]DEBUG 43158[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 49
[2018-05-30 06:18:04,562]DEBUG 43159[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,563]DEBUG 43160[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,564]DEBUG 43161[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,564]DEBUG 43161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,564]DEBUG 43161[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,565]DEBUG 43162[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,565]DEBUG 43162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-30 06:18:04,565]DEBUG 43162[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-30 06:18:04,566]DEBUG 43163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-30 06:18:04,566]DEBUG 43163[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-30 06:18:04,566]DEBUG 43163[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,566]DEBUG 43163[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2018-05-30 06:18:04,568]DEBUG 43165[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,569]DEBUG 43166[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-30 06:18:04,569]DEBUG 43166[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-30 06:18:04,569]DEBUG 43166[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-30 06:18:04,570]DEBUG 43167[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,570]DEBUG 43167[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,570]DEBUG 43167[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,571]DEBUG 43168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,571]DEBUG 43168[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,571]DEBUG 43168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,571]DEBUG 43168[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,571]DEBUG 43168[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,572]DEBUG 43169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-30 06:18:04,572]DEBUG 43169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-30 06:18:04,572]DEBUG 43169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-30 06:18:04,572]DEBUG 43169[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-30 06:18:04,572]DEBUG 43169[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,573]DEBUG 43170[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2018-05-30 06:18:04,574]DEBUG 43171[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,574]DEBUG 43171[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-30 06:18:04,575]DEBUG 43172[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-30 06:18:04,576]DEBUG 43173[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-30 06:18:04,576]DEBUG 43173[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,576]DEBUG 43173[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,576]DEBUG 43173[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,577]DEBUG 43174[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,578]DEBUG 43175[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,578]DEBUG 43175[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,579]DEBUG 43176[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,579]DEBUG 43176[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,579]DEBUG 43176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-30 06:18:04,579]DEBUG 43176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-30 06:18:04,579]DEBUG 43176[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-30 06:18:04,580]DEBUG 43177[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-30 06:18:04,580]DEBUG 43177[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,580]DEBUG 43177[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID asc
[2018-05-30 06:18:04,582]DEBUG 43179[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,582]DEBUG 43179[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-30 06:18:04,583]DEBUG 43180[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-30 06:18:04,583]DEBUG 43180[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-30 06:18:04,583]DEBUG 43180[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,583]DEBUG 43180[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,583]DEBUG 43180[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,584]DEBUG 43181[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,584]DEBUG 43181[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-30 06:18:04,585]DEBUG 43182[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-30 06:18:04,586]DEBUG 43183[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-30 06:18:04,586]DEBUG 43183[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,586]DEBUG 43183[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.ID desc
[2018-05-30 06:18:04,588]DEBUG 43185[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,589]DEBUG 43186[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#49]
[2018-05-30 06:18:04,589]DEBUG 43186[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#47]
[2018-05-30 06:18:04,590]DEBUG 43187[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#46]
[2018-05-30 06:18:04,592]DEBUG 43189[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,592]DEBUG 43189[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,593]DEBUG 43190[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,593]DEBUG 43190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,593]DEBUG 43190[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,594]DEBUG 43191[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,595]DEBUG 43192[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,595]DEBUG 43192[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,596]DEBUG 43193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=49, roleName=Merchandiser}
[2018-05-30 06:18:04,596]DEBUG 43193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=48, roleName=Customer}
[2018-05-30 06:18:04,596]DEBUG 43193[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=47, roleName=Supervisor}
[2018-05-30 06:18:04,597]DEBUG 43194[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=46, roleName=Administrator}
[2018-05-30 06:18:04,597]DEBUG 43194[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,597]DEBUG 43194[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,599]DEBUG 43196[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,599]DEBUG 43196[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,599]DEBUG 43196[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,600]DEBUG 43197[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@a32b2dc]
[2018-05-30 06:18:04,600]DEBUG 43197[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,602]DEBUG 43199[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,603]DEBUG 43200[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,603]DEBUG 43200[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@a32b2dc] after transaction
[2018-05-30 06:18:04,603]DEBUG 43200[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,603]DEBUG 43200[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,604]DEBUG 43201[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,604] INFO 43201[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,604]DEBUG 43201[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@7cbd9f51, testMethod = testFindByCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,605]DEBUG 43202[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,605]DEBUG 43202[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,605]DEBUG 43202[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,605]DEBUG 43202[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,606]DEBUG 43203[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,607]DEBUG 43204[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,608]DEBUG 43205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,608]DEBUG 43205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,608]DEBUG 43205[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,608]DEBUG 43205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,608]DEBUG 43205[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,609]DEBUG 43206[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,609]DEBUG 43206[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d]
[2018-05-30 06:18:04,609]DEBUG 43206[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOneOfCriterionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,610]DEBUG 43207[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,610]DEBUG 43207[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOneOfCriterionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754846
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@5ea98388] for Hibernate transaction
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ea98388]
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,611]DEBUG 43208[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,612]DEBUG 43209[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,612]DEBUG 43209[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,612] INFO 43209[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (12): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,612]DEBUG 43209[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,613]DEBUG 43210[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,613]DEBUG 43210[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,615]DEBUG 43212[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 50
[2018-05-30 06:18:04,615]DEBUG 43212[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,615]DEBUG 43212[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,616]DEBUG 43213[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,616]DEBUG 43213[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,618]DEBUG 43215[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 51
[2018-05-30 06:18:04,618]DEBUG 43215[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,618]DEBUG 43215[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,619]DEBUG 43216[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,619]DEBUG 43216[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,620]DEBUG 43217[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 52
[2018-05-30 06:18:04,621]DEBUG 43218[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,622]DEBUG 43219[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,622]DEBUG 43219[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,622]DEBUG 43219[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,624]DEBUG 43221[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 53
[2018-05-30 06:18:04,624]DEBUG 43221[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,625]DEBUG 43222[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,628]DEBUG 43225[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,628]DEBUG 43225[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,629]DEBUG 43226[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,629]DEBUG 43226[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,629]DEBUG 43226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-30 06:18:04,629]DEBUG 43226[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-30 06:18:04,630]DEBUG 43227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-30 06:18:04,630]DEBUG 43227[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-30 06:18:04,630]DEBUG 43227[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,630]DEBUG 43227[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName asc
[2018-05-30 06:18:04,632]DEBUG 43229[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,633]DEBUG 43230[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2018-05-30 06:18:04,633]DEBUG 43230[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#53]
[2018-05-30 06:18:04,633]DEBUG 43230[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2018-05-30 06:18:04,634]DEBUG 43231[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,634]DEBUG 43231[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,634]DEBUG 43231[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,635]DEBUG 43232[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,635]DEBUG 43232[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,636]DEBUG 43233[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,636]DEBUG 43233[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,636]DEBUG 43233[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,636]DEBUG 43233[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-30 06:18:04,637]DEBUG 43234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-30 06:18:04,637]DEBUG 43234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-30 06:18:04,637]DEBUG 43234[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-30 06:18:04,637]DEBUG 43234[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,637]DEBUG 43234[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ? and this_.ID<=? order by this_.RoleName desc
[2018-05-30 06:18:04,639]DEBUG 43236[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,640]DEBUG 43237[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#51]
[2018-05-30 06:18:04,640]DEBUG 43237[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#53]
[2018-05-30 06:18:04,640]DEBUG 43237[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#50]
[2018-05-30 06:18:04,641]DEBUG 43238[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,641]DEBUG 43238[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,641]DEBUG 43238[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,641]DEBUG 43238[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=52, roleName=Customer}
[2018-05-30 06:18:04,642]DEBUG 43239[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=51, roleName=Supervisor}
[2018-05-30 06:18:04,643]DEBUG 43240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=50, roleName=Administrator}
[2018-05-30 06:18:04,643]DEBUG 43240[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=53, roleName=Merchandiser}
[2018-05-30 06:18:04,643]DEBUG 43240[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,643]DEBUG 43240[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,644]DEBUG 43241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,645]DEBUG 43242[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,645]DEBUG 43242[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,645]DEBUG 43242[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ea98388]
[2018-05-30 06:18:04,646]DEBUG 43243[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,846]DEBUG 43443[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,847]DEBUG 43444[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,848]DEBUG 43445[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ea98388] after transaction
[2018-05-30 06:18:04,848]DEBUG 43445[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,848]DEBUG 43445[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,849]DEBUG 43446[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,849] INFO 43446[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,851]DEBUG 43448[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@10ef4d, testMethod = testFindByOneOfCriterionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,851]DEBUG 43448[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,852]DEBUG 43449[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,853]DEBUG 43450[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,853]DEBUG 43450[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,854]DEBUG 43451[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,854]DEBUG 43451[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,855]DEBUG 43452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,855]DEBUG 43452[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,855]DEBUG 43452[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,856]DEBUG 43453[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,856]DEBUG 43453[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,857]DEBUG 43454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,857]DEBUG 43454[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,857]DEBUG 43454[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,858]DEBUG 43455[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,858]DEBUG 43455[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,859]DEBUG 43456[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,859]DEBUG 43456[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,860]DEBUG 43457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,860]DEBUG 43457[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,860]DEBUG 43457[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,861]DEBUG 43458[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,861]DEBUG 43458[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,862]DEBUG 43459[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,862]DEBUG 43459[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,863]DEBUG 43460[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9]
[2018-05-30 06:18:04,864]DEBUG 43461[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,864]DEBUG 43461[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,865]DEBUG 43462[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,866]DEBUG 43463[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,869]DEBUG 43466[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754848
[2018-05-30 06:18:04,869]DEBUG 43466[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7ca99a28] for Hibernate transaction
[2018-05-30 06:18:04,869]DEBUG 43466[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ca99a28]
[2018-05-30 06:18:04,869]DEBUG 43466[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,870]DEBUG 43467[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,870]DEBUG 43467[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,870]DEBUG 43467[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,870] INFO 43467[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (13): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,871]DEBUG 43468[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,871]DEBUG 43468[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,871]DEBUG 43468[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,873]DEBUG 43470[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 54
[2018-05-30 06:18:04,873]DEBUG 43470[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,874]DEBUG 43471[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,874]DEBUG 43471[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,874]DEBUG 43471[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,876]DEBUG 43473[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 55
[2018-05-30 06:18:04,876]DEBUG 43473[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,877]DEBUG 43474[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,877]DEBUG 43474[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,877]DEBUG 43474[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,879]DEBUG 43476[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 56
[2018-05-30 06:18:04,879]DEBUG 43476[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,880]DEBUG 43477[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,880]DEBUG 43477[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,880]DEBUG 43477[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,882]DEBUG 43479[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 57
[2018-05-30 06:18:04,882]DEBUG 43479[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,883]DEBUG 43480[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,883]DEBUG 43480[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,884]DEBUG 43481[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,885]DEBUG 43482[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 58
[2018-05-30 06:18:04,886]DEBUG 43483[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,887]DEBUG 43484[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,888]DEBUG 43485[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,889]DEBUG 43486[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,889]DEBUG 43486[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,890]DEBUG 43487[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,890]DEBUG 43487[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=tempAdmin}
[2018-05-30 06:18:04,891]DEBUG 43488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-30 06:18:04,891]DEBUG 43488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-30 06:18:04,891]DEBUG 43488[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-30 06:18:04,892]DEBUG 43489[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-30 06:18:04,892]DEBUG 43489[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,893]DEBUG 43490[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,900]DEBUG 43497[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,901]DEBUG 43498[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-30 06:18:04,901]DEBUG 43498[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,902]DEBUG 43499[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,902]DEBUG 43499[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,903]DEBUG 43500[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,903]DEBUG 43500[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,904]DEBUG 43501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,904]DEBUG 43501[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,904]DEBUG 43501[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=tempAdmin and something}
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:04,905]DEBUG 43502[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,906]DEBUG 43503[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-30 06:18:04,906]DEBUG 43503[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:04,907]DEBUG 43504[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,908]DEBUG 43505[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,908]DEBUG 43505[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-30 06:18:04,909]DEBUG 43506[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,909]DEBUG 43506[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-30 06:18:04,910]DEBUG 43507[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,910]DEBUG 43507[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,910]DEBUG 43507[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,911]DEBUG 43508[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,911]DEBUG 43508[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,911]DEBUG 43508[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,911]DEBUG 43508[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,912]DEBUG 43509[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,912]DEBUG 43509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=something heretempAdmin and something and something here}
[2018-05-30 06:18:04,912]DEBUG 43509[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-30 06:18:04,913]DEBUG 43510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-30 06:18:04,913]DEBUG 43510[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-30 06:18:04,914]DEBUG 43511[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-30 06:18:04,914]DEBUG 43511[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:04,914]DEBUG 43511[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,914]DEBUG 43511[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-30 06:18:04,914]DEBUG 43511[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:04,915]DEBUG 43512[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,916]DEBUG 43513[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,916]DEBUG 43513[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-30 06:18:04,924]DEBUG 43521[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,924]DEBUG 43521[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#58]
[2018-05-30 06:18:04,925]DEBUG 43522[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,925]DEBUG 43522[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,925]DEBUG 43522[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,925]DEBUG 43522[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=58, roleName=something heretempAdmin and something and something here}
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=57, roleName=Merchandiser}
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=56, roleName=Customer}
[2018-05-30 06:18:04,926]DEBUG 43523[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=55, roleName=Supervisor}
[2018-05-30 06:18:04,927]DEBUG 43524[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=54, roleName=Administrator}
[2018-05-30 06:18:04,927]DEBUG 43524[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,927]DEBUG 43524[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,928]DEBUG 43525[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,928]DEBUG 43525[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,929]DEBUG 43526[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,929]DEBUG 43526[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ca99a28]
[2018-05-30 06:18:04,929]DEBUG 43526[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,931]DEBUG 43528[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,931]DEBUG 43528[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,931]DEBUG 43528[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ca99a28] after transaction
[2018-05-30 06:18:04,932]DEBUG 43529[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,932]DEBUG 43529[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,932]DEBUG 43529[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,932] INFO 43529[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,933]DEBUG 43530[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@47f0b0d9, testMethod = testFindByRoleNameWithUserSelectWayConditions@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,933]DEBUG 43530[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,933]DEBUG 43530[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,933]DEBUG 43530[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,934]DEBUG 43531[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,935]DEBUG 43532[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,936]DEBUG 43533[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f]
[2018-05-30 06:18:04,937]DEBUG 43534[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByRoleNameWithUserSelectWayConditionsSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,937]DEBUG 43534[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,937]DEBUG 43534[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByRoleNameWithUserSelectWayConditionsSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754849
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@151fc9d3] for Hibernate transaction
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@151fc9d3]
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,938]DEBUG 43535[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,939]DEBUG 43536[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,939] INFO 43536[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (14): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,939]DEBUG 43536[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,939]DEBUG 43536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,939]DEBUG 43536[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,941]DEBUG 43538[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 59
[2018-05-30 06:18:04,941]DEBUG 43538[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,941]DEBUG 43538[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,942]DEBUG 43539[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,942]DEBUG 43539[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,943]DEBUG 43540[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 60
[2018-05-30 06:18:04,943]DEBUG 43540[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,945]DEBUG 43542[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,946]DEBUG 43543[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,946]DEBUG 43543[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,947]DEBUG 43544[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 61
[2018-05-30 06:18:04,947]DEBUG 43544[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,948]DEBUG 43545[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,948]DEBUG 43545[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,948]DEBUG 43545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,950]DEBUG 43547[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 62
[2018-05-30 06:18:04,950]DEBUG 43547[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,951]DEBUG 43548[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,951]DEBUG 43548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,951]DEBUG 43548[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,952]DEBUG 43549[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 63
[2018-05-30 06:18:04,953]DEBUG 43550[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,954]DEBUG 43551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,954]DEBUG 43551[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,954]DEBUG 43551[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,954]DEBUG 43551[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin}
[2018-05-30 06:18:04,955]DEBUG 43552[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,956]DEBUG 43553[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:04,957]DEBUG 43554[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,957]DEBUG 43554[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-30 06:18:04,958]DEBUG 43555[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,958]DEBUG 43555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,958]DEBUG 43555[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,959]DEBUG 43556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,959]DEBUG 43556[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,959]DEBUG 43556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,959]DEBUG 43556[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=tempAdmin and something}
[2018-05-30 06:18:04,960]DEBUG 43557[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:04,961]DEBUG 43558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,961]DEBUG 43558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-30 06:18:04,961]DEBUG 43558[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:04,962]DEBUG 43559[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,963]DEBUG 43560[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,963]DEBUG 43560[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-30 06:18:04,964]DEBUG 43561[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,965]DEBUG 43562[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-30 06:18:04,965]DEBUG 43562[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,965]DEBUG 43562[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,965]DEBUG 43562[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,966]DEBUG 43563[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,966]DEBUG 43563[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,966]DEBUG 43563[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 1 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2018-05-30 06:18:04,967]DEBUG 43564[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:04,968]DEBUG 43565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,968]DEBUG 43565[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - update Roles set RoleName=? where ID=?
[2018-05-30 06:18:04,968]DEBUG 43565[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:04,969]DEBUG 43566[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,970]DEBUG 43567[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,970]DEBUG 43567[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName like ?
[2018-05-30 06:18:04,971]DEBUG 43568[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:04,972]DEBUG 43569[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#63]
[2018-05-30 06:18:04,972]DEBUG 43569[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:04,972]DEBUG 43569[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,972]DEBUG 43569[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:04,973]DEBUG 43570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:04,973]DEBUG 43570[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 5 objects
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=60, roleName=Supervisor}
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=59, roleName=Administrator}
[2018-05-30 06:18:04,975]DEBUG 43572[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=61, roleName=Customer}
[2018-05-30 06:18:04,976]DEBUG 43573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=62, roleName=Merchandiser}
[2018-05-30 06:18:04,976]DEBUG 43573[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=63, roleName=something heretempAdmin and something and something here}
[2018-05-30 06:18:04,976]DEBUG 43573[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,976]DEBUG 43573[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:04,977]DEBUG 43574[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,978]DEBUG 43575[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,978]DEBUG 43575[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:04,978]DEBUG 43575[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@151fc9d3]
[2018-05-30 06:18:04,978]DEBUG 43575[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:04,981]DEBUG 43578[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:04,981]DEBUG 43578[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,981]DEBUG 43578[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@151fc9d3] after transaction
[2018-05-30 06:18:04,981]DEBUG 43578[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:04,982]DEBUG 43579[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:04,982]DEBUG 43579[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:04,982] INFO 43579[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,983]DEBUG 43580[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@516d389f, testMethod = testFindByRoleNameWithUserSelectWayConditionsSorting@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:04,983]DEBUG 43580[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,983]DEBUG 43580[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:04,983]DEBUG 43580[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:04,984]DEBUG 43581[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:04,985]DEBUG 43582[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:04,986]DEBUG 43583[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:04,987]DEBUG 43584[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:04,987]DEBUG 43584[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110]
[2018-05-30 06:18:04,987]DEBUG 43584[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testGetAdminRole' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,988]DEBUG 43585[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,988]DEBUG 43585[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:04,988]DEBUG 43585[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testGetAdminRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:04,988]DEBUG 43585[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754849
[2018-05-30 06:18:04,988]DEBUG 43585[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@1f0fee7c] for Hibernate transaction
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f0fee7c]
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:04,989] INFO 43586[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (15): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:04,989]DEBUG 43586[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,990]DEBUG 43587[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,990]DEBUG 43587[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,991]DEBUG 43588[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 64
[2018-05-30 06:18:04,992]DEBUG 43589[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,992]DEBUG 43589[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,993]DEBUG 43590[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,993]DEBUG 43590[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,994]DEBUG 43591[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 65
[2018-05-30 06:18:04,994]DEBUG 43591[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,995]DEBUG 43592[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,995]DEBUG 43592[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,995]DEBUG 43592[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:04,997]DEBUG 43594[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 66
[2018-05-30 06:18:04,997]DEBUG 43594[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:04,998]DEBUG 43595[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:04,998]DEBUG 43595[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:04,998]DEBUG 43595[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,000]DEBUG 43597[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 67
[2018-05-30 06:18:05,000]DEBUG 43597[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,001]DEBUG 43598[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,001]DEBUG 43598[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,002]DEBUG 43599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:05,002]DEBUG 43599[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,002]DEBUG 43599[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,002]DEBUG 43599[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-30 06:18:05,004]DEBUG 43601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-30 06:18:05,004]DEBUG 43601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-30 06:18:05,004]DEBUG 43601[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-30 06:18:05,004]DEBUG 43601[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,005]DEBUG 43602[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:05,006]DEBUG 43603[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,007]DEBUG 43604[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#64]
[2018-05-30 06:18:05,007]DEBUG 43604[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,007]DEBUG 43604[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,008]DEBUG 43605[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,008]DEBUG 43605[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,009]DEBUG 43606[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,009]DEBUG 43606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:05,009]DEBUG 43606[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,009]DEBUG 43606[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,010]DEBUG 43607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-30 06:18:05,010]DEBUG 43607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-30 06:18:05,010]DEBUG 43607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-30 06:18:05,010]DEBUG 43607[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-30 06:18:05,011]DEBUG 43608[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,011]DEBUG 43608[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:05,012]DEBUG 43609[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,013]DEBUG 43610[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Role#64]
[2018-05-30 06:18:05,013]DEBUG 43610[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,013]DEBUG 43610[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,013]DEBUG 43610[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,014]DEBUG 43611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,014]DEBUG 43611[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,015]DEBUG 43612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 1 deletions to 4 objects
[2018-05-30 06:18:05,015]DEBUG 43612[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,015]DEBUG 43612[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,015]DEBUG 43612[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-30 06:18:05,016]DEBUG 43613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-30 06:18:05,016]DEBUG 43613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-30 06:18:05,016]DEBUG 43613[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=64, roleName=Administrator}
[2018-05-30 06:18:05,016]DEBUG 43613[main] - org.hibernate.engine.ActionQueue.areTablesToUpdated(ActionQueue.java:253) - changes must be flushed to space: Roles
[2018-05-30 06:18:05,017]DEBUG 43614[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,017]DEBUG 43614[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles where ID=?
[2018-05-30 06:18:05,017]DEBUG 43614[main] - org.hibernate.jdbc.BatchingBatcher.doExecuteBatch(BatchingBatcher.java:66) - Executing batch size: 1
[2018-05-30 06:18:05,018]DEBUG 43615[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,019]DEBUG 43616[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,019]DEBUG 43616[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID0_0_, this_.RoleName as RoleName0_0_ from Roles this_ where this_.RoleName=?
[2018-05-30 06:18:05,021]DEBUG 43618[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,021]DEBUG 43618[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,022]DEBUG 43619[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,022]DEBUG 43619[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,022]DEBUG 43619[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,023]DEBUG 43620[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,023]DEBUG 43620[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,025]DEBUG 43622[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 68
[2018-05-30 06:18:05,025]DEBUG 43622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,025]DEBUG 43622[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=65, roleName=Supervisor}
[2018-05-30 06:18:05,026]DEBUG 43623[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=66, roleName=Customer}
[2018-05-30 06:18:05,027]DEBUG 43624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=67, roleName=Merchandiser}
[2018-05-30 06:18:05,027]DEBUG 43624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=68, roleName=Administrator}
[2018-05-30 06:18:05,027]DEBUG 43624[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,027]DEBUG 43624[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,028]DEBUG 43625[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,028]DEBUG 43625[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:05,028]DEBUG 43625[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,029]DEBUG 43626[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f0fee7c]
[2018-05-30 06:18:05,029]DEBUG 43626[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,030]DEBUG 43627[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,031]DEBUG 43628[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,031]DEBUG 43628[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f0fee7c] after transaction
[2018-05-30 06:18:05,031]DEBUG 43628[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,031]DEBUG 43628[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,032]DEBUG 43629[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,032] INFO 43629[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]]
[2018-05-30 06:18:05,032]DEBUG 43629[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@3768d110, testMethod = testGetAdminRole@RoleDAOTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,033]DEBUG 43630[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:05,033]DEBUG 43630[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest]
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,034]DEBUG 43631[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,035]DEBUG 43632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,035]DEBUG 43632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,035]DEBUG 43632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,035]DEBUG 43632[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,035]DEBUG 43632[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,037]DEBUG 43634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,037]DEBUG 43634[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,037]DEBUG 43634[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,038]DEBUG 43635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,038]DEBUG 43635[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,038]DEBUG 43635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,038]DEBUG 43635[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,038]DEBUG 43635[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,039]DEBUG 43636[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,039]DEBUG 43636[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,039]DEBUG 43636[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,039]DEBUG 43636[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.RoleDAOTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,039]DEBUG 43636[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40]
[2018-05-30 06:18:05,040]DEBUG 43637[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,040]DEBUG 43637[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:05,041]DEBUG 43638[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,041]DEBUG 43638[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,041]DEBUG 43638[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754850
[2018-05-30 06:18:05,041]DEBUG 43638[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@4dfadf6a] for Hibernate transaction
[2018-05-30 06:18:05,041]DEBUG 43638[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4dfadf6a]
[2018-05-30 06:18:05,042]DEBUG 43639[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,042]DEBUG 43639[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,042]DEBUG 43639[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,042]DEBUG 43639[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:05,042] INFO 43639[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (16): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,043]DEBUG 43640[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,043]DEBUG 43640[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,043]DEBUG 43640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,045]DEBUG 43642[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 69
[2018-05-30 06:18:05,045]DEBUG 43642[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,045]DEBUG 43642[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,046]DEBUG 43643[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,046]DEBUG 43643[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,047]DEBUG 43644[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 70
[2018-05-30 06:18:05,047]DEBUG 43644[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,048]DEBUG 43645[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,048]DEBUG 43645[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,048]DEBUG 43645[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,049]DEBUG 43646[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 71
[2018-05-30 06:18:05,050]DEBUG 43647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,050]DEBUG 43647[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,050]DEBUG 43647[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,051]DEBUG 43648[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Roles (RoleName) values (?)
[2018-05-30 06:18:05,052]DEBUG 43649[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 72
[2018-05-30 06:18:05,052]DEBUG 43649[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,053]DEBUG 43650[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,053]DEBUG 43650[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,053]DEBUG 43650[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[2018-05-30 06:18:05,053]DEBUG 43650[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=69, roleName=Administrator}
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=70, roleName=Supervisor}
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=71, roleName=Customer}
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Role{id=72, roleName=Merchandiser}
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,054]DEBUG 43651[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,055]DEBUG 43652[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,056]DEBUG 43653[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:05,056]DEBUG 43653[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,056]DEBUG 43653[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4dfadf6a]
[2018-05-30 06:18:05,056]DEBUG 43653[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,058]DEBUG 43655[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,058]DEBUG 43655[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,059]DEBUG 43656[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4dfadf6a] after transaction
[2018-05-30 06:18:05,059]DEBUG 43656[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,059]DEBUG 43656[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,059]DEBUG 43656[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,059] INFO 43656[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:05,060]DEBUG 43657[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.RoleDAOTest@613cbf40, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,060]DEBUG 43657[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@42408073 testClass = RoleDAOTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-30 06:18:05,061]DEBUG 43658[main] - org.springframework.test.context.junit4.SpringJUnit4ClassRunner.<init>(SpringJUnit4ClassRunner.java:106) - SpringJUnit4ClassRunner constructor called with [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest].
[2018-05-30 06:18:05,061] INFO 43658[main] - org.springframework.test.context.TestContextManager.retrieveTestExecutionListeners(TestContextManager.java:185) - @TestExecutionListeners is not present for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: using defaults.
[2018-05-30 06:18:05,062]DEBUG 43659[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,062]DEBUG 43659[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,062]DEBUG 43659[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,062]DEBUG 43659[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,063]DEBUG 43660[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,063]DEBUG 43660[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,064]DEBUG 43661[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,064]DEBUG 43661[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,064]DEBUG 43661[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,071]DEBUG 43668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,071]DEBUG 43668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,071]DEBUG 43668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,071]DEBUG 43668[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.<init>(InjectionMetadata.java:59) - Found injected element on class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]: AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,072]DEBUG 43669[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,073]DEBUG 43670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,073]DEBUG 43670[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'customerTypeDao'
[2018-05-30 06:18:05,073]DEBUG 43670[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,073]DEBUG 43670[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,074]DEBUG 43671[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'dimensionDao'
[2018-05-30 06:18:05,074]DEBUG 43671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,074]DEBUG 43671[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,074]DEBUG 43671[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderDao'
[2018-05-30 06:18:05,074]DEBUG 43671[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,075]DEBUG 43672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,075]DEBUG 43672[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderItemDao'
[2018-05-30 06:18:05,075]DEBUG 43672[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,075]DEBUG 43672[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,075]DEBUG 43672[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'orderStatusDao'
[2018-05-30 06:18:05,076]DEBUG 43673[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,076]DEBUG 43673[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,076]DEBUG 43673[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'productDao'
[2018-05-30 06:18:05,076]DEBUG 43673[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,076]DEBUG 43673[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,077]DEBUG 43674[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'regionDao'
[2018-05-30 06:18:05,077]DEBUG 43674[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,077]DEBUG 43674[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,077]DEBUG 43674[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'roleDao'
[2018-05-30 06:18:05,077]DEBUG 43674[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,078]DEBUG 43675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,078]DEBUG 43675[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'userDao'
[2018-05-30 06:18:05,078]DEBUG 43675[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,078]DEBUG 43675[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,078]DEBUG 43675[main] - org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:420) - Autowiring by type from bean name 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' to bean named 'sessionFactory'
[2018-05-30 06:18:05,079]DEBUG 43676[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,079]DEBUG 43676[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'setUp' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,079]DEBUG 43676[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,080]DEBUG 43677[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259]
[2018-05-30 06:18:05,080]DEBUG 43677[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.setUp()
[2018-05-30 06:18:05,081]DEBUG 43678[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'tearDown' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,081]DEBUG 43678[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.tearDown() throws java.lang.Exception
[2018-05-30 06:18:05,081]DEBUG 43678[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,081]DEBUG 43678[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAll()
[2018-05-30 06:18:05,082]DEBUG 43679[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,082]DEBUG 43679[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindById()
[2018-05-30 06:18:05,082]DEBUG 43679[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,082]DEBUG 43679[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindAllWithSorting()
[2018-05-30 06:18:05,082]DEBUG 43679[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,083]DEBUG 43680[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testRowCountWithCriterions()
[2018-05-30 06:18:05,083]DEBUG 43680[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,083]DEBUG 43680[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testPaging()
[2018-05-30 06:18:05,083]DEBUG 43680[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,084]DEBUG 43681[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest.testFindByOrder()
[2018-05-30 06:18:05,084]DEBUG 43681[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,084]DEBUG 43681[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.testContextFile()
[2018-05-30 06:18:05,084]DEBUG 43681[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDB()
[2018-05-30 06:18:05,084]DEBUG 43681[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderItem()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanDimension()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanProduct()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrder()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanOrderStatus()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanUser()
[2018-05-30 06:18:05,085]DEBUG 43682[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanCustomerType()
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRegion()
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected void com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.cleanRole()
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:749) - Found finalize() method - using NO_OVERRIDE
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:761) - Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:766) - Found 'hashCode' method: public native int java.lang.Object.hashCode()
[2018-05-30 06:18:05,086]DEBUG 43683[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:798) - Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
[2018-05-30 06:18:05,087]DEBUG 43684[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
[2018-05-30 06:18:05,087]DEBUG 43684[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,087]DEBUG 43684[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,087]DEBUG 43684[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
[2018-05-30 06:18:05,089]DEBUG 43686[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
[2018-05-30 06:18:05,090]DEBUG 43687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
[2018-05-30 06:18:05,090]DEBUG 43687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,090]DEBUG 43687[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,091]DEBUG 43688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
[2018-05-30 06:18:05,091]DEBUG 43688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
[2018-05-30 06:18:05,091]DEBUG 43688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
[2018-05-30 06:18:05,091]DEBUG 43688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,091]DEBUG 43688[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
[2018-05-30 06:18:05,092]DEBUG 43689[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
[2018-05-30 06:18:05,093]DEBUG 43690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
[2018-05-30 06:18:05,093]DEBUG 43690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
[2018-05-30 06:18:05,093]DEBUG 43690[main] - org.springframework.aop.framework.Cglib2AopProxy$ProxyCallbackFilter.accept(Cglib2AopProxy.java:755) - Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
[2018-05-30 06:18:05,105]DEBUG 43702[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAll' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,105]DEBUG 43702[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,105]DEBUG 43702[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:466) - Retrieved @TransactionConfiguration [@org.springframework.test.context.transaction.TransactionConfiguration(transactionManager=transactionManager, defaultRollback=true)] for test class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,105]DEBUG 43702[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.retrieveConfigurationAttributes(TransactionalTestExecutionListener.java:483) - Retrieved TransactionConfigurationAttributes [[TransactionConfigurationAttributes@5909b31c transactionManagerName = 'transactionManager', defaultRollback = true]] for class [class com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,105]DEBUG 43702[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,106]DEBUG 43703[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,106]DEBUG 43703[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754851
[2018-05-30 06:18:05,106]DEBUG 43703[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@dc1b4bc] for Hibernate transaction
[2018-05-30 06:18:05,106]DEBUG 43703[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@dc1b4bc]
[2018-05-30 06:18:05,106]DEBUG 43703[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,107]DEBUG 43704[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,107]DEBUG 43704[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,107]DEBUG 43704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,107] INFO 43704[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (1): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,107]DEBUG 43704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,107]DEBUG 43704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,110]DEBUG 43707[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,111]DEBUG 43708[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,111]DEBUG 43708[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,112]DEBUG 43709[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,112]DEBUG 43709[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,112]DEBUG 43709[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,113]DEBUG 43710[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,114]DEBUG 43711[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,114]DEBUG 43711[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,115]DEBUG 43712[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,115]DEBUG 43712[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,116]DEBUG 43713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,117]DEBUG 43714[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,117]DEBUG 43714[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,118]DEBUG 43715[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,119]DEBUG 43716[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,119]DEBUG 43716[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,120]DEBUG 43717[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,121]DEBUG 43718[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,121]DEBUG 43718[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,122]DEBUG 43719[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,123]DEBUG 43720[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,124]DEBUG 43721[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,124]DEBUG 43721[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,126]DEBUG 43723[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,126]DEBUG 43723[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,127]DEBUG 43724[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,127]DEBUG 43724[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,128]DEBUG 43725[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:05,129]DEBUG 43726[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,129]DEBUG 43726[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,129]DEBUG 43726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,130]DEBUG 43727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,131]DEBUG 43728[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:05,131]DEBUG 43728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,132]DEBUG 43729[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,132]DEBUG 43729[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,132]DEBUG 43729[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:05,133]DEBUG 43730[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:05,136]DEBUG 43733[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,136]DEBUG 43733[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,137]DEBUG 43734[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,137]DEBUG 43734[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:05,139]DEBUG 43736[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:05,139]DEBUG 43736[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,139]DEBUG 43736[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,141]DEBUG 43738[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,141]DEBUG 43738[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,143]DEBUG 43740[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 1
[2018-05-30 06:18:05,143]DEBUG 43740[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,144]DEBUG 43741[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,144]DEBUG 43741[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,144]DEBUG 43741[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,146]DEBUG 43743[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:05,146]DEBUG 43743[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,148]DEBUG 43745[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,148]DEBUG 43745[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,149]DEBUG 43746[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,150]DEBUG 43747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,150]DEBUG 43747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,150]DEBUG 43747[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,150]DEBUG 43747[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,150]DEBUG 43747[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID
[2018-05-30 06:18:05,153]DEBUG 43750[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,154]DEBUG 43751[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#1], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#1]
[2018-05-30 06:18:05,154]DEBUG 43751[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#1], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#2], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#1], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#2]
[2018-05-30 06:18:05,154]DEBUG 43751[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,155]DEBUG 43752[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,155]DEBUG 43752[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,155]DEBUG 43752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,155]DEBUG 43752[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,156]DEBUG 43753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,156]DEBUG 43753[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,156]DEBUG 43753[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,156]DEBUG 43753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,156]DEBUG 43753[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,157]DEBUG 43754[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,160]DEBUG 43757[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,161]DEBUG 43758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,161]DEBUG 43758[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,161]DEBUG 43758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,161]DEBUG 43758[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,162]DEBUG 43759[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,163]DEBUG 43760[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,163]DEBUG 43760[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,163]DEBUG 43760[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,164]DEBUG 43761[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,164]DEBUG 43761[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,165]DEBUG 43762[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,167]DEBUG 43764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,167]DEBUG 43764[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,167]DEBUG 43764[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,167]DEBUG 43764[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,168]DEBUG 43765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,168]DEBUG 43765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,168]DEBUG 43765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,168]DEBUG 43765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,168]DEBUG 43765[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,169]DEBUG 43766[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,169]DEBUG 43766[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,173]DEBUG 43770[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,174]DEBUG 43771[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,176]DEBUG 43773[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,177]DEBUG 43774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,177]DEBUG 43774[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,177]DEBUG 43774[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,177]DEBUG 43774[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,178]DEBUG 43775[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,179]DEBUG 43776[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,180]DEBUG 43777[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,180]DEBUG 43777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,180]DEBUG 43777[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,181]DEBUG 43778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,181]DEBUG 43778[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,181]DEBUG 43778[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,181]DEBUG 43778[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,182]DEBUG 43779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,183]DEBUG 43780[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,184]DEBUG 43781[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,184]DEBUG 43781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,184]DEBUG 43781[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,185]DEBUG 43782[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,186]DEBUG 43783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,186]DEBUG 43783[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,186]DEBUG 43783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,186]DEBUG 43783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,187]DEBUG 43784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,188]DEBUG 43785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,188]DEBUG 43785[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,188]DEBUG 43785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,188]DEBUG 43785[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,188]DEBUG 43785[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,189]DEBUG 43786[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,190]DEBUG 43787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,190]DEBUG 43787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,191]DEBUG 43788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,191]DEBUG 43788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,191]DEBUG 43788[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,192]DEBUG 43789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,192]DEBUG 43789[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,192]DEBUG 43789[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,192]DEBUG 43789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,192]DEBUG 43789[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,193]DEBUG 43790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,194]DEBUG 43791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,195]DEBUG 43792[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,195]DEBUG 43792[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,195]DEBUG 43792[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,196]DEBUG 43793[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,196]DEBUG 43793[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,196]DEBUG 43793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=2, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,196]DEBUG 43793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=1, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#1, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,196]DEBUG 43793[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=1, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,197]DEBUG 43794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#1, id=2, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#1, order=com.softserveinc.edu.oms.domain.entities.Order#2, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,197]DEBUG 43794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=1, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,197]DEBUG 43794[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=1, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,197]DEBUG 43794[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,197]DEBUG 43794[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,198]DEBUG 43795[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,199]DEBUG 43796[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,199]DEBUG 43796[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,199]DEBUG 43796[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@dc1b4bc]
[2018-05-30 06:18:05,199]DEBUG 43796[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,273]DEBUG 43870[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,274]DEBUG 43871[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,275]DEBUG 43872[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@dc1b4bc] after transaction
[2018-05-30 06:18:05,275]DEBUG 43872[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,280]DEBUG 43877[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,281]DEBUG 43878[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,282] INFO 43879[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,283]DEBUG 43880[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@2aad0259, testMethod = testFindAll@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,283]DEBUG 43880[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,284]DEBUG 43881[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,285]DEBUG 43882[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,285]DEBUG 43882[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,286]DEBUG 43883[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,286]DEBUG 43883[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,287]DEBUG 43884[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,287]DEBUG 43884[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,288]DEBUG 43885[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,288]DEBUG 43885[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,288]DEBUG 43885[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,288]DEBUG 43885[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,289]DEBUG 43886[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,289]DEBUG 43886[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,289]DEBUG 43886[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,289]DEBUG 43886[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,290]DEBUG 43887[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,290]DEBUG 43887[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,290]DEBUG 43887[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,291]DEBUG 43888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,291]DEBUG 43888[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,291]DEBUG 43888[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,291]DEBUG 43888[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,292]DEBUG 43889[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,292]DEBUG 43889[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,293]DEBUG 43890[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af]
[2018-05-30 06:18:05,293]DEBUG 43890[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindById' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,294]DEBUG 43891[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,294]DEBUG 43891[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,294]DEBUG 43891[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,295]DEBUG 43892[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754852
[2018-05-30 06:18:05,295]DEBUG 43892[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7af68938] for Hibernate transaction
[2018-05-30 06:18:05,295]DEBUG 43892[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7af68938]
[2018-05-30 06:18:05,296]DEBUG 43893[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,296]DEBUG 43893[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,297]DEBUG 43894[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,298]DEBUG 43895[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,299] INFO 43896[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (2): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,299]DEBUG 43896[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,300]DEBUG 43897[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,302]DEBUG 43899[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,302]DEBUG 43899[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,303]DEBUG 43900[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,304]DEBUG 43901[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,305]DEBUG 43902[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,305]DEBUG 43902[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,307]DEBUG 43904[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,307]DEBUG 43904[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,308]DEBUG 43905[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,309]DEBUG 43906[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,310]DEBUG 43907[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,311]DEBUG 43908[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,312]DEBUG 43909[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,313]DEBUG 43910[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,313]DEBUG 43910[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,315]DEBUG 43912[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,315]DEBUG 43912[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,316]DEBUG 43913[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,317]DEBUG 43914[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,318]DEBUG 43915[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,319]DEBUG 43916[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,320]DEBUG 43917[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,321]DEBUG 43918[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,321]DEBUG 43918[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,323]DEBUG 43920[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,324]DEBUG 43921[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,324]DEBUG 43921[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,325]DEBUG 43922[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,327]DEBUG 43924[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:05,327]DEBUG 43924[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,328]DEBUG 43925[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,329]DEBUG 43926[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,329]DEBUG 43926[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,331]DEBUG 43928[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:05,332]DEBUG 43929[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,333]DEBUG 43930[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,333]DEBUG 43930[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,334]DEBUG 43931[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:05,336]DEBUG 43933[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:05,337]DEBUG 43934[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,338]DEBUG 43935[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,341]DEBUG 43938[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,342]DEBUG 43939[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:05,344]DEBUG 43941[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 2
[2018-05-30 06:18:05,345]DEBUG 43942[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,345]DEBUG 43942[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,346]DEBUG 43943[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,346]DEBUG 43943[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,349]DEBUG 43946[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:05,349]DEBUG 43946[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,350]DEBUG 43947[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,350]DEBUG 43947[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,350]DEBUG 43947[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,352]DEBUG 43949[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:05,352]DEBUG 43949[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,353]DEBUG 43950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,353]DEBUG 43950[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,353]DEBUG 43950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,353]DEBUG 43950[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,353]DEBUG 43950[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,354]DEBUG 43951[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,355]DEBUG 43952[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,356]DEBUG 43953[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,356]DEBUG 43953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,356]DEBUG 43953[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,357]DEBUG 43954[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,357]DEBUG 43954[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,357]DEBUG 43954[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,357]DEBUG 43954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,357]DEBUG 43954[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,358]DEBUG 43955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,358]DEBUG 43955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,358]DEBUG 43955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,358]DEBUG 43955[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,358]DEBUG 43955[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,359]DEBUG 43956[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,366]DEBUG 43963[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,366]DEBUG 43963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,366]DEBUG 43963[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,367]DEBUG 43964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,367]DEBUG 43964[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,367]DEBUG 43964[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,367]DEBUG 43964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,367]DEBUG 43964[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,368]DEBUG 43965[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,370]DEBUG 43967[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,370]DEBUG 43967[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,371]DEBUG 43968[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,371]DEBUG 43968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,371]DEBUG 43968[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,371]DEBUG 43968[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,372]DEBUG 43969[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,373]DEBUG 43970[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,373]DEBUG 43970[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,380]DEBUG 43977[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,380]DEBUG 43977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,380]DEBUG 43977[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,381]DEBUG 43978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,381]DEBUG 43978[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,381]DEBUG 43978[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,381]DEBUG 43978[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,382]DEBUG 43979[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,383]DEBUG 43980[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,386]DEBUG 43983[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,386]DEBUG 43983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,386]DEBUG 43983[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,408]DEBUG 44005[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,408]DEBUG 44005[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,408]DEBUG 44005[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,409]DEBUG 44006[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,410]DEBUG 44007[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,420]DEBUG 44017[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,421]DEBUG 44018[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,422]DEBUG 44019[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,425]DEBUG 44022[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,426]DEBUG 44023[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,427]DEBUG 44024[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,428]DEBUG 44025[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,429]DEBUG 44026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,429]DEBUG 44026[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,429]DEBUG 44026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,429]DEBUG 44026[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,429]DEBUG 44026[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=4, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=3, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=3, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#3, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=2, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=2, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#2, id=4, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#2, order=com.softserveinc.edu.oms.domain.entities.Order#4, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,430]DEBUG 44027[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,431]DEBUG 44028[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,432]DEBUG 44029[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,432]DEBUG 44029[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,432]DEBUG 44029[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7af68938]
[2018-05-30 06:18:05,432]DEBUG 44029[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,449]DEBUG 44046[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,449]DEBUG 44046[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,450]DEBUG 44047[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7af68938] after transaction
[2018-05-30 06:18:05,450]DEBUG 44047[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,450]DEBUG 44047[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,450]DEBUG 44047[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,450] INFO 44047[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = testFindById@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,451]DEBUG 44048[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@c2638af, testMethod = testFindById@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,451]DEBUG 44048[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,451]DEBUG 44048[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,451]DEBUG 44048[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,452]DEBUG 44049[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,453]DEBUG 44050[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,454]DEBUG 44051[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,455]DEBUG 44052[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554]
[2018-05-30 06:18:05,457]DEBUG 44054[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindAllWithSorting' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,458]DEBUG 44055[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,458]DEBUG 44055[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,458]DEBUG 44055[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindAllWithSorting]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,458]DEBUG 44055[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754854
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@7c4a3074] for Hibernate transaction
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c4a3074]
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,459]DEBUG 44056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,459] INFO 44056[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (3): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,460]DEBUG 44057[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,460]DEBUG 44057[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,461]DEBUG 44058[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,462]DEBUG 44059[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,462]DEBUG 44059[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,463]DEBUG 44060[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,463]DEBUG 44060[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,463]DEBUG 44060[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,464]DEBUG 44061[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,465]DEBUG 44062[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,465]DEBUG 44062[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,466]DEBUG 44063[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,466]DEBUG 44063[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,467]DEBUG 44064[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,467]DEBUG 44064[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,468]DEBUG 44065[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,468]DEBUG 44065[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,469]DEBUG 44066[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,470]DEBUG 44067[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,470]DEBUG 44067[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,471]DEBUG 44068[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,471]DEBUG 44068[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,472]DEBUG 44069[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,473]DEBUG 44070[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,473]DEBUG 44070[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,473]DEBUG 44070[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,474]DEBUG 44071[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,475]DEBUG 44072[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,475]DEBUG 44072[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,475]DEBUG 44072[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,481]DEBUG 44078[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:05,481]DEBUG 44078[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,481]DEBUG 44078[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,482]DEBUG 44079[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,482]DEBUG 44079[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,483]DEBUG 44080[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:05,484]DEBUG 44081[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,484]DEBUG 44081[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,484]DEBUG 44081[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,485]DEBUG 44082[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:05,486]DEBUG 44083[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:05,486]DEBUG 44083[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,487]DEBUG 44084[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,487]DEBUG 44084[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,487]DEBUG 44084[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:05,489]DEBUG 44086[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 3
[2018-05-30 06:18:05,489]DEBUG 44086[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,490]DEBUG 44087[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,490]DEBUG 44087[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,490]DEBUG 44087[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,491]DEBUG 44088[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:05,492]DEBUG 44089[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,492]DEBUG 44089[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,493]DEBUG 44090[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,493]DEBUG 44090[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,494]DEBUG 44091[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:05,494]DEBUG 44091[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,496]DEBUG 44093[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,496]DEBUG 44093[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,496]DEBUG 44093[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,497]DEBUG 44094[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,497]DEBUG 44094[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,497]DEBUG 44094[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,497]DEBUG 44094[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,497]DEBUG 44094[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,501]DEBUG 44098[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,502]DEBUG 44099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,502]DEBUG 44099[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,502]DEBUG 44099[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,502]DEBUG 44099[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID order by this_.Cost desc
[2018-05-30 06:18:05,504]DEBUG 44101[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,505]DEBUG 44102[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#6], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#6]
[2018-05-30 06:18:05,505]DEBUG 44102[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#3], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#5], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#3], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#5]
[2018-05-30 06:18:05,506]DEBUG 44103[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,506]DEBUG 44103[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,506]DEBUG 44103[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,506]DEBUG 44103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,506]DEBUG 44103[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,507]DEBUG 44104[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,508]DEBUG 44105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,508]DEBUG 44105[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,508]DEBUG 44105[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,508]DEBUG 44105[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,509]DEBUG 44106[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,509]DEBUG 44106[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,510]DEBUG 44107[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,510]DEBUG 44107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,510]DEBUG 44107[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,510]DEBUG 44107[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,511]DEBUG 44108[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,512]DEBUG 44109[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,513]DEBUG 44110[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,513]DEBUG 44110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,513]DEBUG 44110[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,514]DEBUG 44111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,514]DEBUG 44111[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,514]DEBUG 44111[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,514]DEBUG 44111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,514]DEBUG 44111[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,515]DEBUG 44112[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,516]DEBUG 44113[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,517]DEBUG 44114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,517]DEBUG 44114[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,517]DEBUG 44114[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,518]DEBUG 44115[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,519]DEBUG 44116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,519]DEBUG 44116[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,519]DEBUG 44116[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,519]DEBUG 44116[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,520]DEBUG 44117[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,521]DEBUG 44118[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,521]DEBUG 44118[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,521]DEBUG 44118[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,522]DEBUG 44119[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,522]DEBUG 44119[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,522]DEBUG 44119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,522]DEBUG 44119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,522]DEBUG 44119[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,523]DEBUG 44120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,523]DEBUG 44120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,523]DEBUG 44120[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,524]DEBUG 44121[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,524]DEBUG 44121[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,525]DEBUG 44122[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,526]DEBUG 44123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,526]DEBUG 44123[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,526]DEBUG 44123[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,527]DEBUG 44124[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,527]DEBUG 44124[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,527]DEBUG 44124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,527]DEBUG 44124[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,530]DEBUG 44127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,530]DEBUG 44127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,530]DEBUG 44127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,530]DEBUG 44127[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,531]DEBUG 44128[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,531]DEBUG 44128[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,532]DEBUG 44129[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,532]DEBUG 44129[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,533]DEBUG 44130[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,533]DEBUG 44130[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,533]DEBUG 44130[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,533]DEBUG 44130[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,533]DEBUG 44130[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,534]DEBUG 44131[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,535]DEBUG 44132[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,536]DEBUG 44133[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,536]DEBUG 44133[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,536]DEBUG 44133[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,537]DEBUG 44134[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,538]DEBUG 44135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,538]DEBUG 44135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,538]DEBUG 44135[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,538]DEBUG 44135[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,538]DEBUG 44135[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,539]DEBUG 44136[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,540]DEBUG 44137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,540]DEBUG 44137[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,540]DEBUG 44137[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=6, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#6, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=3, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=3, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=6, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,541]DEBUG 44138[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#3, id=5, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#3, order=com.softserveinc.edu.oms.domain.entities.Order#5, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,542]DEBUG 44139[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=5, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,542]DEBUG 44139[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,542]DEBUG 44139[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,543]DEBUG 44140[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,543]DEBUG 44140[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,544]DEBUG 44141[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,544]DEBUG 44141[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c4a3074]
[2018-05-30 06:18:05,544]DEBUG 44141[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,611]DEBUG 44208[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,612]DEBUG 44209[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,612]DEBUG 44209[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c4a3074] after transaction
[2018-05-30 06:18:05,613]DEBUG 44210[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,613]DEBUG 44210[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,614]DEBUG 44211[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,614] INFO 44211[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,615]DEBUG 44212[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@7082d554, testMethod = testFindAllWithSorting@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,616]DEBUG 44213[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,617]DEBUG 44214[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,617]DEBUG 44214[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,618]DEBUG 44215[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,618]DEBUG 44215[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,619]DEBUG 44216[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,619]DEBUG 44216[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,620]DEBUG 44217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,620]DEBUG 44217[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,620]DEBUG 44217[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,621]DEBUG 44218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,621]DEBUG 44218[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,621]DEBUG 44218[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,622]DEBUG 44219[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,622]DEBUG 44219[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,623]DEBUG 44220[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,623]DEBUG 44220[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,624]DEBUG 44221[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,624]DEBUG 44221[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,624]DEBUG 44221[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,625]DEBUG 44222[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,625]DEBUG 44222[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,626]DEBUG 44223[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,626]DEBUG 44223[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,627]DEBUG 44224[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,627]DEBUG 44224[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17]
[2018-05-30 06:18:05,628]DEBUG 44225[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testRowCountWithCriterions' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,629]DEBUG 44226[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,629]DEBUG 44226[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,630]DEBUG 44227[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testRowCountWithCriterions]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,631]DEBUG 44228[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754856
[2018-05-30 06:18:05,637]DEBUG 44234[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@44615b9f] for Hibernate transaction
[2018-05-30 06:18:05,638]DEBUG 44235[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44615b9f]
[2018-05-30 06:18:05,638]DEBUG 44235[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,639]DEBUG 44236[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,639]DEBUG 44236[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,640]DEBUG 44237[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,641] INFO 44238[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (4): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,641]DEBUG 44238[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,642]DEBUG 44239[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,644]DEBUG 44241[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,645]DEBUG 44242[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,646]DEBUG 44243[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,649]DEBUG 44246[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,650]DEBUG 44247[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,651]DEBUG 44248[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,653]DEBUG 44250[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,654]DEBUG 44251[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,655]DEBUG 44252[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,658]DEBUG 44255[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,659]DEBUG 44256[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,659]DEBUG 44256[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,662]DEBUG 44259[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,664]DEBUG 44261[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,664]DEBUG 44261[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,667]DEBUG 44264[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,668]DEBUG 44265[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,668]DEBUG 44265[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,671]DEBUG 44268[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,672]DEBUG 44269[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,673]DEBUG 44270[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,676]DEBUG 44273[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,677]DEBUG 44274[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,677]DEBUG 44274[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,679]DEBUG 44276[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,680]DEBUG 44277[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,680]DEBUG 44277[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,681]DEBUG 44278[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,683]DEBUG 44280[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:05,683]DEBUG 44280[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,684]DEBUG 44281[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,684]DEBUG 44281[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,685]DEBUG 44282[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,686]DEBUG 44283[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-30 06:18:05,687]DEBUG 44284[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,688]DEBUG 44285[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,689]DEBUG 44286[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,689]DEBUG 44286[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:05,691]DEBUG 44288[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:05,691]DEBUG 44288[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,692]DEBUG 44289[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,692]DEBUG 44289[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,693]DEBUG 44290[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:05,694]DEBUG 44291[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 4
[2018-05-30 06:18:05,695]DEBUG 44292[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,696]DEBUG 44293[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,696]DEBUG 44293[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,696]DEBUG 44293[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,699]DEBUG 44296[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:05,700]DEBUG 44297[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,700]DEBUG 44297[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,701]DEBUG 44298[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,701]DEBUG 44298[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,703]DEBUG 44300[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 8
[2018-05-30 06:18:05,704]DEBUG 44301[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,705]DEBUG 44302[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,705]DEBUG 44302[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,706]DEBUG 44303[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,706]DEBUG 44303[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,706]DEBUG 44303[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,707]DEBUG 44304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,707]DEBUG 44304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,707]DEBUG 44304[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,708]DEBUG 44305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,708]DEBUG 44305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,708]DEBUG 44305[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,709]DEBUG 44306[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,709]DEBUG 44306[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_
[2018-05-30 06:18:05,710]DEBUG 44307[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,713]DEBUG 44310[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2018-05-30 06:18:05,713]DEBUG 44310[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,713]DEBUG 44310[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,713]DEBUG 44310[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,714]DEBUG 44311[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,714]DEBUG 44311[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,715]DEBUG 44312[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,716]DEBUG 44313[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,716]DEBUG 44313[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,716]DEBUG 44313[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,716]DEBUG 44313[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,716]DEBUG 44313[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select count(*) as y0_ from OrderItems this_ where this_.OrderRef=?
[2018-05-30 06:18:05,717]DEBUG 44314[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,718]DEBUG 44315[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: 
[2018-05-30 06:18:05,718]DEBUG 44315[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,718]DEBUG 44315[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,719]DEBUG 44316[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,719]DEBUG 44316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,719]DEBUG 44316[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,719]DEBUG 44316[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,720]DEBUG 44317[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,720]DEBUG 44317[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,720]DEBUG 44317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,720]DEBUG 44317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,720]DEBUG 44317[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,721]DEBUG 44318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,721]DEBUG 44318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,721]DEBUG 44318[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,721]DEBUG 44318[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,721]DEBUG 44318[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,722]DEBUG 44319[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,723]DEBUG 44320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,723]DEBUG 44320[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,723]DEBUG 44320[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,724]DEBUG 44321[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,725]DEBUG 44322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,725]DEBUG 44322[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,725]DEBUG 44322[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,725]DEBUG 44322[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,726]DEBUG 44323[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,726]DEBUG 44323[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,727]DEBUG 44324[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,727]DEBUG 44324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,727]DEBUG 44324[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,727]DEBUG 44324[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,728]DEBUG 44325[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,729]DEBUG 44326[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,730]DEBUG 44327[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,730]DEBUG 44327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,730]DEBUG 44327[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,731]DEBUG 44328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,731]DEBUG 44328[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,731]DEBUG 44328[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,731]DEBUG 44328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,731]DEBUG 44328[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,732]DEBUG 44329[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,734]DEBUG 44331[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,734]DEBUG 44331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,734]DEBUG 44331[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,735]DEBUG 44332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,735]DEBUG 44332[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,735]DEBUG 44332[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,735]DEBUG 44332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,735]DEBUG 44332[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,736]DEBUG 44333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,736]DEBUG 44333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,736]DEBUG 44333[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,738]DEBUG 44335[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,738]DEBUG 44335[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,738]DEBUG 44335[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,740]DEBUG 44337[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,740]DEBUG 44337[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,741]DEBUG 44338[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,741]DEBUG 44338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,741]DEBUG 44338[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,741]DEBUG 44338[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,741]DEBUG 44338[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,742]DEBUG 44339[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,743]DEBUG 44340[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,744]DEBUG 44341[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,744]DEBUG 44341[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,745]DEBUG 44342[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,746]DEBUG 44343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,746]DEBUG 44343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,746]DEBUG 44343[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,746]DEBUG 44343[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,746]DEBUG 44343[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,747]DEBUG 44344[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,748]DEBUG 44345[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,748]DEBUG 44345[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,748]DEBUG 44345[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,749]DEBUG 44346[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,750]DEBUG 44347[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,750]DEBUG 44347[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,750]DEBUG 44347[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,750]DEBUG 44347[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,751]DEBUG 44348[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,752]DEBUG 44349[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,752]DEBUG 44349[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,752]DEBUG 44349[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,752]DEBUG 44349[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,752]DEBUG 44349[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=7, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#7, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#4, id=8, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#4, order=com.softserveinc.edu.oms.domain.entities.Order#8, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=4, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=8, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=7, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,753]DEBUG 44350[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=4, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,754]DEBUG 44351[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,754]DEBUG 44351[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,755]DEBUG 44352[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,755]DEBUG 44352[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,755]DEBUG 44352[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:05,755]DEBUG 44352[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44615b9f]
[2018-05-30 06:18:05,755]DEBUG 44352[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:05,906]DEBUG 44503[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:05,906]DEBUG 44503[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,907]DEBUG 44504[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@44615b9f] after transaction
[2018-05-30 06:18:05,908]DEBUG 44505[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:05,908]DEBUG 44505[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:05,909]DEBUG 44506[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:05,909] INFO 44506[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,910]DEBUG 44507[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@411b9e17, testMethod = testRowCountWithCriterions@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:05,911]DEBUG 44508[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,912]DEBUG 44509[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:05,912]DEBUG 44509[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:05,913]DEBUG 44510[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:05,913]DEBUG 44510[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:05,914]DEBUG 44511[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:05,914]DEBUG 44511[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:05,915]DEBUG 44512[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:05,915]DEBUG 44512[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:05,916]DEBUG 44513[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:05,916]DEBUG 44513[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:05,917]DEBUG 44514[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:05,917]DEBUG 44514[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:05,918]DEBUG 44515[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:05,918]DEBUG 44515[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:05,918]DEBUG 44515[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:05,919]DEBUG 44516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:05,919]DEBUG 44516[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:05,919]DEBUG 44516[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:05,925]DEBUG 44522[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:05,925]DEBUG 44522[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:05,926]DEBUG 44523[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:05,926]DEBUG 44523[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:05,927]DEBUG 44524[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:05,927]DEBUG 44524[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:05,928]DEBUG 44525[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd]
[2018-05-30 06:18:05,929]DEBUG 44526[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testPaging' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,929]DEBUG 44526[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,930]DEBUG 44527[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:05,931]DEBUG 44528[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testPaging]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:05,932]DEBUG 44529[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754859
[2018-05-30 06:18:05,932]DEBUG 44529[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@bd5192] for Hibernate transaction
[2018-05-30 06:18:05,932]DEBUG 44529[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@bd5192]
[2018-05-30 06:18:05,933]DEBUG 44530[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:05,933]DEBUG 44530[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:05,933]DEBUG 44530[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:05,934]DEBUG 44531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:05,934] INFO 44531[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (5): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:05,935]DEBUG 44532[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,936]DEBUG 44533[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:05,938]DEBUG 44535[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,939]DEBUG 44536[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,940]DEBUG 44537[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:05,942]DEBUG 44539[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,943]DEBUG 44540[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,944]DEBUG 44541[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:05,946]DEBUG 44543[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,947]DEBUG 44544[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,948]DEBUG 44545[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:05,949]DEBUG 44546[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,949]DEBUG 44546[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,950]DEBUG 44547[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:05,951]DEBUG 44548[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,951]DEBUG 44548[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,952]DEBUG 44549[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:05,953]DEBUG 44550[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,954]DEBUG 44551[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,954]DEBUG 44551[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:05,955]DEBUG 44552[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,956]DEBUG 44553[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,957]DEBUG 44554[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:05,958]DEBUG 44555[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,959]DEBUG 44556[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,959]DEBUG 44556[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:05,960]DEBUG 44557[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,961]DEBUG 44558[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,961]DEBUG 44558[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,961]DEBUG 44558[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,963]DEBUG 44560[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-30 06:18:05,963]DEBUG 44560[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,964]DEBUG 44561[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,964]DEBUG 44561[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,965]DEBUG 44562[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,967]DEBUG 44564[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-30 06:18:05,967]DEBUG 44564[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,968]DEBUG 44565[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,968]DEBUG 44565[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,968]DEBUG 44565[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:05,970]DEBUG 44567[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:05,970]DEBUG 44567[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,971]DEBUG 44568[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,971]DEBUG 44568[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,972]DEBUG 44569[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:05,974]DEBUG 44571[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 5
[2018-05-30 06:18:05,974]DEBUG 44571[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,975]DEBUG 44572[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,975]DEBUG 44572[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,975]DEBUG 44572[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,977]DEBUG 44574[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 9
[2018-05-30 06:18:05,978]DEBUG 44575[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,978]DEBUG 44575[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:05,978]DEBUG 44575[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,979]DEBUG 44576[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:05,981]DEBUG 44578[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 10
[2018-05-30 06:18:05,981]DEBUG 44578[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,982]DEBUG 44579[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,983]DEBUG 44580[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,983]DEBUG 44580[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,986]DEBUG 44583[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,986]DEBUG 44583[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,986]DEBUG 44583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,986]DEBUG 44583[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,987]DEBUG 44584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,987]DEBUG 44584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,987]DEBUG 44584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,987]DEBUG 44584[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,988]DEBUG 44585[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,988]DEBUG 44585[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?
[2018-05-30 06:18:05,990]DEBUG 44587[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,991]DEBUG 44588[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#5], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#9], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#5], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#9]
[2018-05-30 06:18:05,991]DEBUG 44588[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,992]DEBUG 44589[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,992]DEBUG 44589[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,993]DEBUG 44590[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,993]DEBUG 44590[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,994]DEBUG 44591[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:05,995]DEBUG 44592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:05,995]DEBUG 44592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:05,995]DEBUG 44592[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:05,995]DEBUG 44592[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:05,995]DEBUG 44592[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=? limit ?, ?
[2018-05-30 06:18:05,997]DEBUG 44594[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:05,998]DEBUG 44595[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:05,998]DEBUG 44595[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:05,998]DEBUG 44595[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:05,999]DEBUG 44596[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:05,999]DEBUG 44596[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:05,999]DEBUG 44596[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,000]DEBUG 44597[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,001]DEBUG 44598[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,001]DEBUG 44598[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,001]DEBUG 44598[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,001]DEBUG 44598[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:06,012]DEBUG 44609[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,013]DEBUG 44610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,013]DEBUG 44610[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,013]DEBUG 44610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,013]DEBUG 44610[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,014]DEBUG 44611[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,015]DEBUG 44612[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,015]DEBUG 44612[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:06,021]DEBUG 44618[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,022]DEBUG 44619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,022]DEBUG 44619[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,022]DEBUG 44619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,022]DEBUG 44619[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,023]DEBUG 44620[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,024]DEBUG 44621[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,024]DEBUG 44621[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,024]DEBUG 44621[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:06,025]DEBUG 44622[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,026]DEBUG 44623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,026]DEBUG 44623[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,026]DEBUG 44623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,026]DEBUG 44623[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,027]DEBUG 44624[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,027]DEBUG 44624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,027]DEBUG 44624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,027]DEBUG 44624[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,030]DEBUG 44627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,030]DEBUG 44627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,030]DEBUG 44627[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,031]DEBUG 44628[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,031]DEBUG 44628[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:06,032]DEBUG 44629[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,032]DEBUG 44629[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,033]DEBUG 44630[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,033]DEBUG 44630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,033]DEBUG 44630[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,033]DEBUG 44630[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,034]DEBUG 44631[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,035]DEBUG 44632[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,035]DEBUG 44632[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:06,036]DEBUG 44633[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,036]DEBUG 44633[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,037]DEBUG 44634[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,037]DEBUG 44634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,037]DEBUG 44634[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,037]DEBUG 44634[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,037]DEBUG 44634[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,038]DEBUG 44635[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,039]DEBUG 44636[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:06,040]DEBUG 44637[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,040]DEBUG 44637[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,041]DEBUG 44638[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,041]DEBUG 44638[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,041]DEBUG 44638[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,041]DEBUG 44638[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,041]DEBUG 44638[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,042]DEBUG 44639[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,043]DEBUG 44640[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:06,044]DEBUG 44641[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,044]DEBUG 44641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,044]DEBUG 44641[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,045]DEBUG 44642[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,046]DEBUG 44643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,046]DEBUG 44643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,046]DEBUG 44643[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,046]DEBUG 44643[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,046]DEBUG 44643[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:06,047]DEBUG 44644[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,047]DEBUG 44644[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,047]DEBUG 44644[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,048]DEBUG 44645[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,048]DEBUG 44645[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,048]DEBUG 44645[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,048]DEBUG 44645[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=5, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,048]DEBUG 44645[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=10, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=9, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#9, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=9, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#5, id=10, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#5, order=com.softserveinc.edu.oms.domain.entities.Order#10, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=5, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,049]DEBUG 44646[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:06,050]DEBUG 44647[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,051]DEBUG 44648[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,051]DEBUG 44648[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:06,051]DEBUG 44648[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@bd5192]
[2018-05-30 06:18:06,051]DEBUG 44648[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:06,053]DEBUG 44650[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:06,053]DEBUG 44650[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,053]DEBUG 44650[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@bd5192] after transaction
[2018-05-30 06:18:06,054]DEBUG 44651[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:06,054]DEBUG 44651[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:06,054]DEBUG 44651[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,054] INFO 44651[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = testPaging@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,055]DEBUG 44652[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@3949c7cd, testMethod = testPaging@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:06,055]DEBUG 44652[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:06,055]DEBUG 44652[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:06,055]DEBUG 44652[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:06,055]DEBUG 44652[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:06,057]DEBUG 44654[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:06,058]DEBUG 44655[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:06,059]DEBUG 44656[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:06,060]DEBUG 44657[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf]
[2018-05-30 06:18:06,061]DEBUG 44658[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testFindByOrder' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:06,061]DEBUG 44658[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,061]DEBUG 44658[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:06,061]DEBUG 44658[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testFindByOrder]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:06,061]DEBUG 44658[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754860
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@31cd249c] for Hibernate transaction
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31cd249c]
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:06,062]DEBUG 44659[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,062] INFO 44659[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (6): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:06,063]DEBUG 44660[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,063]DEBUG 44660[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:06,064]DEBUG 44661[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,064]DEBUG 44661[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,064]DEBUG 44661[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:06,065]DEBUG 44662[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,066]DEBUG 44663[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,066]DEBUG 44663[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:06,067]DEBUG 44664[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,067]DEBUG 44664[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,068]DEBUG 44665[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:06,068]DEBUG 44665[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,069]DEBUG 44666[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,069]DEBUG 44666[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:06,070]DEBUG 44667[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,070]DEBUG 44667[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,071]DEBUG 44668[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:06,072]DEBUG 44669[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,072]DEBUG 44669[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,073]DEBUG 44670[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:06,074]DEBUG 44671[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,074]DEBUG 44671[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,075]DEBUG 44672[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:06,076]DEBUG 44673[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,076]DEBUG 44673[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,076]DEBUG 44673[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:06,077]DEBUG 44674[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,078]DEBUG 44675[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,078]DEBUG 44675[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,078]DEBUG 44675[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,080]DEBUG 44677[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-30 06:18:06,080]DEBUG 44677[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,081]DEBUG 44678[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,081]DEBUG 44678[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,081]DEBUG 44678[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,083]DEBUG 44680[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-30 06:18:06,083]DEBUG 44680[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,084]DEBUG 44681[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,084]DEBUG 44681[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,084]DEBUG 44681[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:06,086]DEBUG 44683[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:06,086]DEBUG 44683[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,087]DEBUG 44684[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,087]DEBUG 44684[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,087]DEBUG 44684[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:06,088]DEBUG 44685[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 6
[2018-05-30 06:18:06,089]DEBUG 44686[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,089]DEBUG 44686[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,089]DEBUG 44686[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,092]DEBUG 44689[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,093]DEBUG 44690[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 11
[2018-05-30 06:18:06,094]DEBUG 44691[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,094]DEBUG 44691[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,094]DEBUG 44691[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,095]DEBUG 44692[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,096]DEBUG 44693[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 12
[2018-05-30 06:18:06,097]DEBUG 44694[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,098]DEBUG 44695[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,099]DEBUG 44696[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,099]DEBUG 44696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,099]DEBUG 44696[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,100]DEBUG 44697[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,101]DEBUG 44698[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,101]DEBUG 44698[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,101]DEBUG 44698[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - select this_.ID as ID8_6_, this_.Cost as Cost8_6_, this_.DimensionRef as Dimensio5_8_6_, this_.ItemPrice as ItemPrice8_6_, this_.OrderRef as OrderRef8_6_, this_.ProductRef as ProductRef8_6_, this_.Quantity as Quantity8_6_, dimension2_.ID as ID7_0_, dimension2_.DimensionName as Dimensio2_7_0_, dimension2_.NumberOfProducts as NumberOf3_7_0_, order3_.ID as ID5_1_, order3_.Assigne as Assigne5_1_, order3_.Customer as Customer5_1_, order3_.DeliveryDate as Delivery2_5_1_, order3_.IsGift as IsGift5_1_, order3_.MaxDiscount as MaxDisco4_5_1_, order3_.OrderDate as OrderDate5_1_, order3_.OrderName as OrderName5_1_, order3_.OrderNumber as OrderNum7_5_1_, order3_.OrderStatusRef as OrderSt12_5_1_, order3_.PreferableDeliveryDate as Preferab8_5_1_, order3_.TotalPrice as TotalPrice5_1_, user4_.ID as ID3_2_, user4_.IsUserActive as IsUserAc2_3_2_, user4_.Balance as Balance3_2_, user4_.CustomerTypeRef as Customer9_3_2_, user4_.Email as Email3_2_, user4_.FirstName as FirstName3_2_, user4_.LastName as LastName3_2_, user4_.Login as Login3_2_, user4_.Password as Password3_2_, user4_.RegionRef as RegionRef3_2_, user4_.RoleRef as RoleRef3_2_, user5_.ID as ID3_3_, user5_.IsUserActive as IsUserAc2_3_3_, user5_.Balance as Balance3_3_, user5_.CustomerTypeRef as Customer9_3_3_, user5_.Email as Email3_3_, user5_.FirstName as FirstName3_3_, user5_.LastName as LastName3_3_, user5_.Login as Login3_3_, user5_.Password as Password3_3_, user5_.RegionRef as RegionRef3_3_, user5_.RoleRef as RoleRef3_3_, orderstatu6_.ID as ID4_4_, orderstatu6_.OrederStatusName as OrederSt2_4_4_, product7_.ID as ID6_5_, product7_.IsProductActive as IsProduc2_6_5_, product7_.ProductDescription as ProductD3_6_5_, product7_.ProductName as ProductN4_6_5_, product7_.ProductPrice as ProductP5_6_5_ from OrderItems this_ left outer join Dimensions dimension2_ on this_.DimensionRef=dimension2_.ID left outer join Orders order3_ on this_.OrderRef=order3_.ID left outer join Users user4_ on order3_.Assigne=user4_.ID left outer join Users user5_ on order3_.Customer=user5_.ID left outer join OrderStatuses orderstatu6_ on order3_.OrderStatusRef=orderstatu6_.ID left outer join Products product7_ on this_.ProductRef=product7_.ID where this_.OrderRef=?
[2018-05-30 06:18:06,103]DEBUG 44700[main] - org.hibernate.jdbc.AbstractBatcher.logOpenResults(AbstractBatcher.java:426) - about to open ResultSet (open ResultSets: 0, globally: 0)
[2018-05-30 06:18:06,104]DEBUG 44701[main] - org.hibernate.loader.Loader.getRow(Loader.java:1322) - result row: EntityKey[com.softserveinc.edu.oms.domain.entities.Dimension#6], EntityKey[com.softserveinc.edu.oms.domain.entities.Order#11], null, null, null, EntityKey[com.softserveinc.edu.oms.domain.entities.Product#6], EntityKey[com.softserveinc.edu.oms.domain.entities.OrderItem#11]
[2018-05-30 06:18:06,105]DEBUG 44702[main] - org.hibernate.jdbc.AbstractBatcher.logCloseResults(AbstractBatcher.java:433) - about to close ResultSet (open ResultSets: 1, globally: 1)
[2018-05-30 06:18:06,105]DEBUG 44702[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,105]DEBUG 44702[main] - org.hibernate.engine.StatefulPersistenceContext.initializeNonLazyCollections(StatefulPersistenceContext.java:893) - initializing non-lazy collections
[2018-05-30 06:18:06,105]DEBUG 44702[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,106]DEBUG 44703[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,107]DEBUG 44704[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:06,114]DEBUG 44711[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,114]DEBUG 44711[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,115]DEBUG 44712[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,115]DEBUG 44712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,115]DEBUG 44712[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,115]DEBUG 44712[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,116]DEBUG 44713[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:06,118]DEBUG 44715[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,118]DEBUG 44715[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,119]DEBUG 44716[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,119]DEBUG 44716[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,119]DEBUG 44716[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,119]DEBUG 44716[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,119]DEBUG 44716[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,120]DEBUG 44717[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,121]DEBUG 44718[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:06,122]DEBUG 44719[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,122]DEBUG 44719[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,122]DEBUG 44719[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,123]DEBUG 44720[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,123]DEBUG 44720[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,123]DEBUG 44720[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,123]DEBUG 44720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,123]DEBUG 44720[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,124]DEBUG 44721[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:06,125]DEBUG 44722[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,127]DEBUG 44724[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,128]DEBUG 44725[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,128]DEBUG 44725[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,128]DEBUG 44725[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,128]DEBUG 44725[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,128]DEBUG 44725[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,129]DEBUG 44726[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,130]DEBUG 44727[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:06,131]DEBUG 44728[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,131]DEBUG 44728[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,131]DEBUG 44728[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,131]DEBUG 44728[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,132]DEBUG 44729[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,133]DEBUG 44730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,133]DEBUG 44730[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,133]DEBUG 44730[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,133]DEBUG 44730[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:06,134]DEBUG 44731[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,134]DEBUG 44731[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,134]DEBUG 44731[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,135]DEBUG 44732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,135]DEBUG 44732[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,135]DEBUG 44732[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,135]DEBUG 44732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,135]DEBUG 44732[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,136]DEBUG 44733[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:06,137]DEBUG 44734[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,138]DEBUG 44735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,138]DEBUG 44735[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,138]DEBUG 44735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,138]DEBUG 44735[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,138]DEBUG 44735[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,139]DEBUG 44736[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,140]DEBUG 44737[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,140]DEBUG 44737[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:06,141]DEBUG 44738[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,141]DEBUG 44738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,141]DEBUG 44738[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,141]DEBUG 44738[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=12, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=6, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=11, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,142]DEBUG 44739[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=11, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#11, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,143]DEBUG 44740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=6, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,143]DEBUG 44740[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#6, id=12, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#6, order=com.softserveinc.edu.oms.domain.entities.Order#12, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,143]DEBUG 44740[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,143]DEBUG 44740[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:06,144]DEBUG 44741[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,144]DEBUG 44741[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,145]DEBUG 44742[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:06,145]DEBUG 44742[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31cd249c]
[2018-05-30 06:18:06,145]DEBUG 44742[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:06,172]DEBUG 44769[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:06,173]DEBUG 44770[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,173]DEBUG 44770[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@31cd249c] after transaction
[2018-05-30 06:18:06,173]DEBUG 44770[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:06,173]DEBUG 44770[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:06,173]DEBUG 44770[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,174] INFO 44771[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]]
[2018-05-30 06:18:06,174]DEBUG 44771[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@367acabf, testMethod = testFindByOrder@OrderItemDaoTest, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:06,174]DEBUG 44771[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:68) - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:06,174]DEBUG 44771[main] - org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:80) - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:73) - Performing dependency injection for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = [null], testException = [null]]].
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.CustomerTypeDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.customerTypeDao
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'customerTypeDao'
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.DimensionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.dimensionDao
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'dimensionDao'
[2018-05-30 06:18:06,175]DEBUG 44772[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderDao
[2018-05-30 06:18:06,176]DEBUG 44773[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderDao'
[2018-05-30 06:18:06,176]DEBUG 44773[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderItemDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderItemDao
[2018-05-30 06:18:06,177]DEBUG 44774[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderItemDao'
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.OrderStatusDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.orderStatusDao
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'orderStatusDao'
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.ProductDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.productDao
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'productDao'
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RegionDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.regionDao
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'regionDao'
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.RoleDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.roleDao
[2018-05-30 06:18:06,178]DEBUG 44775[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'roleDao'
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected com.softserveinc.edu.oms.persistence.dao.concrete.UserDao com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.userDao
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'userDao'
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:82) - Processing injected method of bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest': AutowiredFieldElement for protected org.hibernate.SessionFactory com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase.sessionFactory
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'sessionFactory'
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
[2018-05-30 06:18:06,179]DEBUG 44776[main] - org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:537) - Creating implicit proxy for bean 'com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest' with 0 common interceptors and 1 specific interceptors
[2018-05-30 06:18:06,180]DEBUG 44777[main] - org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:150) - Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10]
[2018-05-30 06:18:06,180]DEBUG 44777[main] - org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource.getTransactionAttribute(AbstractFallbackTransactionAttributeSource.java:106) - Adding transactional method 'testContextFile' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:06,180]DEBUG 44777[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.beforeTestMethod(TransactionalTestExecutionListener.java:146) - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:06,180]DEBUG 44777[main] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'transactionManager'
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:365) - Creating new transaction with name [testContextFile]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.hibernate.impl.SessionImpl.<init>(SessionImpl.java:265) - opened session at timestamp: 15276754861
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:493) - Opened new Session [org.hibernate.impl.SessionImpl@36b5e8fe] for Hibernate transaction
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doBegin(HibernateTransactionManager.java:504) - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36b5e8fe]
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:78) - begin
[2018-05-30 06:18:06,181]DEBUG 44778[main] - org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:444) - opening JDBC connection
[2018-05-30 06:18:06,182]DEBUG 44779[main] - org.hibernate.transaction.JDBCTransaction.begin(JDBCTransaction.java:83) - current autocommit status: false
[2018-05-30 06:18:06,182]DEBUG 44779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:06,182] INFO 44779[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.startNewTransaction(TransactionalTestExecutionListener.java:272) - Began transaction (7): transaction manager [org.springframework.orm.hibernate3.HibernateTransactionManager@3019a3f7]; rollback [true]
[2018-05-30 06:18:06,182]DEBUG 44779[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,182]DEBUG 44779[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:06,183]DEBUG 44780[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,184]DEBUG 44781[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,184]DEBUG 44781[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:06,185]DEBUG 44782[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,186]DEBUG 44783[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,186]DEBUG 44783[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:06,187]DEBUG 44784[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,188]DEBUG 44785[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,188]DEBUG 44785[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:06,189]DEBUG 44786[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,190]DEBUG 44787[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,190]DEBUG 44787[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:06,191]DEBUG 44788[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,191]DEBUG 44788[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,191]DEBUG 44788[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:06,192]DEBUG 44789[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,193]DEBUG 44790[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,193]DEBUG 44790[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:06,194]DEBUG 44791[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,194]DEBUG 44791[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,194]DEBUG 44791[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:06,195]DEBUG 44792[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,196]DEBUG 44793[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,196]DEBUG 44793[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:06,197]DEBUG 44794[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,197]DEBUG 44794[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,198]DEBUG 44795[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,198]DEBUG 44795[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,206]DEBUG 44803[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-30 06:18:06,206]DEBUG 44803[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,207]DEBUG 44804[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,207]DEBUG 44804[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,207]DEBUG 44804[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Orders (Assigne, Customer, DeliveryDate, IsGift, MaxDiscount, OrderDate, OrderName, OrderNumber, OrderStatusRef, PreferableDeliveryDate, TotalPrice) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,217]DEBUG 44814[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-30 06:18:06,217]DEBUG 44814[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,218]DEBUG 44815[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,218]DEBUG 44815[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,218]DEBUG 44815[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Products (IsProductActive, ProductDescription, ProductName, ProductPrice) values (?, ?, ?, ?)
[2018-05-30 06:18:06,220]DEBUG 44817[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:06,220]DEBUG 44817[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,220]DEBUG 44817[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,220]DEBUG 44817[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,221]DEBUG 44818[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into Dimensions (DimensionName, NumberOfProducts) values (?, ?)
[2018-05-30 06:18:06,222]DEBUG 44819[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 7
[2018-05-30 06:18:06,222]DEBUG 44819[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,222]DEBUG 44819[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,223]DEBUG 44820[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,223]DEBUG 44820[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,224]DEBUG 44821[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 13
[2018-05-30 06:18:06,224]DEBUG 44821[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,225]DEBUG 44822[main] - org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:319) - executing identity-insert immediately
[2018-05-30 06:18:06,227]DEBUG 44824[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,228]DEBUG 44825[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - insert into OrderItems (Cost, DimensionRef, ItemPrice, OrderRef, ProductRef, Quantity) values (?, ?, ?, ?, ?, ?)
[2018-05-30 06:18:06,229]DEBUG 44826[main] - org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:87) - Natively generated identity: 14
[2018-05-30 06:18:06,229]DEBUG 44826[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,230]DEBUG 44827[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,230]DEBUG 44827[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,230]DEBUG 44827[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,231]DEBUG 44828[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,232]DEBUG 44829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,232]DEBUG 44829[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,232]DEBUG 44829[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,232]DEBUG 44829[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderItems
[2018-05-30 06:18:06,234]DEBUG 44831[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,234]DEBUG 44831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,234]DEBUG 44831[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,235]DEBUG 44832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,235]DEBUG 44832[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,235]DEBUG 44832[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,235]DEBUG 44832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,235]DEBUG 44832[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,236]DEBUG 44833[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Dimensions
[2018-05-30 06:18:06,237]DEBUG 44834[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,238]DEBUG 44835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,238]DEBUG 44835[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,238]DEBUG 44835[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,239]DEBUG 44836[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,240]DEBUG 44837[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,240]DEBUG 44837[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,240]DEBUG 44837[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Products
[2018-05-30 06:18:06,241]DEBUG 44838[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,241]DEBUG 44838[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,242]DEBUG 44839[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,242]DEBUG 44839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,242]DEBUG 44839[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,242]DEBUG 44839[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,242]DEBUG 44839[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,243]DEBUG 44840[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Orders
[2018-05-30 06:18:06,246]DEBUG 44843[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,246]DEBUG 44843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,246]DEBUG 44843[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,247]DEBUG 44844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,247]DEBUG 44844[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,247]DEBUG 44844[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,247]DEBUG 44844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,247]DEBUG 44844[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,248]DEBUG 44845[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from OrderStatuses
[2018-05-30 06:18:06,250]DEBUG 44847[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,250]DEBUG 44847[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,251]DEBUG 44848[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,251]DEBUG 44848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,251]DEBUG 44848[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,251]DEBUG 44848[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,252]DEBUG 44849[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,253]DEBUG 44850[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Users
[2018-05-30 06:18:06,254]DEBUG 44851[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,254]DEBUG 44851[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,256]DEBUG 44853[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,256]DEBUG 44853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,256]DEBUG 44853[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,257]DEBUG 44854[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,258]DEBUG 44855[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,258]DEBUG 44855[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from CustomerTypes
[2018-05-30 06:18:06,259]DEBUG 44856[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,259]DEBUG 44856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,259]DEBUG 44856[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,260]DEBUG 44857[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,261]DEBUG 44858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,261]DEBUG 44858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,261]DEBUG 44858[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,261]DEBUG 44858[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,261]DEBUG 44858[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Regions
[2018-05-30 06:18:06,262]DEBUG 44859[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,263]DEBUG 44860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:134) - processing flush-time cascades
[2018-05-30 06:18:06,263]DEBUG 44860[main] - org.hibernate.event.def.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:177) - dirty checking collections
[2018-05-30 06:18:06,263]DEBUG 44860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:108) - Flushed: 0 insertions, 0 updates, 0 deletions to 6 objects
[2018-05-30 06:18:06,263]DEBUG 44860[main] - org.hibernate.event.def.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:114) - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:106) - listing entities:
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Product{id=7, productDescription=ProductDescription, active=null, productPrice=1.0, productName=ProductName}
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=14, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#14, quantity=2, itemPrice=1.0, cost=10.0}
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Dimension{id=7, dimensionName=dimensionName, numberOfProduct=5}
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=13, orderDate=null, orderNumber=100002, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.OrderItem{product=com.softserveinc.edu.oms.domain.entities.Product#7, id=13, dimension=com.softserveinc.edu.oms.domain.entities.Dimension#7, order=com.softserveinc.edu.oms.domain.entities.Order#13, quantity=1, itemPrice=1.0, cost=5.0}
[2018-05-30 06:18:06,264]DEBUG 44861[main] - org.hibernate.pretty.Printer.toString(Printer.java:113) - com.softserveinc.edu.oms.domain.entities.Order{isGift=null, assigne=null, id=14, orderDate=null, orderNumber=100001, orderName=null, maxDiscount=0, deliveryDate=null, customer=null, orderStatus=null, totalPrice=null, preferableDeliveryDate=null}
[2018-05-30 06:18:06,265]DEBUG 44862[main] - org.hibernate.jdbc.AbstractBatcher.logOpenPreparedStatement(AbstractBatcher.java:410) - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
[2018-05-30 06:18:06,265]DEBUG 44862[main] - org.hibernate.jdbc.util.SQLStatementLogger.logStatement(SQLStatementLogger.java:111) - delete from Roles
[2018-05-30 06:18:06,266]DEBUG 44863[main] - org.hibernate.jdbc.AbstractBatcher.logClosePreparedStatement(AbstractBatcher.java:418) - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
[2018-05-30 06:18:06,267]DEBUG 44864[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.isRollback(TransactionalTestExecutionListener.java:354) - No method-level @Rollback override: using default rollback [true] for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:06,267]DEBUG 44864[main] - org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:843) - Initiating transaction rollback
[2018-05-30 06:18:06,267]DEBUG 44864[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doRollback(HibernateTransactionManager.java:672) - Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36b5e8fe]
[2018-05-30 06:18:06,267]DEBUG 44864[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:182) - rollback
[2018-05-30 06:18:06,351]DEBUG 44948[main] - org.hibernate.transaction.JDBCTransaction.rollback(JDBCTransaction.java:193) - rolled back JDBC Connection
[2018-05-30 06:18:06,352]DEBUG 44949[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,352]DEBUG 44949[main] - org.springframework.orm.hibernate3.HibernateTransactionManager.doCleanupAfterCompletion(HibernateTransactionManager.java:734) - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36b5e8fe] after transaction
[2018-05-30 06:18:06,352]DEBUG 44949[main] - org.springframework.orm.hibernate3.SessionFactoryUtils.closeSession(SessionFactoryUtils.java:789) - Closing Hibernate Session
[2018-05-30 06:18:06,353]DEBUG 44950[main] - org.hibernate.jdbc.ConnectionManager.closeConnection(ConnectionManager.java:464) - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
[2018-05-30 06:18:06,353]DEBUG 44950[main] - org.hibernate.jdbc.ConnectionManager.afterTransaction(ConnectionManager.java:325) - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
[2018-05-30 06:18:06,354] INFO 44951[main] - org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292) - Rolled back transaction after test execution for test context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]]
[2018-05-30 06:18:06,355]DEBUG 44952[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestMethod(DirtiesContextTestExecutionListener.java:86) - After test method: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest@ac49d10, testMethod = testContextFile@CleanUpDBTestCase, testException = [null]]], class dirties context [false], class mode [null], method dirties context [false].
[2018-05-30 06:18:06,356]DEBUG 44953[main] - org.springframework.test.context.support.DirtiesContextTestExecutionListener.afterTestClass(DirtiesContextTestExecutionListener.java:113) - After test class: context [[TestContext@20fca4e2 testClass = OrderItemDaoTest, locations = array<String>['classpath:testApplicationContex.xml'], testInstance = [null], testMethod = [null], testException = [null]]], dirtiesContext [false].
[2018-05-30 06:18:07,493] INFO 46090[Thread-0] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@e6a49f5: startup date [Wed May 30 06:17:23 EDT 2018]; root of context hierarchy
[2018-05-30 06:18:07,496]DEBUG 46093[Thread-0] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-30 06:18:07,497] INFO 46094[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@35ace47d: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-30 06:18:07,497]DEBUG 46094[Thread-0] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'productDao': [com.softserveinc.edu.oms.persistence.dao.CleanUpDBTestCase, com.softserveinc.edu.oms.persistence.dao.DimensionDaoTest, com.softserveinc.edu.oms.persistence.dao.CustomerTypeDaoTest, com.softserveinc.edu.oms.persistence.dao.RegionDaoTest, com.softserveinc.edu.oms.persistence.dao.ProductDaoTest, com.softserveinc.edu.oms.persistence.dao.UserDaoTest, com.softserveinc.edu.oms.persistence.dao.OrderDaoTest, com.softserveinc.edu.oms.persistence.dao.RoleDAOTest, com.softserveinc.edu.oms.persistence.dao.OrderItemDaoTest]
[2018-05-30 06:18:07,500] INFO 46097[Thread-1] - org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1002) - Closing org.springframework.context.support.GenericApplicationContext@58ed6fa3: startup date [Wed May 30 06:17:58 EDT 2018]; root of context hierarchy
[2018-05-30 06:18:07,503]DEBUG 46100[Thread-1] - org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:242) - Returning cached instance of singleton bean 'lifecycleProcessor'
[2018-05-30 06:18:07,503] INFO 46100[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:422) - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@76321db8: defining beans [transactionManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,creditCardTypeDao,orderItemDao,customerTypeDao,regionDao,roleDao,dimensionDao,orderDao,userDao,productDao,orderStatusDao,sessionFactory]; root of factory hierarchy
[2018-05-30 06:18:07,504]DEBUG 46101[Thread-1] - org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:477) - Retrieved dependent beans for bean 'productDao': [com.softserveinc.edu.oms.persistence.dao.OrderStatusDaoTest]
[2018-05-30 06:18:07,567]DEBUG 46164[Thread-0] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2018-05-30 06:18:07,568] INFO 46165[Thread-0] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2018-05-30 06:18:07,567]DEBUG 46164[Thread-1] - org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:172) - Invoking destroy() on bean with name 'sessionFactory'
[2018-05-30 06:18:07,569] INFO 46166[Thread-0] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2018-05-30 06:18:07,569] INFO 46166[Thread-1] - org.springframework.orm.hibernate3.AbstractSessionFactoryBean.destroy(AbstractSessionFactoryBean.java:246) - Closing Hibernate SessionFactory
[2018-05-30 06:18:07,570] INFO 46167[Thread-1] - org.hibernate.impl.SessionFactoryImpl.close(SessionFactoryImpl.java:927) - closing
[2018-05-30 06:18:07,569] INFO 46166[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2018-05-30 06:18:07,572]DEBUG 46169[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2018-05-30 06:18:07,572] INFO 46169[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2018-05-30 06:18:07,570] INFO 46167[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:234) - Running hbm2ddl schema export
[2018-05-30 06:18:07,575]DEBUG 46172[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:252) - import file not found: /import.sql
[2018-05-30 06:18:07,575] INFO 46172[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:262) - exporting generated schema to database
[2018-05-30 06:18:07,589]DEBUG 46186[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-30 06:18:07,591]DEBUG 46188[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-30 06:18:07,850]DEBUG 46447[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-30 06:18:07,934]DEBUG 46531[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD3262E1ABF7
[2018-05-30 06:18:07,935]DEBUG 46532[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:07,935]DEBUG 46532[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-30 06:18:08,011]DEBUG 46608[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-30 06:18:08,021]DEBUG 46618[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32A6376397
[2018-05-30 06:18:08,022]DEBUG 46619[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,022]DEBUG 46619[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-30 06:18:08,039]DEBUG 46636[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-30 06:18:08,052]DEBUG 46649[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table OrderItems drop foreign key FKA2B1AD32BCDB3C97
[2018-05-30 06:18:08,052]DEBUG 46649[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/OrderItems' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,053]DEBUG 46650[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-30 06:18:08,061]DEBUG 46658[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-30 06:18:08,101]DEBUG 46698[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05990DB877
[2018-05-30 06:18:08,102]DEBUG 46699[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,102]DEBUG 46699[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-30 06:18:08,168]DEBUG 46765[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-30 06:18:08,180]DEBUG 46777[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05C0F431DD
[2018-05-30 06:18:08,180]DEBUG 46777[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,181]DEBUG 46778[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Orders drop foreign key FK8D444F05F161465
[2018-05-30 06:18:08,199]DEBUG 46796[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-30 06:18:08,209]DEBUG 46806[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Orders drop foreign key FK8D444F05F161465
[2018-05-30 06:18:08,209]DEBUG 46806[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Orders' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,210]DEBUG 46807[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-30 06:18:08,219]DEBUG 46816[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-30 06:18:08,368]DEBUG 46965[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE83D05058F
[2018-05-30 06:18:08,369]DEBUG 46966[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,369]DEBUG 46966[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-30 06:18:08,412]DEBUG 47009[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-30 06:18:08,423]DEBUG 47020[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE89AEF426F
[2018-05-30 06:18:08,423]DEBUG 47020[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,423]DEBUG 47020[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-30 06:18:08,440]DEBUG 47037[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-30 06:18:08,446]DEBUG 47043[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-30 06:18:08,450]DEBUG 47047[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:400) - Unsuccessful: alter table Users drop foreign key FK4E39DE8FEAD4DCF
[2018-05-30 06:18:08,451]DEBUG 47048[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.drop(SchemaExport.java:401) - Error on rename of './oms/Users' to './oms/#sql2-717-7' (errno: 152)
[2018-05-30 06:18:08,451]DEBUG 47048[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CardType
[2018-05-30 06:18:08,454]DEBUG 47051[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-30 06:18:08,455]DEBUG 47052[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists CustomerTypes
[2018-05-30 06:18:08,459]DEBUG 47056[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Dimensions
[2018-05-30 06:18:08,461]DEBUG 47058[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-30 06:18:08,464]DEBUG 47061[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderItems
[2018-05-30 06:18:08,466]DEBUG 47063[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-30 06:18:08,468]DEBUG 47065[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists OrderStatuses
[2018-05-30 06:18:08,471]DEBUG 47068[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-30 06:18:08,471]DEBUG 47068[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Orders
[2018-05-30 06:18:08,474]DEBUG 47071[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-30 06:18:08,475]DEBUG 47072[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Products
[2018-05-30 06:18:08,478]DEBUG 47075[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-30 06:18:08,479]DEBUG 47076[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Regions
[2018-05-30 06:18:08,482]DEBUG 47079[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-30 06:18:08,483]DEBUG 47080[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Roles
[2018-05-30 06:18:08,486]DEBUG 47083[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-30 06:18:08,487]DEBUG 47084[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:415) - drop table if exists Users
[2018-05-30 06:18:08,490] INFO 47087[Thread-0] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-30 06:18:08,492] INFO 47089[Thread-1] - org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:281) - schema export complete
[2018-05-30 06:18:08,492] INFO 47089[Thread-0] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://192.168.0.109:3306/oms
[2018-05-30 06:18:08,493] INFO 47090[Thread-1] - org.hibernate.connection.DriverManagerConnectionProvider.close(DriverManagerConnectionProvider.java:170) - cleaning up connection pool: jdbc:mysql://192.168.0.109:3306/oms
